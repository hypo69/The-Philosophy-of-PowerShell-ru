{
  "post_title": "[:en]PowerShell Philosophy. Part 0. What Existed Before PowerShell? And Part 1. Objects Instead of Text[:ru]–§–∏–ª–æ—Å–æ—Ñ–∏—è PowerShell. –ß–∞—Å—Ç—å 0. –ß—Ç–æ –±—ã–ª–æ –¥–æ PowerShell? –ß–∞—Å—Ç—å 1. –û–±—ä–µ–∫—Ç—ã –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞[:]",
  "post_name": "powershell-philosophy-before-powershell-objects-instead-of-text",
  "post_content": "[:en]<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Part 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>What existed before PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In 1981, MS-DOS 1.0 was released with the command interpreter <code>COMMAND.COM</code>. For task automation, <strong>batch files (<code>.bat</code>)</strong> were used ‚Äî simple text files containing a sequence of console commands. This presented a striking asceticism of the command line compared to POSIX-compatible systems, where the <strong>Bourne shell (<code>sh</code>)</strong> had already existed since 1979.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Shell Market Status at the Time of <strong>MS-DOS 1.0</strong> Release (August 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Here is a summary table of popular operating systems of that time and their shell support (<code>sh</code>, <code>csh</code>, etc.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Operating System</th><th>Shell Support (<code>sh</code>, <code>csh</code>, etc.)</th><th>Comment</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>Last classic Bell Labs UNIX, widely adopted</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>UNIX version for VAX architecture</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>University UNIX branch from Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>First commercial version from AT&amp;T, predecessor to System V</td></tr><tr><td><strong>Xenix (from Microsoft)</strong></td><td><code>sh</code></td><td>Licensed UNIX version, sold by Microsoft since 1980</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>UNIX-like OS for PDP-11 and Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (similar)</td><td>Inexpensive UNIX alternative for PCs</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (No <code>sh</code>, only simplest CLI)</td><td>Not UNIX, most popular OS for 8-bit PCs</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (only <code>COMMAND.COM</code>)</td><td>Minimal command shell, no scripts or pipes</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° What are <code>sh</code> and <code>csh</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, the primary UNIX script interpreter since 1977.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, an improved shell with C-like syntax and conveniences for interactive work.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>These shells <strong>supported redirects, pipes, variables, functions, and conditionals</strong> ‚Äî everything that made UNIX a powerful automation tool.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft focused on <strong>inexpensive 16-bit IBM PCs</strong>, which had <strong>little memory</strong> (typically 64‚Äì256 KB), lacked multitasking, and were intended for <strong>home and office use</strong>, rather than servers. UNIX was proprietary, required complex architecture and experience, and accountants and engineers, not system administrators, needed a fast and simple OS.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead of a complex <code>sh</code>, the DOS interface presented a single <code>command.com</code> file with a meager set of internal commands (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\">dir, copy, del, etc.</a>) without functions, loops, or modules.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There were also external commands ‚Äî separate executable files (<code>.exe</code> or <code>.com</code>). Examples: <code>FORMAT.COM</code>, <code>XCOPY.EXE</code>, <code>CHKDSK.EXE</code>, <code>EDIT.COM</code>. Execution scripts were written into a text file with the <code>.bat</code> (batch file) extension.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Examples of configuration files:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>AUTOEXEC.BAT</code></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Automatic Configuration and Launch of Windows 3.11\n:: Author: hypo69\n:: Year: circa 1993\n:: Purpose: Initializes DOS environment, loads network drivers, and starts Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Configure command prompt\nPROMPT $p$g\n\n:: Set environment variables\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Load drivers and utilities into upper memory\nLH C:\\DOS\\SMARTDRV.EXE       :: Disk cache\nLH C:\\DOS\\MOUSE.COM          :: Mouse driver\n\n:: Load network services (relevant for Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Automatic start of Windows\nWIN</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>CONFIG.SYS</code></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî DOS Memory and Driver Configuration for Windows 3.11\n:: Author: hypo69\n:: Year: circa 1993\n:: Purpose: Initializes memory drivers, configures system parameters\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Microsoft began developing a fundamentally new kernel almost immediately, in parallel with DOS.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\"><strong>Windows NT</strong></a> (New Technology) kernel first appeared with the release of the operating system:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><strong>Windows NT 3.1 ‚Äî July 27, 1993</strong></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Development began</strong>: in <strong>1988</strong> under the leadership of <strong>Dave Cutler</strong> (former DEC engineer, creator of VMS) with the goal of creating a completely new, secure, portable, and multitasking OS, incompatible with MS-DOS at the kernel level.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî was named to emphasize compatibility with <strong>Windows 3.1</strong> at the interface level, but was a <strong>completely new architecture</strong>.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† What the NT Kernel Brought:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Feature</th><th>Description</th></tr></thead><tbody><tr><td><strong>32-bit Architecture</strong></td><td>Unlike MS-DOS and Windows 3.x, which were 16-bit.</td></tr><tr><td><strong>Multitasking</strong></td><td>True preemptive multitasking.</td></tr><tr><td><strong>Protected Memory</strong></td><td>Programs could not corrupt each other's memory.</td></tr><tr><td><strong>Modularity</strong></td><td>Multi-layered kernel architecture: HAL, Executive, Kernel, drivers.</td></tr><tr><td><strong>Multi-platform Support</strong></td><td>NT 3.1 ran on x86, MIPS, and Alpha.</td></tr><tr><td><strong>POSIX Compatibility</strong></td><td>NT shipped with a <strong>POSIX subsystem</strong>, certified to POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú NT Lineup:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>NT Version</th><th>Year</th><th>Comment</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>First NT release</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Improvements, optimization</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Windows 95 interface, but NT kernel</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>Also NT 10.0 (marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Difference in operating system capabilities:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Characteristic</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>System Type</strong></td><td>Monolithic, single-tasking</td><td>Microkernel/hybrid, multitasking</td></tr><tr><td><strong>Bit Architecture</strong></td><td>16-bit</td><td>32-bit (with 64-bit support from NT 5.2 / XP x64)</td></tr><tr><td><strong>Multitasking</strong></td><td>‚ùå Absent (one process at a time)</td><td>‚úÖ Preemptive multitasking</td></tr><tr><td><strong>Protected Memory</strong></td><td>‚ùå No</td><td>‚úÖ Yes (each process in its own address space)</td></tr><tr><td><strong>Multi-user Mode</strong></td><td>‚ùå No</td><td>‚úÖ Partially (in NT Workstation/Server)</td></tr><tr><td><strong>POSIX Compatibility</strong></td><td>‚ùå No</td><td>‚úÖ Built-in POSIX subsystem in NT 3.1‚Äì5.2</td></tr><tr><td><strong>Kernel Portability</strong></td><td>‚ùå x86 only</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Drivers</strong></td><td>Direct hardware access</td><td>Via HAL and Kernel-mode Drivers</td></tr><tr><td><strong>Application Access Level</strong></td><td>Applications = system level</td><td>User / Kernel levels separated</td></tr><tr><td><strong>Security</strong></td><td>‚ùå Absent</td><td>‚úÖ Security model: SID, ACL, access tokens</td></tr><tr><td><strong>Stability</strong></td><td>‚ùå One program's dependency = OS crash</td><td>‚úÖ Process isolation, kernel protection</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>But there was one big BUT! Automation and administration tools did not receive due attention until 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft used completely different approaches, strategies, and tools for administration. All of this was <strong>disparate</strong>, often GUI-oriented, and not always automatable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå List of Some Tools:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Tool</th><th>Purpose</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Improved command interpreter (replacement for <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Command-line scripts</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Support for VBScript and JScript for automation</td></tr><tr><td><code>reg.exe</code></td><td>Registry management from the command line</td></tr><tr><td><code>net.exe</code></td><td>Working with users, network, printers</td></tr><tr><td><code>sc.exe</code></td><td>Service management</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>Process management</td></tr><tr><td><code>gpedit.msc</code></td><td>Group Policy (locally)</td></tr><tr><td><code>MMC</code></td><td>Console with snap-ins for management</td></tr><tr><td><code>WMI</code></td><td>Access to system information (via <code>wmic</code>, VBScript, or COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI for testing WMI queries</td></tr><tr><td><code>eventvwr</code></td><td>Event log viewer</td></tr><tr><td><code>perfmon</code></td><td>Resource monitoring</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Automation Examples:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>VBScript files (<code>*.vbs</code>) for administering users, networks, printers, and services.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî command-line interface to WMI (e.g., <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>.cmd</code> scripts with calls to <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, etc.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>First appeared in <strong>Windows 98</strong>, actively used in <strong>Windows 2000 and XP</strong>.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Allowed execution of VBScript and JScript files from the command line:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Part 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>It was only in 2002 that the company formulated the <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\">Monad</a> project, which later evolved into PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Start of development: approximately 2002</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Public announcement: 2003, as \"Monad Shell\"</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>First beta versions: appeared by 2005</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Final release (PowerShell 1.0): November 2006</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>The author and chief architect of the Monad / PowerShell project is Jeffrey Snover <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\">(Jeffrey Snover)</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Today, PowerShell Core runs on<br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\">Windows</a><br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\">macOS</a><br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\">Linux</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Development of the .NET framework ran in parallel, and PowerShell was deeply integrated into it; I will show examples in the following chapters.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And now ‚Äî the most important thing!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The main advantage of PowerShell compared to classic command shells is that it works with <em>objects</em>, not text. When you execute a command, it returns not just text, but a structured object (or a collection of objects) that has clearly defined properties and methods.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>See how PowerShell surpasses classic shells thanks to <strong>working with objects</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ How it Was: <code>dir</code> and Manual Parsing</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In <strong>CMD</strong> (both in the old <code>COMMAND.COM</code> and in <code>cmd.exe</code>), the <code>dir</code> command returns the result as plain text. Example output:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Suppose you want to extract the <strong>file name</strong> and <strong>size</strong> of each file. You would have to parse the strings manually:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>This is terribly difficult to read, depends on locale, date format, and font. And it breaks with spaces in names.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: Objects Instead of Text</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Simple and Readable Example:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Result:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> returns a <strong>collection of file/folder objects</strong></li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>Select-Object</code> easily allows you to get the desired <strong>properties</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç What Does <code>Get-ChildItem</code> Actually Return?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Result:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>PowerShell returns <strong>objects of type <code>System.IO.FileInfo</code></strong>, which have:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>üß± Properties (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>üõ† Methods (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, etc.)</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>You work <strong>with full-fledged objects</strong>, not with strings.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">\"Verb-Noun\" Syntax:</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell uses a <strong>strict and logical command syntax</strong>:<br><code>Verb-Noun</code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Verb</th><th>What it does</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Get</td></tr><tr><td><code>Set-</code></td><td>Set</td></tr><tr><td><code>New-</code></td><td>Create</td></tr><tr><td><code>Remove-</code></td><td>Remove</td></tr><tr><td><code>Start-</code></td><td>Start</td></tr><tr><td><code>Stop-</code></td><td>Stop</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Noun</th><th>What it works on</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Process</td></tr><tr><td><code>Service</code></td><td>Service</td></tr><tr><td><code>Item</code></td><td>File/Folder</td></tr><tr><td><code>EventLog</code></td><td>Event Logs</td></tr><tr><td><code>Computer</code></td><td>Computer</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Examples:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>What to do</th><th>Command</th></tr></thead><tbody><tr><td>Get processes</td><td><code>Get-Process</code></td></tr><tr><td>Stop service</td><td><code>Stop-Service</code></td></tr><tr><td>Create new file</td><td><code>New-Item</code></td></tr><tr><td>Get folder content</td><td><code>Get-ChildItem</code></td></tr><tr><td>Delete file</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Even if you <strong>don't know the exact command</strong>, you can <strong>guess</strong> it by its meaning ‚Äî and almost always be right.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>The <code>Get-Help</code> cmdlet is your main assistant.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol class=\"wp-block-list\"><!-- wp:list-item -->\n<li><strong>Get help about help itself:</strong><br><!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help</code></pre>\n<!-- /wp:code --></li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><strong>Get basic help about the command for working with processes:</strong><br><!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process</code></pre>\n<!-- /wp:code --></li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><strong>See examples of how to use this command:</strong><br><!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples</code></pre>\n<!-- /wp:code --><br>This is an incredibly useful parameter that often provides ready-made solutions for your tasks.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><strong>Get the most detailed information about the command:</strong><br><!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full</code></pre>\n<!-- /wp:code --></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>In the next part: pipeline or command chain (PipeLines)</p>\n<!-- /wp:paragraph -->[:ru]# –§–∏–ª–æ—Å–æ—Ñ–∏—è PowerShell.\n## –ß–∞—Å—Ç—å 0.\n–ß—Ç–æ –±—ã–ª–æ –¥–æ PowerShell?\n–≤ 1981 –≥–æ–¥—É –≤—ã—à–µ–ª MS-DOS 1.0. —Å –∫–æ–º–∞–Ω–¥–Ω—ã–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–º `COMMAND.COM`. –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å **–ø–∞–∫–µ—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã (`.bat`)** ‚Äî –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π –∞—Å–∫–µ—Ç–∏–∑–º –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Ñ–æ–Ω–µ POSIX —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö —Å–∏—Å—Ç–µ–º –≥–¥–µ —É–∂–µ —Å 1979 –≥–æ–¥–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∞ **–æ–±–æ–ª–æ—á–∫–∞ –ë–æ—Ä–Ω–∞ (`sh`)**.\n\n\n\n### üìÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä—ã–Ω–∫–∞ –æ–±–æ–ª–æ—á–µ–∫ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã—Ö–æ–¥–∞ **MS-DOS 1.0** (–∞–≤–≥—É—Å—Ç 1981)\n\n–í–æ—Ç —Å–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –û–° —Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∏—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–±–æ–ª–æ—á–µ–∫ (`sh`, `csh` –∏ –¥—Ä.):\n\n| –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞         | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–æ–ª–æ—á–µ–∫ (`sh`, `csh`, –¥—Ä.) | –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π                                                  |\n| ---------------------------- | ------------------------------------- | ------------------------------------------------------------ |\n| **UNIX Version 7 (V7)**      | `sh`                                  | –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π UNIX Bell Labs, —à–∏—Ä–æ–∫–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω  |\n| **UNIX/32V**                 | `sh`, `csh`                           | –í–µ—Ä—Å–∏—è UNIX –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã VAX                              |\n| **4BSD / 3BSD**              | `sh`, `csh`                           | –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∞—è –≤–µ—Ç–∫–∞ UNIX –æ—Ç Berkeley                       |\n| **UNIX System III**          | `sh`                                  | –ü–µ—Ä–≤–∞—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç AT&amp;T, –ø—Ä–µ–¥—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ System V |\n| **Xenix (–æ—Ç Microsoft)**     | `sh`                                  | –õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è UNIX, –ø—Ä–æ–¥–∞–≤–∞–ª–∞—Å—å Microsoft —Å 1980 –≥. |\n| **IDRIS**                    | `sh`                                  | UNIX-–ø–æ–¥–æ–±–Ω–∞—è –û–° –¥–ª—è PDP-11 –∏ Intel                          |\n| **Coherent (Mark Williams)** | `sh` (–ø–æ—Ö–æ–∂–∞—è)                        | –ù–µ–¥–æ—Ä–æ–≥–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ UNIX –¥–ª—è –ü–ö                           |\n| **CP/M (Digital Research)**  | ‚ùå (–ù–µ—Ç `sh`, —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–µ–π—à–∏–π CLI)   | –ù–µ UNIX, —Å–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –û–° –¥–ª—è 8-–±–∏—Ç–Ω—ã—Ö –ü–ö                 |\n| **MS-DOS 1.0**               | ‚ùå (—Ç–æ–ª—å–∫–æ `COMMAND.COM`)              | –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞, –Ω–∏–∫–∞–∫–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–ª–∏ pipe    |\n\n---\n\n### üí° –ß—Ç–æ —Ç–∞–∫–æ–µ `sh`, `csh`\n\n* `sh` ‚Äî **Bourne Shell**, –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä UNIX —Å 1977 –≥–æ–¥–∞.\n* `csh` ‚Äî **C Shell**, —É–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞ —Å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º, –ø–æ—Ö–æ–∂–∏–º –Ω–∞ C, –∏ —É–¥–æ–±—Å—Ç–≤–∞–º–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã.\n* –≠—Ç–∏ –æ–±–æ–ª–æ—á–∫–∏ **–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã, –ø–∞–π–ø—ã, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É—Å–ª–æ–≤–∏—è** ‚Äî –≤—Å—ë, —á—Ç–æ —Å–¥–µ–ª–∞–ª–æ UNIX –º–æ—â–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.\n\n---\n\n\nMicrosoft –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∞—Å—å –Ω–∞ **–¥–µ—à—ë–≤—ã–µ 16-–±–∏—Ç–Ω—ã–µ IBM PC**, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ–ª–∏ **–º–∞–ª–æ –ø–∞–º—è—Ç–∏** (–æ–±—ã—á–Ω–æ 64‚Äì256 –ö–ë),–Ω–µ –∏–º–µ–ª–∏ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏ –∏  –±—ã–ª–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è **–¥–æ–º–∞—à–Ω–µ–≥–æ –∏ –æ—Ñ–∏—Å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**, –∞ –Ω–µ —Å–µ—Ä–≤–µ—Ä–æ–≤. UNIX –±—ã–ª –ø–ª–∞—Ç–Ω—ã–º, —Ç—Ä–µ–±–æ–≤–∞–ª —Å–ª–æ–∂–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –æ–ø—ã—Ç–∞, –∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—ã –∏ –∏–Ω–∂–µ–Ω–µ—Ä—ã, –Ω–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –∏–º —Ç—Ä–µ–±–æ–≤–∞–ª–∞—Å—å –±—ã—Å—Ç—Ä–∞—è –∏ –ø—Ä–æ—Å—Ç–∞—è –û–°   \n\n\n–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å DOS –í–º–µ—Å—Ç–æ —Å–ª–æ–∂–Ω–æ–≥–æ `sh` –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–ª –æ–¥–∏–Ω —Ñ–∞–π–ª command.com —Å —Å–∫—É–¥–Ω—ã–º  –Ω–∞–±–æ—Ä–æ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ [ (dir, copy, del –∏ —Ç.p.)](https://www.techgeekbuzz.com/blog/dos-commands/){:target=\"_blank\"}  –±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–π, —Ü–∏–∫–ª–æ–≤ –∏ –º–æ–¥—É–ª–µ–π.\n\n–ë—ã–ª–∏ –∏ –≤–Ω–µ—à–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã (.exe –∏–ª–∏ .com). –ü—Ä–∏–º–µ—Ä—ã: FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.\n–°—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–ª–∏—Å—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .bat (batch file)\n\n\n–ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É–∞—Ä—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:\n\n- AUTOEXEC.BAT\n\n```bash\n:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ Windows 3.11\n:: –ê–≤—Ç–æ—Ä: hypo69\n:: –ì–æ–¥: –ø—Ä–∏–º–µ—Ä–Ω–æ 1993\n:: –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –í—ã–ø–æ–ª–Ω—è–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é DOS-—Å—Ä–µ–¥—ã, –∑–∞–≥—Ä—É–∑–∫—É —Å–µ—Ç–µ–≤—ã—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –∏ –∑–∞–ø—É—Å–∫ Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏\nPROMPT $p$g\n\n:: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: –ó–∞–≥—Ä—É–∑–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –∏ —É—Ç–∏–ª–∏—Ç –≤ –≤–µ—Ä—Ö–Ω—é—é –ø–∞–º—è—Ç—å\nLH C:\\DOS\\SMARTDRV.EXE       :: –î–∏—Å–∫–æ–≤—ã–π –∫—ç—à\nLH C:\\DOS\\MOUSE.COM          :: –î—Ä–∞–π–≤–µ—Ä –º—ã—à–∏\n\n:: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö —Å–ª—É–∂–± (–∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ Windows\nWIN\n\n```\n- CONFIG.SYS\n```bash\n:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞–º—è—Ç–∏ –∏ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ DOS –¥–ª—è Windows 3.11\n:: –ê–≤—Ç–æ—Ä: hypo69\n:: –ì–æ–¥: –ø—Ä–∏–º–µ—Ä–Ω–æ 1993\n:: –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –ø–∞–º—è—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n```\n\n–í –ú–∞–π–∫—Ä–æ—Å–æ—Ñ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ DOS –ø–æ—á—Ç–∏ —Å—Ä–∞–∑—É –Ω–∞—á–∞–ª–∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä–∏–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–æ–≤–æ–µ —è–¥—Ä–æ.\n\n–Ø–¥—Ä–æ [<a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\">**Windows NT**</a>](https://www.wikiwand.com/ru/articles/Windows_NT){:target=\"_blank\"} (New Technology) –≤–ø–µ—Ä–≤—ã–µ –ø–æ—è–≤–∏–ª–æ—Å—å —Å —Ä–µ–ª–∏–∑–æ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:\n\n&gt; **Windows NT 3.1 ‚Äî 27 –∏—é–ª—è 1993 –≥–æ–¥–∞**\n\n---\n\n* **–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å**: –≤ **1988 –≥–æ–¥—É** –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º **–î–µ–π–≤–∞ –ö–∞—Ç–ª–µ—Ä–∞** (–±—ã–≤—à–µ–≥–æ –∏–Ω–∂–µ–Ω–µ—Ä–∞ DEC, —Å–æ–∑–¥–∞—Ç–µ–ª—è VMS) —Å —Ü–µ–ª—å—é —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–æ–≤—É—é, –∑–∞—â–∏—â—ë–Ω–Ω—É—é, –ø–µ—Ä–µ–Ω–æ—Å–∏–º—É—é –∏ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω—É—é –û–°, –Ω–µ —Å–æ–≤–º–µ—Å—Ç–∏–º—É—é —Å MS-DOS –Ω–∞ —É—Ä–æ–≤–Ω–µ —è–¥—Ä–∞.\n* **NT 3.1** ‚Äî –Ω–∞–∑—ã–≤–∞–ª–∞—Å—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å **Windows 3.1** –Ω–∞ —É—Ä–æ–≤–Ω–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –Ω–æ –±—ã–ª–∞ **—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π**.\n\n---\n\n#### üß† –ß—Ç–æ –ø—Ä–∏–Ω–µ—Å–ª–æ —è–¥—Ä–æ NT:\n\n| –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å                        | –û–ø–∏—Å–∞–Ω–∏–µ                                                              |\n| ---------------------------------- | --------------------------------------------------------------------- |\n| **32-–±–∏—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**          | –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç MS-DOS –∏ Windows 3.x, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ 16-–±–∏—Ç–Ω—ã–º–∏.           |\n| **–ú–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å**                | –ù–∞—Å—Ç–æ—è—â–∞—è preemptive multitasking.                                    |\n| **–ó–∞—â–∏—â—ë–Ω–Ω–∞—è –ø–∞–º—è—Ç—å**              | –ü—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –º–æ–≥–ª–∏ –ø–æ–≤—Ä–µ–¥–∏—Ç—å –ø–∞–º—è—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞.                       |\n| **–ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å**                    | –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —è–¥—Ä–∞: HAL, Executive, Kernel, –¥—Ä–∞–π–≤–µ—Ä—ã.    |\n| **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–≥–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç–∏** | NT 3.1 —Ä–∞–±–æ—Ç–∞–ª–∞ –Ω–∞ x86, MIPS –∏ Alpha.                                 |\n| **–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å POSIX**          | NT –ø–æ—Å—Ç–∞–≤–ª—è–ª—Å—è —Å **POSIX-—Å–∞–±—Å–∏—Å—Ç–µ–º–æ–π**, —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ POSIX.1. |\n\n---\n\n#### üìú –õ–∏–Ω–µ–π–∫–∞ NT:\n\n| –í–µ—Ä—Å–∏—è NT     | –ì–æ–¥       | –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π                      |\n| ------------- | --------- | -------------------------------- |\n| NT 3.1        | 1993      | –ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑ NT                  |\n| NT 3.5 / 3.51 | 1994‚Äì1995 | –£–ª—É—á—à–µ–Ω–∏—è, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è           |\n| NT 4.0        | 1996      | –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Windows 95, –Ω–æ —è–¥—Ä–æ NT |\n| Windows 2000  | 2000      | NT 5.0                           |\n| Windows XP    | 2001      | NT 5.1                           |\n| Windows Vista | 2007      | NT 6.0                           |\n| Windows 10    | 2015      | NT 10.0                          |\n| Windows 11    | 2021      | –¢–æ–∂–µ NT 10.0 (–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ üòä)      |\n\n---\n\n\n–†–∞–∑–Ω–∏—Ü–∞ –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º:\n\n| –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞                  | **MS-DOS** (1981)                       | **Windows NT** (1993)                               |\n| ------------------------------- | --------------------------------------- | --------------------------------------------------- |\n| **–¢–∏–ø —Å–∏—Å—Ç–µ–º—ã**                 | –ú–æ–Ω–æ–ª–∏—Ç–Ω–∞—è, –æ–¥–Ω–æ–∑–∞–¥–∞—á–Ω–∞—è                | –ú–∏–∫—Ä–æ—è–¥–µ—Ä–Ω–∞—è/–≥–∏–±—Ä–∏–¥–Ω–∞—è, –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–∞—è               |\n| **–†–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å**                 | 16-–±–∏—Ç                                  | 32-–±–∏—Ç (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 64-–±–∏—Ç —Å NT 5.2 / XP x64)      |\n| **–ú–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å**             | ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å—Å –∑–∞ —Ä–∞–∑)     | ‚úÖ Preemptive multitasking                           |\n| **–ó–∞—â–∏—â—ë–Ω–Ω–∞—è –ø–∞–º—è—Ç—å**           | ‚ùå –ù–µ—Ç                                   | ‚úÖ –î–∞ (–∫–∞–∂–¥—ã–π –ø—Ä–æ—Ü–µ—Å—Å –≤ —Å–≤–æ—ë–º –∞–¥—Ä–µ—Å–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ) |\n| **–ú–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–µ–∂–∏–º** | ‚ùå –ù–µ—Ç                                   | ‚úÖ –ß–∞—Å—Ç–∏—á–Ω–æ (–≤ NT Workstation/Server)                |\n| **–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å POSIX**       | ‚ùå –ù–µ—Ç                                   | ‚úÖ –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è POSIX-—Å–∞–±—Å–∏—Å—Ç–µ–º–∞ –≤ NT 3.1‚Äì5.2          |\n| **–ü–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å —è–¥—Ä–∞**          | ‚ùå –¢–æ–ª—å–∫–æ x86                            | ‚úÖ x86, MIPS, Alpha, PowerPC                         |\n| **–î—Ä–∞–π–≤–µ—Ä—ã**                    | –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é            | –ß–µ—Ä–µ–∑ HAL –∏ Kernel-mode Drivers                     |\n| **–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π**  | –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è = —Å–∏—Å—Ç–µ–º–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å          | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π / –Ø–¥–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã        |\n| **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**                | ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç                           | ‚úÖ –ú–æ–¥–µ–ª—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: SID, ACL, —Ç–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞     |\n| **–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å**                | ‚ùå –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã = –∫—Ä–∞—Ö –û–° | ‚úÖ –ò–∑–æ–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∑–∞—â–∏—Ç–∞ —è–¥—Ä–∞                   |\n\n---\n\n–ù–æ –±—ã–ª–æ –æ–¥–Ω–æ –±–æ–ª—å—à–æ–µ –ù–û! –ù–æ —Å—Ä–µ–¥—Å—Ç–≤–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ —É–¥–µ–ª—è–ª–æ—Å—å –¥–æ–ª–∂–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏–µ –≤–ø–ª–æ—Ç—å –¥–æ 2002 –≥–æ–¥–∞. \n\n---\n \nMicrosoft –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã, —Å—Ç–∞—Ä—Ç–µ–≥–∏–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è. –í—Å—ë —ç—Ç–æ –±—ã–ª–æ **—Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã–º**, —á–∞—Å—Ç–æ GUI-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ –Ω–µ –≤—Å–µ–≥–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ–º—ã–º. \n\n---\n\n\n##### üìå –°–ø–∏—Å–æ–∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:\n\n| –°—Ä–µ–¥—Å—Ç–≤–æ                      | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                      |\n| ----------------------------- | --------------------------------------------------------------- |\n| `cmd.exe`                     | –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ–º–∞–Ω–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä (–∑–∞–º–µ–Ω–∞ `COMMAND.COM`)       |\n| `.bat`, `.cmd`                | –°–∫—Ä–∏–ø—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏                                        |\n| **Windows Script Host (WSH)** | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ VBScript –∏ JScript –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏                  |\n| `reg.exe`                     | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–µ—Å—Ç—Ä–æ–º –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏                         |\n| `net.exe`                     | –†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —Å–µ—Ç—å—é, –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏                      |\n| `sc.exe`                      | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É–∂–±–∞–º–∏                                             |\n| `tasklist`, `taskkill`        | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏                                           |\n| `gpedit.msc`                  | –ì—Ä—É–ø–ø–æ–≤–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ (–ª–æ–∫–∞–ª—å–Ω–æ)                                   |\n| `MMC`                         | –ö–æ–Ω—Å–æ–ª—å —Å–æ —Å–Ω–∞–ø-–∏–Ω–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è                            |\n| `WMI`                         | –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—á–µ—Ä–µ–∑ `wmic`, VBScript, –∏–ª–∏ COM) |\n| `WbemTest.exe`                | GUI –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WMI-–∑–∞–ø—Ä–æ—Å–æ–≤                               |\n| `eventvwr`                    | –ü—Ä–æ—Å–º–æ—Ç—Ä –∂—É—Ä–Ω–∞–ª–æ–≤ —Å–æ–±—ã—Ç–∏–π                                       |\n| `perfmon`                     | –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤                                             |\n\n##### üõ† –ü—Ä–∏–º–µ—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:\n\n* VBScript-—Ñ–∞–π–ª—ã (`*.vbs`) –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–µ—Ç–µ–π, –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –∏ —Å–ª—É–∂–±.\n* `WMIC` ‚Äî –∫–æ–º–∞–Ω–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ WMI (–Ω–∞–ø—Ä–∏–º–µ—Ä: `wmic process list brief`).\n* `.cmd` —Å–∫—Ä–∏–ø—Ç—ã —Å –≤—ã–∑–æ–≤–∞–º–∏ `net`, `sc`, `reg`, `wmic`, –∏ —Ç.–¥.\n\n---\n\n### ‚öôÔ∏è Windows Scripting Host (WSH)\n\n* –í–ø–µ—Ä–≤—ã–µ –ø–æ—è–≤–∏–ª—Å—è –≤ **Windows 98**, –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –≤ **Windows 2000 –∏ XP**.\n* –ü–æ–∑–≤–æ–ª—è–ª –≤—ã–ø–æ–ª–Ω—è—Ç—å VBScript –∏ JScript-—Ñ–∞–π–ª—ã –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏:\n\n  ```vbscript\n  Set objShell = WScript.CreateObject(\"WScript.Shell\")\n  objShell.Run \"notepad.exe\"\n  ```\n\n---\n## –ß–∞—Å—Ç—å 1.\n\n–¢–æ–ª—å–∫–æ –≤ 2002 –≥–æ–¥—É –≤ –∫–æ–º–ø–∞–Ω–∏–∏ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–ª—Å—è –ø—Ä–æ–µ–∫—Ç <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\">Monad</a>\n, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–∂–µ –≤—ã–ª–∏–ª—Å—è –≤ powershell:\n\n–ù–∞—á–∞–ª–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ –≤ 2002 –≥–æ–¥—É\n\n–ü—É–±–ª–∏—á–Ω–æ–µ –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ: 2003 –≥–æ–¥, –∫–∞–∫ \"Monad Shell\"\n\n–ü–µ—Ä–≤—ã–µ –±–µ—Ç–∞-–≤–µ—Ä—Å–∏–∏: –ø–æ—è–≤–∏–ª–∏—Å—å –∫ 2005 –≥–æ–¥—É\n\n–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–ª–∏–∑ (PowerShell 1.0): –Ω–æ—è–±—Ä—å 2006 –≥–æ–¥–∞\n\n\n –ê–≤—Ç–æ—Ä–æ–º –∏ –≥–ª–∞–≤–Ω—ã–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞ Monad / PowerShell —è–≤–ª—è–µ—Ç—Å—è –î–∂–µ—Ñ—Ñ—Ä–∏ –°–Ω–æ–≤–µ—Ä\n <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\"> (Jeffrey Snover)</a>\n\n \n–°–µ–≥–æ–¥–Ω—è PowerShell Core —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞\n<a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\">Windows</a>\n<a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\">macOS</a>\n<a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\">Linux</a>\n\n\n\n \n–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —à–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ .NET –∏ powershell –±—ã–ª –≤ –Ω–µ–µ –≥–ª—É–±–æ–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω, –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≥–ª–∞–≤–∞—Ö —è –ø–æ–∫–∞–∂—É –ø—Ä–∏–º–µ—Ä—ã\n\n–ê —Ç–µ–ø–µ—Ä—å ‚Äî —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ! \n\n–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ PowerShell –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–º–∞–Ω–¥–Ω—ã–º–∏ –æ–±–æ–ª–æ—á–∫–∞–º–∏ ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Å *–æ–±—ä–µ–∫—Ç–∞–º–∏*, –∞ –Ω–µ —Å —Ç–µ–∫—Å—Ç–æ–º. –ö–æ–≥–¥–∞ –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É, –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∞–º –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç (–∏–ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—é –æ–±—ä–µ–∫—Ç–æ–≤), —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ (Properties) –∏ –º–µ—Ç–æ–¥—ã (Methods).\n\n–°–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ PowerShell –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –æ–±–æ–ª–æ—á–∫–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è **—Ä–∞–±–æ—Ç–µ —Å  –æ–±—ä–µ–∫—Ç–∞–º–∏** \n\n### üìÅ –ö–∞–∫ –±—ã–ª–æ: `dir` –∏ —Ä—É—á–Ω–æ–π –ø–∞—Ä—Å–∏–Ω–≥\n\n–í **CMD** (–∏ –≤ —Å—Ç–∞—Ä–æ–º `COMMAND.COM`, –∏ –≤ `cmd.exe`) –∫–æ–º–∞–Ω–¥–∞ `dir` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç. –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:\n\n```\n24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n```\n\n–î–æ–ø—É—Å—Ç–∏–º, –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–≤–ª–µ—á—å **–∏–º—è —Ñ–∞–π–ª–∞** –∏ **—Ä–∞–∑–º–µ—Ä** –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞. –í–∞–º –ø—Ä–∏–¥—ë—Ç—Å—è –ø–∞—Ä—Å–∏—Ç—å —Å—Ç—Ä–æ–∫–∏ –≤—Ä—É—á–Ω—É—é:\n```cmd\nfor /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n```\n\n* –≠—Ç–æ —Å—Ç—Ä–∞—à–Ω–æ —Å–ª–æ–∂–Ω–æ —á–∏—Ç–∞–µ—Ç—Å—è, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ª–æ–∫–∞–ª–∏, —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã, —à—Ä–∏—Ñ—Ç–∞. –ò –ª–æ–º–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–æ–±–µ–ª–∞—Ö –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö\n\n---\n\n### ‚úÖ PowerShell: –æ–±—ä–µ–∫—Ç—ã –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞\n\n#### ‚úî –ü—Ä–æ—Å—Ç–æ–π –∏ —á–∏—Ç–∞–µ–º—ã–π –ø—Ä–∏–º–µ—Ä:\n\n```powershell\nGet-ChildItem | Select-Object Name, Length\n```\n\n**–†–µ–∑—É–ª—å—Ç–∞—Ç:**\n\n```\nName          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n```\n\n* `Get-ChildItem` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç **–º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Ñ–∞–π–ª–æ–≤/–ø–∞–ø–æ–∫**\n* `Select-Object` –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—ã–µ **—Å–≤–æ–π—Å—Ç–≤–∞**\n\n---\n\n### üîç –ß—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `Get-ChildItem`?\n\n```powershell\n$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n```\n\n**–†–µ–∑—É–ª—å—Ç–∞—Ç:**\n\n```\nTypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n```\n\nPowerShell –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç **–æ–±—ä–µ–∫—Ç—ã —Ç–∏–ø–∞ `System.IO.FileInfo`**, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å:\n\n* üß± –°–≤–æ–π—Å—Ç–≤–∞ (`Name`, `Length`, `CreationTime`, `Extension`, ‚Ä¶)\n* üõ† –ú–µ—Ç–æ–¥—ã (`Delete()`, `CopyTo()`, `MoveTo()` –∏ —Ç.–¥.)\n\n–í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ **—Å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏**, –∞ –Ω–µ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏.\n\n---\n\n### –°–∏–Ω—Ç–∞–∫—Å–∏—Å \"–ì–ª–∞–≥–æ–ª-–°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ\":\n\nPowerShell –∏—Å–ø–æ–ª—å–∑—É–µ—Ç **—Å—Ç—Ä–æ–≥–∏–π –∏ –ª–æ–≥–∏—á–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥**:\n`–ì–ª–∞–≥–æ–ª-–°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ` (Verb-Noun)\n\n| –ì–ª–∞–≥–æ–ª    | –ß—Ç–æ –¥–µ–ª–∞–µ—Ç |\n| --------- | ---------- |\n| `Get-`    | –ü–æ–ª—É—á–∏—Ç—å   |\n| `Set-`    | –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å |\n| `New-`    | –°–æ–∑–¥–∞—Ç—å    |\n| `Remove-` | –£–¥–∞–ª–∏—Ç—å    |\n| `Start-`  | –ó–∞–ø—É—Å—Ç–∏—Ç—å  |\n| `Stop-`   | –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å |\n\n| –°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ | –ù–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç |\n| --------------- | ---------------- |\n| `Process`       | –ü—Ä–æ—Ü–µ—Å—Å          |\n| `Service`       | –°–ª—É–∂–±–∞           |\n| `Item`          | –§–∞–π–ª/–ø–∞–ø–∫–∞       |\n| `EventLog`      | –ñ—É—Ä–Ω–∞–ª—ã —Å–æ–±—ã—Ç–∏–π  |\n| `Computer`      | –ö–æ–º–ø—å—é—Ç–µ—Ä        |\n\n#### üîÑ –ü—Ä–∏–º–µ—Ä—ã:\n\n| –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å         | –ö–æ–º–∞–Ω–¥–∞         |\n| ------------------------- | --------------- |\n| –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã         | `Get-Process`   |\n| –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª—É–∂–±—É         | `Stop-Service`  |\n| –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª        | `New-Item`      |\n| –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ | `Get-ChildItem` |\n| –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª              | `Remove-Item`   |\n\n‚û° –î–∞–∂–µ –µ—Å–ª–∏ –≤—ã **–Ω–µ –∑–Ω–∞–µ—Ç–µ —Ç–æ—á–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã**, –≤—ã –º–æ–∂–µ—Ç–µ **–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å** –µ—ë –ø–æ —Å–º—ã—Å–ª—É ‚Äî –∏ –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ —É–≥–∞–¥–∞–µ—Ç–µ.\n\n\n---\n\n–ö–æ–º–∞–Ω–¥–ª–µ—Ç `Get-Help` ‚Äî –≤–∞—à –≥–ª–∞–≤–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫.\n\n\n1.  **–ü–æ–ª—É—á–∏–º —Å–ø—Ä–∞–≤–∫—É –æ —Å–∞–º–æ–π —Å–ø—Ä–∞–≤–∫–µ:**\n    ```powershell\n    Get-Help Get-Help\n    ```\n2.  **–ü–æ–ª—É—á–∏–º –±–∞–∑–æ–≤—É—é —Å–ø—Ä–∞–≤–∫—É –æ –∫–æ–º–∞–Ω–¥–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏:**\n    ```powershell\n    Get-Help Get-Process\n    ```\n3.  **–ü–æ—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã:**\n    ```powershell\n    Get-Help Get-Process -Examples\n    ```\n    –≠—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π —á–∞—Å—Ç–æ –¥–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á.\n4.  **–ü–æ–ª—É—á–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ:**\n    ```powershell\n    Get-Help Get-Process -Full\n    ```\n–í —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏: –∫–æ–Ω–≤–µ–µ—Ä –∏–ª–∏ —Ü–µ–ø–æ—á–∫–∞ –∫–æ–º–∞–Ω–¥ (PipeLines)[:]",
  "post_status": "publish",
  "post_author": 1,
  "_seo_description": "[:en]Explore the history of command-line interfaces from MS-DOS to Windows NT, understanding the tools that preceded PowerShell. Learn about Monad, PowerShell's object-oriented approach, and how it revolutionized automation compared to traditional text parsing.[:ru]–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –∫–æ–º–∞–Ω–¥–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –æ—Ç MS-DOS –¥–æ Windows NT, —É–∑–Ω–∞–π—Ç–µ –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö, –ø—Ä–µ–¥—à–µ—Å—Ç–≤–æ–≤–∞–≤—à–∏—Ö PowerShell. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –ø—Ä–æ–µ–∫—Ç Monad, –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ PowerShell –∏ –µ–≥–æ —Ä–µ–≤–æ–ª—é—Ü–∏—é –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–≤—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º.[:]",
  "_seo_keywords": "[:en]PowerShell, Monad, MS-DOS, Windows NT, command line, automation, scripting, batch files, WSH, objects, Get-ChildItem, Get-Help, Verb-Noun syntax[:ru]PowerShell, Monad, MS-DOS, Windows NT, –∫–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, —Å–∫—Ä–∏–ø—Ç—ã, –ø–∞–∫–µ—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã, WSH, –æ–±—ä–µ–∫—Ç—ã, Get-ChildItem, Get-Help, —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ì–ª–∞–≥–æ–ª-–°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ[:]"
}
{
  "post_title": "[:fr]Philosophie de PowerShell. Partie 0. Ce qui existait avant PowerShell ?[:]",
  "post_content": "[:fr]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">Philosophie de PowerShell.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Partie 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ce qui existait avant PowerShell ?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>En 1981, MS-DOS 1.0 est sorti avec son interpr√©teur de commandes <code>COMMAND.COM</code>. Pour l'automatisation des t√¢ches, on utilisait des <strong>fichiers batch (<code>.bat</code>)</strong> ‚Äî de simples fichiers texte contenant une s√©quence de commandes console. Un asc√©tisme surprenant de la ligne de commande compar√© aux syst√®mes compatibles POSIX o√π le <strong>shell Bourne (<code>sh</code>)</strong> existait d√©j√† depuis 1979.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ √âtat du march√© des shells au moment de la sortie de <strong>MS-DOS 1.0</strong> (ao√ªt 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Voici un tableau r√©capitulatif des syst√®mes d'exploitation populaires de l'√©poque et de leur prise en charge des shells (<code>sh</code>, <code>csh</code>, etc.) :</p>\n<!-- /wp:paragraph -->\n\n<table>\n    <thead>\n        <tr>\n            <th>Syst√®me d'exploitation</th>\n            <th>Prise en charge des shells (<code>sh</code>, <code>csh</code>, autres)</th>\n            <th>Commentaire</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><strong>UNIX Version 7 (V7)</strong></td>\n            <td><code>sh</code></td>\n            <td>Dernier UNIX classique de Bell Labs, largement r√©pandu</td>\n        </tr>\n        <tr>\n            <td><strong>UNIX/32V</strong></td>\n            <td><code>sh</code>, <code>csh</code></td>\n            <td>Version d'UNIX pour l'architecture VAX</td>\n        </tr>\n        <tr>\n            <td><strong>4BSD / 3BSD</strong></td>\n            <td><code>sh</code>, <code>csh</code></td>\n            <td>Branche universitaire d'UNIX de Berkeley</td>\n        </tr>\n        <tr>\n            <td><strong>UNIX System III</strong></td>\n            <td><code>sh</code></td>\n            <td>Premi√®re version commerciale d'AT&amp;T, pr√©d√©cesseur de System V</td>\n        </tr>\n        <tr>\n            <td><strong>Xenix (par Microsoft)</strong></td>\n            <td><code>sh</code></td>\n            <td>Version sous licence d'UNIX, vendue par Microsoft depuis 1980</td>\n        </tr>\n        <tr>\n            <td><strong>IDRIS</strong></td>\n            <td><code>sh</code></td>\n            <td>Syst√®me d'exploitation de type UNIX pour PDP-11 et Intel</td>\n        </tr>\n        <tr>\n            <td><strong>Coherent (Mark Williams)</strong></td>\n            <td><code>sh</code> (similaire)</td>\n            <td>Alternative √©conomique √† UNIX pour PC</td>\n        </tr>\n        <tr>\n            <td><strong>CP/M (Digital Research)</strong></td>\n            <td>‚ùå (Pas de <code>sh</code>, seulement un CLI tr√®s simple)</td>\n            <td>Pas UNIX, l'OS le plus populaire pour les PC 8 bits</td>\n        </tr>\n        <tr>\n            <td><strong>MS-DOS 1.0</strong></td>\n            <td>‚ùå (seulement <code>COMMAND.COM</code>)</td>\n            <td>Shell minimaliste, aucun script ou pipe</td>\n        </tr>\n    </tbody>\n</table>\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {"level":3} -->\n<h3 class=\"wp-block-heading\">üí° Qu'est-ce que <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, l'interpr√©teur de scripts UNIX principal depuis 1977.</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li><code>csh</code> ‚Äî <strong>C Shell</strong>, un shell am√©lior√© avec une syntaxe similaire √† celle du C et des facilit√©s pour le travail interactif.</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li>Ces shells <strong>supportaient les redirections, les pipes, les variables, les fonctions et les conditions</strong> ‚Äî tout ce qui a fait d'UNIX un puissant outil d'automatisation.</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft ciblait les <strong>PC IBM 16 bits bon march√©</strong>, qui avaient <strong>peu de m√©moire</strong> (g√©n√©ralement 64-256 Ko), n'avaient pas de multit√¢che et √©taient destin√©s √† un <strong>usage domestique et bureautique</strong>, et non aux serveurs. UNIX √©tait payant, n√©cessitait une architecture complexe et de l'exp√©rience, et les comptables et ing√©nieurs, pas les administrateurs syst√®me, avaient besoin d'un OS rapide et simple.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>L'interface DOS, au lieu du complexe <code>sh</code>, pr√©sentait un seul fichier <code>command.com</code> avec un ensemble limit√© de commandes internes [<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\">(dir, copy, del, etc.)</a>] sans fonctions, boucles ni modules.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Il y avait aussi des commandes externes ‚Äî des fichiers ex√©cutables s√©par√©s (<code>.exe</code> ou <code>.com</code>). Exemples : <code>FORMAT.COM</code>, <code>XCOPY.EXE</code>, <code>CHKDSK.EXE</code>, <code>EDIT.COM</code>.<br>Les scripts d'ex√©cution √©taient enregistr√©s dans un fichier texte avec l'extension <code>.bat</code> (fichier batch).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Exemples de fichiers de configuration :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Configuration automatique et d√©marrage de Windows 3.11\n:: Auteur: hypo69\n:: Ann√©e: environ 1993\n:: Objectif: Initialise l'environnement DOS, charge les pilotes r√©seau et d√©marre Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Configuration de l'invite de commande\nPROMPT $p$g\n\n:: D√©finition des variables d'environnement\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Chargement des pilotes et utilitaires dans la m√©moire sup√©rieure\nLH C:\\DOS\\SMARTDRV.EXE       :: Cache disque\nLH C:\\DOS\\MOUSE.COM          :: Pilote de souris\n\n:: Chargement des services r√©seau (pertinent pour Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: D√©marrage automatique de Windows\nWIN\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî Configuration de la m√©moire et des pilotes DOS pour Windows 3.11\n:: Auteur: hypo69\n:: Ann√©e: environ 1993\n:: Objectif: Initialisation des pilotes m√©moire, configuration des param√®tres syst√®me\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Chez Microsoft, un noyau fondamentalement nouveau a commenc√© √† √™tre d√©velopp√© presque imm√©diatement en parall√®le de DOS.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Le noyau <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\"><strong>Windows NT</strong></a> (New Technology) est apparu pour la premi√®re fois avec la sortie du syst√®me d'exploitation :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\">\n    <p><strong>Windows NT 3.1 ‚Äî 27 juillet 1993</strong></p>\n</blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li><strong>D√©veloppement a commenc√©</strong> : en <strong>1988</strong>, sous la direction de <strong>Dave Cutler</strong> (ancien ing√©nieur DEC, cr√©ateur de VMS) dans le but de cr√©er un OS enti√®rement nouveau, s√©curis√©, portable et multit√¢che, non compatible avec MS-DOS au niveau du noyau.</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li><strong>NT 3.1</strong> ‚Äî a √©t√© nomm√© ainsi pour souligner la compatibilit√© avec <strong>Windows 3.1</strong> au niveau de l'interface, mais c'√©tait une <strong>architecture compl√®tement nouvelle</strong>.</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Ce qu'a apport√© le noyau NT :</h4>\n<!-- /wp:heading -->\n\n<table>\n    <thead>\n        <tr>\n            <th>Caract√©ristique</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><strong>Architecture 32 bits</strong></td>\n            <td>Contrairement √† MS-DOS et Windows 3.x, qui √©taient en 16 bits.</td>\n        </tr>\n        <tr>\n            <td><strong>Multit√¢che</strong></td>\n            <td>V√©ritable multit√¢che pr√©emptif.</td>\n        </tr>\n        <tr>\n            <td><strong>M√©moire prot√©g√©e</strong></td>\n            <td>Les programmes ne pouvaient pas corrompre la m√©moire les uns des autres.</td>\n        </tr>\n        <tr>\n            <td><strong>Modularit√©</strong></td>\n            <td>Architecture de noyau √† plusieurs niveaux : HAL, Executive, Kernel, pilotes.</td>\n        </tr>\n        <tr>\n            <td><strong>Prise en charge multiplateforme</strong></td>\n            <td>NT 3.1 fonctionnait sur x86, MIPS et Alpha.</td>\n        </tr>\n        <tr>\n            <td><strong>Compatibilit√© POSIX</strong></td>\n            <td>NT √©tait livr√© avec une <strong>sous-syst√®me POSIX</strong>, certifi√© POSIX.1.</td>\n        </tr>\n    </tbody>\n</table>\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú Gamme NT :</h4>\n<!-- /wp:heading -->\n\n<table>\n    <thead>\n        <tr>\n            <th>Version NT</th>\n            <th>Ann√©e</th>\n            <th>Commentaire</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>NT 3.1</td>\n            <td>1993</td>\n            <td>Premi√®re version de NT</td>\n        </tr>\n        <tr>\n            <td>NT 3.5 / 3.51</td>\n            <td>1994‚Äì1995</td>\n            <td>Am√©liorations, optimisation</td>\n        </tr>\n        <tr>\n            <td>NT 4.0</td>\n            <td>1996</td>\n            <td>Interface Windows 95, mais noyau NT</td>\n        </tr>\n        <tr>\n            <td>Windows 2000</td>\n            <td>2000</td>\n            <td>NT 5.0</td>\n        </tr>\n        <tr>\n            <td>Windows XP</td>\n            <td>2001</td>\n            <td>NT 5.1</td>\n        </tr>\n        <tr>\n            <td>Windows Vista</td>\n            <td>2007</td>\n            <td>NT 6.0</td>\n        </tr>\n        <tr>\n            <td>Windows 10</td>\n            <td>2015</td>\n            <td>NT 10.0</td>\n        </tr>\n        <tr>\n            <td>Windows 11</td>\n            <td>2021</td>\n            <td>Aussi NT 10.0 (marketing üòä)</td>\n        </tr>\n    </tbody>\n</table>\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Diff√©rence de capacit√©s entre les syst√®mes d'exploitation :</p>\n<!-- /wp:paragraph -->\n\n<table>\n    <thead>\n        <tr>\n            <th>Caract√©ristique</th>\n            <th><strong>MS-DOS</strong> (1981)</th>\n            <th><strong>Windows NT</strong> (1993)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><strong>Type de syst√®me</strong></td>\n            <td>Monolithique, monot√¢che</td>\n            <td>Micro-noyau/hybride, multit√¢che</td>\n        </tr>\n        <tr>\n            <td><strong>Bits</strong></td>\n            <td>16 bits</td>\n            <td>32 bits (avec support 64 bits √† partir de NT 5.2 / XP x64)</td>\n        </tr>\n        <tr>\n            <td><strong>Multit√¢che</strong></td>\n            <td>‚ùå Absent (un seul processus √† la fois)</td>\n            <td>‚úÖ Multit√¢che pr√©emptif</td>\n        </tr>\n        <tr>\n            <td><strong>M√©moire prot√©g√©e</strong></td>\n            <td>‚ùå Non</td>\n            <td>‚úÖ Oui (chaque processus dans son propre espace d'adressage)</td>\n        </tr>\n        <tr>\n            <td><strong>Mode multi-utilisateur</strong></td>\n            <td>‚ùå Non</td>\n            <td>‚úÖ Partiellement (dans NT Workstation/Server)</td>\n        </tr>\n        <tr>\n            <td><strong>Compatibilit√© POSIX</strong></td>\n            <td>‚ùå Non</td>\n            <td>‚úÖ Sous-syst√®me POSIX int√©gr√© dans NT 3.1‚Äì5.2</td>\n        </tr>\n        <tr>\n            <td><strong>Portabilit√© du noyau</strong></td>\n            <td>‚ùå Seulement x86</td>\n            <td>‚úÖ x86, MIPS, Alpha, PowerPC</td>\n        </tr>\n        <tr>\n            <td><strong>Pilotes</strong></td>\n            <td>Acc√®s direct au mat√©riel</td>\n            <td>Via HAL et pilotes en mode noyau</td>\n        </tr>\n        <tr>\n            <td><strong>Niveau d'acc√®s des applications</strong></td>\n            <td>Applications = niveau syst√®me</td>\n            <td>Niveaux utilisateur / noyau s√©par√©s</td>\n        </tr>\n        <tr>\n            <td><strong>S√©curit√©</strong></td>\n            <td>‚ùå Absente</td>\n            <td>‚úÖ Mod√®le de s√©curit√© : SID, ACL, jetons d'acc√®s</td>\n        </tr>\n        <tr>\n            <td><strong>Stabilit√©</strong></td>\n            <td>‚ùå D√©pendance d'un programme = crash OS</td>\n            <td>‚úÖ Isolation des processus, protection du noyau</td>\n        </tr>\n    </tbody>\n</table>\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Mais il y avait un gros MAIS ! Les outils d'automatisation et d'administration n'ont pas re√ßu l'attention n√©cessaire avant 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft utilisait des approches, strat√©gies et outils d'administration tr√®s diff√©rents. Tout cela √©tait <strong>disparate</strong>, souvent ax√© sur l'interface graphique et pas toujours automatisable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Liste de quelques outils :</h5>\n<!-- /wp:heading -->\n\n<table>\n    <thead>\n        <tr>\n            <th>Outil</th>\n            <th>But</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><code>cmd.exe</code></td>\n            <td>Interpr√©teur de commandes am√©lior√© (remplacement de <code>COMMAND.COM</code>)</td>\n        </tr>\n        <tr>\n            <td><code>.bat</code>, <code>.cmd</code></td>\n            <td>Scripts de ligne de commande</td>\n        </tr>\n        <tr>\n            <td><strong>Windows Script Host (WSH)</strong></td>\n            <td>Support VBScript et JScript pour l'automatisation</td>\n        </tr>\n        <tr>\n            <td><code>reg.exe</code></td>\n            <td>Gestion du registre via la ligne de commande</td>\n        </tr>\n        <tr>\n            <td><code>net.exe</code></td>\n            <td>Travail avec les utilisateurs, r√©seau, imprimantes</td>\n        </tr>\n        <tr>\n            <td><code>sc.exe</code></td>\n            <td>Gestion des services</td>\n        </tr>\n        <tr>\n            <td><code>tasklist</code>, <code>taskkill</code></td>\n            <td>Gestion des processus</td>\n        </tr>\n        <tr>\n            <td><code>gpedit.msc</code></td>\n            <td>Strat√©gie de groupe (localement)</td>\n        </tr>\n        <tr>\n            <td><code>MMC</code></td>\n            <td>Console avec des composants logiciels enfichables pour la gestion</td>\n        </tr>\n        <tr>\n            <td><code>WMI</code></td>\n            <td>Acc√®s aux informations syst√®me (via <code>wmic</code>, VBScript ou COM)</td>\n        </tr>\n        <tr>\n            <td><code>WbemTest.exe</code></td>\n            <td>GUI pour tester les requ√™tes WMI</td>\n        </tr>\n        <tr>\n            <td><code>eventvwr</code></td>\n            <td>Affichage des journaux d'√©v√©nements</td>\n        </tr>\n        <tr>\n            <td><code>perfmon</code></td>\n            <td>Surveillance des ressources</td>\n        </tr>\n    </tbody>\n</table>\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Exemples d'automatisation :</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li>Fichiers VBScript (<code>*.vbs</code>) pour l'administration des utilisateurs, r√©seaux, imprimantes et services.</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li><code>WMIC</code> ‚Äî interface de ligne de commande pour WMI (par exemple : <code>wmic process list brief</code>).</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li>Scripts <code>.cmd</code> avec des appels √† <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, etc.</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li>Apparu pour la premi√®re fois avec <strong>Windows 98</strong>, il a √©t√© activement utilis√© dans <strong>Windows 2000 et XP</strong>.</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li>Permettait d'ex√©cuter des fichiers VBScript et JScript depuis la ligne de commande :</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Partie 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ce n'est qu'en 2002 que le projet <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\">Monad</a> a √©t√© formul√© au sein de l'entreprise, lequel a ensuite √©volu√© en PowerShell :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li>D√©but du d√©veloppement : approximativement en 2002</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li>Annonce publique : 2003, sous le nom de \"Monad Shell\"</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li>Premi√®res versions b√™ta : apparues en 2005</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li>Version finale (PowerShell 1.0) : novembre 2006</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>L'auteur et architecte principal du projet Monad / PowerShell est Jeffrey Snover<br><a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\"> (Jeffrey Snover)</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Aujourd'hui, PowerShell Core fonctionne sur<br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\">Windows</a><br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\">macOS</a><br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\">Linux</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Parall√®lement, le framework .NET √©tait en cours de d√©veloppement et PowerShell y √©tait profond√©ment int√©gr√© ; je montrerai des exemples dans les prochains chapitres.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Et maintenant ‚Äî le plus important !</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Le principal avantage de PowerShell par rapport aux shells de commande classiques est qu'il travaille avec des <em>objets</em>, et non avec du texte. Lorsque vous ex√©cutez une commande, elle ne vous renvoie pas seulement du texte, mais un objet structur√© (ou une collection d'objets) qui poss√®de des propri√©t√©s (Properties) et des m√©thodes (Methods) clairement d√©finies.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>D√©couvrez comment PowerShell surpasse les shells classiques gr√¢ce au <strong>travail avec les objets</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ Comment c'√©tait : <code>dir</code> et l'analyse manuelle</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Dans <strong>CMD</strong> (aussi bien dans l'ancien <code>COMMAND.COM</code> que dans <code>cmd.exe</code>), la commande <code>dir</code> renvoie un r√©sultat sous forme de texte brut. Exemple de sortie :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Supposons que vous vouliez extraire le <strong>nom du fichier</strong> et la <strong>taille</strong> de chaque fichier. Vous devrez analyser les lignes manuellement :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li>C'est terriblement difficile √† lire, d√©pend de la locale, du format de date, de la police. Et cela √©choue avec les espaces dans les noms.</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell : les objets au lieu du texte</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Exemple simple et lisible :</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>R√©sultat :</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">Name          Length\n----\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li><code>Get-ChildItem</code> renvoie un <strong>tableau d'objets fichiers/dossiers</strong>.</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li><code>Select-Object</code> permet d'obtenir facilement les <strong>propri√©t√©s</strong> n√©cessaires.</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç Que renvoie r√©ellement <code>Get-ChildItem</code> ?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>R√©sultat :</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         --------       ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>PowerShell renvoie des <strong>objets de type <code>System.IO.FileInfo</code></strong>, qui poss√®dent :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li>üß± Des propri√©t√©s (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li>üõ† Des m√©thodes (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, etc.)</li>\n    <!-- /wp:list-item -->\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Vous travaillez <strong>avec des objets √† part enti√®re</strong>, et non avec des cha√Ænes de caract√®res.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Syntaxe \"Verbe-Nom\" :</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell utilise une <strong>syntaxe de commande stricte et logique</strong> :<br><code>Verbe-Nom</code> (Verb-Noun)</p>\n<!-- /wp:paragraph -->\n\n<table>\n    <thead>\n        <tr>\n            <th>Verbe</th>\n            <th>Ce qu'il fait</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><code>Get-</code></td>\n            <td>Obtenir</td>\n        </tr>\n        <tr>\n            <td><code>Set-</code></td>\n            <td>D√©finir</td>\n        </tr>\n        <tr>\n            <td><code>New-</code></td>\n            <td>Cr√©er</td>\n        </tr>\n        <tr>\n            <td><code>Remove-</code></td>\n            <td>Supprimer</td>\n        </tr>\n        <tr>\n            <td><code>Start-</code></td>\n            <td>D√©marrer</td>\n        </tr>\n        <tr>\n            <td><code>Stop-</code></td>\n            <td>Arr√™ter</td>\n        </tr>\n    </tbody>\n</table>\n\n<table>\n    <thead>\n        <tr>\n            <th>Nom</th>\n            <th>Sur quoi il agit</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><code>Process</code></td>\n            <td>Processus</td>\n        </tr>\n        <tr>\n            <td><code>Service</code></td>\n            <td>Service</td>\n        </tr>\n        <tr>\n            <td><code>Item</code></td>\n            <td>Fichier/Dossier</td>\n        </tr>\n        <tr>\n            <td><code>EventLog</code></td>\n            <td>Journaux d'√©v√©nements</td>\n        </tr>\n        <tr>\n            <td><code>Computer</code></td>\n            <td>Ordinateur</td>\n        </tr>\n    </tbody>\n</table>\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Exemples :</h4>\n<!-- /wp:heading -->\n\n<table>\n    <thead>\n        <tr>\n            <th>Ce qu'il faut faire</th>\n            <th>Commande</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Obtenir les processus</td>\n            <td><code>Get-Process</code></td>\n        </tr>\n        <tr>\n            <td>Arr√™ter un service</td>\n            <td><code>Stop-Service</code></td>\n        </tr>\n        <tr>\n            <td>Cr√©er un nouveau fichier</td>\n            <td><code>New-Item</code></td>\n        </tr>\n        <tr>\n            <td>Obtenir le contenu d'un dossier</td>\n            <td><code>Get-ChildItem</code></td>\n        </tr>\n        <tr>\n            <td>Supprimer un fichier</td>\n            <td><code>Remove-Item</code></td>\n        </tr>\n    </tbody>\n</table>\n\n<!-- wp:paragraph -->\n<p>‚û° M√™me si vous <strong>ne connaissez pas la commande exacte</strong>, vous pouvez la <strong>deviner</strong> par son sens ‚Äî et vous tomberez presque toujours juste.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Le cmdlet <code>Get-Help</code> ‚Äî votre principal assistant.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol class=\"wp-block-list\">\n    <!-- wp:list-item -->\n    <li><strong>Obtenons de l'aide sur l'aide elle-m√™me :</strong>\n        <!-- wp:code -->\n        <pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre>\n        <!-- /wp:code -->\n    </li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li><strong>Obtenons l'aide de base sur une commande pour travailler avec les processus :</strong>\n        <!-- wp:code -->\n        <pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre>\n        <!-- /wp:code -->\n    </li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li><strong>Voyons des exemples d'utilisation de cette commande :</strong>\n        <!-- wp:code -->\n        <pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre>\n        <!-- /wp:code -->\n        <p>C'est un param√®tre incroyablement utile qui fournit souvent des solutions pr√™tes √† l'emploi pour vos t√¢ches.</p>\n    </li>\n    <!-- /wp:list-item -->\n    <!-- wp:list-item -->\n    <li><strong>Obtenons des informations aussi d√©taill√©es que possible sur la commande :</strong>\n        <!-- wp:code -->\n        <pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre>\n        <!-- /wp:code -->\n    </li>\n    <!-- /wp:list-item -->\n</ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Dans la partie suivante : le pipeline ou la cha√Æne de commandes (PipeLines)</p>\n<!-- /wp:paragraph -->[:] ",
  "post_status": "publish",
  "post_author": 1,
  "_seo_description": "[:fr]D√©couvrez la philosophie de PowerShell, son √©volution depuis MS-DOS et pourquoi il surpasse les shells classiques gr√¢ce √† la manipulation d'objets structur√©s. Explorez l'histoire et les fonctionnalit√©s cl√©s de PowerShell.[:]",
  "_seo_keywords": "[:fr]PowerShell, philosophie, MS-DOS, COMMAND.COM, fichiers batch, shell Bourne, sh, csh, Windows NT, automatisation, objets, cmdlets, Get-Help, Jeffrey Snover, ligne de commande[:]"
}
{
  "post_title": "[:es]Filosof√≠a de PowerShell. Parte 0 y 1[:]",
  "post_content": "[:es]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">Filosof√≠a de PowerShell.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Parte 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">¬øQu√© hab√≠a antes de PowerShell?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>En 1981 se lanz√≥ MS-DOS 1.0 con el int√©rprete de comandos <code>COMMAND.COM</code>. Para la automatizaci√≥n de tareas se utilizaban <strong>archivos por lotes (<code>.bat</code>)</strong> ‚Äî simples archivos de texto con una secuencia de comandos de consola. Un sorprendente ascetismo de la l√≠nea de comandos en comparaci√≥n con los sistemas compatibles con POSIX, donde ya desde 1979 exist√≠a el <strong>shell de Bourne (<code>sh</code>)</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Estado del mercado de shells en el momento del lanzamiento de <strong>MS-DOS 1.0</strong> (agosto de 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Aqu√≠ hay una tabla resumen de los sistemas operativos populares de la √©poca y su soporte de shells (<code>sh</code>, <code>csh</code>, etc.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Sistema Operativo</th>\n<th>Soporte de Shells (<code>sh</code>, <code>csh</code>, otros)</th>\n<th>Comentario</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>UNIX Versi√≥n 7 (V7)</strong></td>\n<td><code>sh</code></td>\n<td>√öltimo UNIX cl√°sico de Bell Labs, ampliamente difundido</td>\n</tr>\n<tr>\n<td><strong>UNIX/32V</strong></td>\n<td><code>sh</code>, <code>csh</code></td>\n<td>Versi√≥n de UNIX para arquitectura VAX</td>\n</tr>\n<tr>\n<td><strong>4BSD / 3BSD</strong></td>\n<td><code>sh</code>, <code>csh</code></td>\n<td>Rama universitaria de UNIX de Berkeley</td>\n</tr>\n<tr>\n<td><strong>UNIX System III</strong></td>\n<td><code>sh</code></td>\n<td>Primera versi√≥n comercial de AT&amp;T, predecesora de System V</td>\n</tr>\n<tr>\n<td><strong>Xenix (de Microsoft)</strong></td>\n<td><code>sh</code></td>\n<td>Versi√≥n licenciada de UNIX, vendida por Microsoft desde 1980.</td>\n</tr>\n<tr>\n<td><strong>IDRIS</strong></td>\n<td><code>sh</code></td>\n<td>SO tipo UNIX para PDP-11 e Intel</td>\n</tr>\n<tr>\n<td><strong>Coherent (Mark Williams)</strong></td>\n<td><code>sh</code> (similar)</td>\n<td>Alternativa econ√≥mica a UNIX para PC</td>\n</tr>\n<tr>\n<td><strong>CP/M (Digital Research)</strong></td>\n<td>‚ùå (No <code>sh</code>, solo CLI muy b√°sico)</td>\n<td>No es UNIX, el SO m√°s popular para PCs de 8 bits</td>\n</tr>\n<tr>\n<td><strong>MS-DOS 1.0</strong></td>\n<td>‚ùå (solo <code>COMMAND.COM</code>)</td>\n<td>Shell de comandos m√≠nimo, sin scripts ni pipes</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° Qu√© son <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, el principal int√©rprete de scripts de UNIX desde 1977.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, un shell mejorado con una sintaxis similar a C y comodidades para el trabajo interactivo.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Estos shells <strong>soportaban redirecciones, pipes, variables, funciones y condiciones</strong> ‚Äî todo lo que hizo de UNIX una potente herramienta de automatizaci√≥n.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft se centr√≥ en los <strong>PC IBM de 16 bits econ√≥micos</strong>, que ten√≠an <strong>poca memoria</strong> (normalmente 64‚Äì256 KB), no contaban con multitarea y estaban destinados al <strong>uso dom√©stico y de oficina</strong>, no a servidores. UNIX era de pago, requer√≠a una arquitectura compleja y experiencia, y los contables e ingenieros, que no eran administradores de sistemas, necesitaban un SO r√°pido y sencillo.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>La interfaz de DOS, en lugar del complejo <code>sh</code>, presentaba un √∫nico archivo <span dir=\"ltr\">command.com</span> con un escaso conjunto de comandos internos [<span dir=\"ltr\">(dir, copy, del, etc.)</span>](https://www.techgeekbuzz.com/blog/dos-commands/){:target=\"_blank\"} sin funciones, bucles ni m√≥dulos.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Tambi√©n exist√≠an comandos externos ‚Äî archivos ejecutables individuales (<code>.exe</code> o <code>.com</code>). Ejemplos: <code>FORMAT.COM</code>, <code>XCOPY.EXE</code>, <code>CHKDSK.EXE</code>, <code>EDIT.COM</code>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Los scripts de ejecuci√≥n se guardaban en un archivo de texto con la extensi√≥n <code>.bat</code> (archivo por lotes).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ejemplos de archivos de configuraci√≥n:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>AUTOEXEC.BAT</code></li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>CONFIG.SYS</code></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Configuraci√≥n autom√°tica y arranque de Windows 3.11\n:: Autor: hypo69\n:: A√±o: aproximadamente 1993\n:: Prop√≥sito: Inicializa el entorno DOS, carga controladores de red y arranca Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Configuraci√≥n del prompt de la l√≠nea de comandos\nPROMPT $p$g\n\n:: Configuraci√≥n de variables de entorno\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Carga de controladores y utilidades en memoria superior\nLH C:\\DOS\\SMARTDRV.EXE       :: Cach√© de disco\nLH C:\\DOS\\MOUSE.COM          :: Controlador de rat√≥n\n\n:: Carga de servicios de red (relevante para Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Inicio autom√°tico de Windows\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî Configuraci√≥n de memoria y controladores DOS para Windows 3.11\n:: Autor: hypo69\n:: A√±o: aproximadamente 1993\n:: Prop√≥sito: Inicializaci√≥n de controladores de memoria, configuraci√≥n de par√°metros del sistema\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>En Microsoft, paralelamente a DOS, casi de inmediato comenzaron a desarrollar un n√∫cleo completamente nuevo.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>El n√∫cleo [<a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a>](https://www.wikiwand.com/ru/articles/Windows_NT){:target=\"_blank\"} (New Technology) apareci√≥ por primera vez con el lanzamiento del sistema operativo:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><strong>Windows NT 3.1 ‚Äî 27 de julio de 1993</strong></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Desarrollo comenz√≥</strong>: en <strong>1988</strong> bajo la direcci√≥n de <strong>Dave Cutler</strong> (ex-ingeniero de DEC, creador de VMS) con el objetivo de crear un sistema operativo completamente nuevo, protegido, portable y multitarea, no compatible con MS-DOS a nivel de n√∫cleo.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî fue nombrado as√≠ para enfatizar la compatibilidad con <strong>Windows 3.1</strong> a nivel de interfaz, pero era una <strong>arquitectura completamente nueva</strong>.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Qu√© aport√≥ el n√∫cleo NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Caracter√≠stica</th>\n<th>Descripci√≥n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Arquitectura de 32 bits</strong></td>\n<td>A diferencia de MS-DOS y Windows 3.x, que eran de 16 bits.</td>\n</tr>\n<tr>\n<td><strong>Multitarea</strong></td>\n<td>Verdadera multitarea preferente.</td>\n</tr>\n<tr>\n<td><strong>Memoria protegida</strong></td>\n<td>Los programas no pod√≠an da√±ar la memoria de otros.</td>\n</tr>\n<tr>\n<td><strong>Modularidad</strong></td>\n<td>Arquitectura de n√∫cleo multinivel: HAL, Executive, Kernel, controladores.</td>\n</tr>\n<tr>\n<td><strong>Soporte multiplataforma</strong></td>\n<td>NT 3.1 funcionaba en x86, MIPS y Alpha.</td>\n</tr>\n<tr>\n<td><strong>Compatibilidad con POSIX</strong></td>\n<td>NT se suministraba con un <strong>subsistema POSIX</strong>, certificado bajo POSIX.1.</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú L√≠nea de tiempo de NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Versi√≥n NT</th>\n<th>A√±o</th>\n<th>Comentario</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NT 3.1</td>\n<td>1993</td>\n<td>Primer lanzamiento de NT</td>\n</tr>\n<tr>\n<td>NT 3.5 / 3.51</td>\n<td>1994‚Äì1995</td>\n<td>Mejoras, optimizaci√≥n</td>\n</tr>\n<tr>\n<td>NT 4.0</td>\n<td>1996</td>\n<td>Interfaz de Windows 95, pero n√∫cleo NT</td>\n</tr>\n<tr>\n<td>Windows 2000</td>\n<td>2000</td>\n<td>NT 5.0</td>\n</tr>\n<tr>\n<td>Windows XP</td>\n<td>2001</td>\n<td>NT 5.1</td>\n</tr>\n<tr>\n<td>Windows Vista</td>\n<td>2007</td>\n<td>NT 6.0</td>\n</tr>\n<tr>\n<td>Windows 10</td>\n<td>2015</td>\n<td>NT 10.0</td>\n</tr>\n<tr>\n<td>Windows 11</td>\n<td>2021</td>\n<td>Tambi√©n NT 10.0 (marketing üòä)</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Diferencias en las capacidades de los sistemas operativos:</h2>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Caracter√≠stica</th>\n<th><strong>MS-DOS</strong> (1981)</th>\n<th><strong>Windows NT</strong> (1993)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Tipo de sistema</strong></td>\n<td>Monol√≠tico, monotarea</td>\n<td>Micron√∫cleo/h√≠brido, multitarea</td>\n</tr>\n<tr>\n<td><strong>Arquitectura de bits</strong></td>\n<td>16 bits</td>\n<td>32 bits (con soporte de 64 bits desde NT 5.2 / XP x64)</td>\n</tr>\n<tr>\n<td><strong>Multitarea</strong></td>\n<td>‚ùå Ausente (un proceso a la vez)</td>\n<td>‚úÖ Multitarea preferente</td>\n</tr>\n<tr>\n<td><strong>Memoria protegida</strong></td>\n<td>‚ùå No</td>\n<td>‚úÖ S√≠ (cada proceso en su propio espacio de direcciones)</td>\n</tr>\n<tr>\n<td><strong>Modo multiusuario</strong></td>\n<td>‚ùå No</td>\n<td>‚úÖ Parcialmente (en NT Workstation/Server)</td>\n</tr>\n<tr>\n<td><strong>Compatibilidad con POSIX</strong></td>\n<td>‚ùå No</td>\n<td>‚úÖ Subsistema POSIX integrado en NT 3.1‚Äì5.2</td>\n</tr>\n<tr>\n<td><strong>Portabilidad del n√∫cleo</strong></td>\n<td>‚ùå Solo x86</td>\n<td>‚úÖ x86, MIPS, Alpha, PowerPC</td>\n</tr>\n<tr>\n<td><strong>Controladores</strong></td>\n<td>Acceso directo al hardware</td>\n<td>A trav√©s de HAL y Controladores en modo kernel</td>\n</tr>\n<tr>\n<td><strong>Nivel de acceso de aplicaciones</strong></td>\n<td>Aplicaciones = nivel de sistema</td>\n<td>Nivel de usuario / kernel separados</td>\n</tr>\n<tr>\n<td><strong>Seguridad</strong></td>\n<td>‚ùå Ausente</td>\n<td>‚úÖ Modelo de seguridad: SID, ACL, tokens de acceso</td>\n</tr>\n<tr>\n<td><strong>Estabilidad</strong></td>\n<td>‚ùå Dependencia de un programa = fallo del SO</td>\n<td>‚úÖ Aislamiento de procesos, protecci√≥n del n√∫cleo</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>¬°Pero hab√≠a un gran PERO! No se prest√≥ la debida atenci√≥n a las herramientas de automatizaci√≥n y administraci√≥n hasta 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft utiliz√≥ enfoques, estrategias y herramientas completamente diferentes para la administraci√≥n. Todo esto estaba <strong>disperso</strong>, a menudo orientado a la GUI y no siempre automatizable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Lista de algunas herramientas:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Herramienta</th>\n<th>Prop√≥sito</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cmd.exe</code></td>\n<td>Int√©rprete de comandos mejorado (reemplazo de <code>COMMAND.COM</code>)</td>\n</tr>\n<tr>\n<td><code>.bat</code>, <code>.cmd</code></td>\n<td>Scripts de l√≠nea de comandos</td>\n</tr>\n<tr>\n<td><strong>Windows Script Host (WSH)</strong></td>\n<td>Soporte de VBScript y JScript para automatizaci√≥n</td>\n</tr>\n<tr>\n<td><code>reg.exe</code></td>\n<td>Gesti√≥n del registro desde la l√≠nea de comandos</td>\n</tr>\n<tr>\n<td><code>net.exe</code></td>\n<td>Trabajo con usuarios, red, impresoras</td>\n</tr>\n<tr>\n<td><code>sc.exe</code></td>\n<td>Gesti√≥n de servicios</td>\n</tr>\n<tr>\n<td><code>tasklist</code>, <code>taskkill</code></td>\n<td>Gesti√≥n de procesos</td>\n</tr>\n<tr>\n<td><code>gpedit.msc</code></td>\n<td>Pol√≠tica de grupo (local)</td>\n</tr>\n<tr>\n<td><code>MMC</code></td>\n<td>Consola con snap-ins para la administraci√≥n</td>\n</tr>\n<tr>\n<td><code>WMI</code></td>\n<td>Acceso a informaci√≥n del sistema (v√≠a <code>wmic</code>, VBScript, o COM)</td>\n</tr>\n<tr>\n<td><code>WbemTest.exe</code></td>\n<td>GUI para probar consultas WMI</td>\n</tr>\n<tr>\n<td><code>eventvwr</code></td>\n<td>Visualizador de registros de eventos</td>\n</tr>\n<tr>\n<td><code>perfmon</code></td>\n<td>Monitorizaci√≥n de recursos</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Ejemplos de automatizaci√≥n:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Archivos VBScript (<code>*.vbs</code>) para administrar usuarios, redes, impresoras y servicios.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî interfaz de l√≠nea de comandos para WMI (por ejemplo: <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Scripts <code>.cmd</code> con llamadas a <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, etc.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Apareci√≥ por primera vez en <strong>Windows 98</strong>, se us√≥ activamente en <strong>Windows 2000 y XP</strong>.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Permit√≠a ejecutar archivos VBScript y JScript desde la l√≠nea de comandos:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Parte 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>No fue hasta 2002 cuando la compa√±√≠a formul√≥ el proyecto <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\">Monad</a>, que m√°s tarde se convertir√≠a en PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Inicio del desarrollo: aproximadamente en 2002</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Anuncio p√∫blico: 2003, como &quot;Monad Shell&quot;</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Primeras versiones beta: aparecieron hacia 2005</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Lanzamiento final (PowerShell 1.0): noviembre de 2006</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>El autor y arquitecto principal del proyecto Monad / PowerShell es Jeffrey Snover <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\">(Jeffrey Snover)</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Hoy en d√≠a, PowerShell Core funciona en <a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\">Windows</a>, <a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\">macOS</a> y <a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\">Linux</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Paralelamente, se desarroll√≥ el framework .NET y PowerShell se integr√≥ profundamente en √©l; en los siguientes cap√≠tulos mostrar√© ejemplos.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>¬°Y ahora ‚Äî lo m√°s importante!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>La principal ventaja de PowerShell en comparaci√≥n con los shells de comandos cl√°sicos es que trabaja con <em>objetos</em>, no con texto. Cuando ejecuta un comando, no le devuelve simplemente texto, sino un objeto estructurado (o una colecci√≥n de objetos) que tiene propiedades (Properties) y m√©todos (Methods) claramente definidos.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Vea c√≥mo PowerShell supera a los shells cl√°sicos gracias al <strong>trabajo con objetos</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ C√≥mo era: <code>dir</code> y parseo manual</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>En <strong>CMD</strong> (tanto en el antiguo <code>COMMAND.COM</code> como en <code>cmd.exe</code>), el comando <code>dir</code> devuelve el resultado como texto plano. Ejemplo de salida:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Supongamos que desea extraer el <strong>nombre del archivo</strong> y el <strong>tama√±o</strong> de cada archivo. Tendr√° que parsear las cadenas manualmente:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Esto es terriblemente dif√≠cil de leer, depende de la configuraci√≥n regional, el formato de fecha, la fuente. Y se rompe con espacios en los nombres.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: objetos en lugar de texto</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Ejemplo sencillo y legible:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Resultado:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Name          Length\n----\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> devuelve un <strong>array de objetos de archivos/carpetas</strong></li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>Select-Object</code> permite obtener f√°cilmente las <strong>propiedades</strong> necesarias</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç ¬øQu√© devuelve realmente <code>Get-ChildItem</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Resultado:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>PowerShell devuelve <strong>objetos de tipo <code>System.IO.FileInfo</code></strong>, que tienen:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>üß± Propiedades (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>üõ† M√©todos (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, etc.)</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Usted trabaja <strong>con objetos completos</strong>, no con cadenas.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Sintaxis &quot;Verbo-Sustantivo&quot;:</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell utiliza una <strong>sintaxis de comandos estricta y l√≥gica</strong>: <code>Verbo-Sustantivo</code> (Verb-Noun)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Verbo</th>\n<th>Qu√© hace</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Get-</code></td>\n<td>Obtener</td>\n</tr>\n<tr>\n<td><code>Set-</code></td>\n<td>Establecer</td>\n</tr>\n<tr>\n<td><code>New-</code></td>\n<td>Crear</td>\n</tr>\n<tr>\n<td><code>Remove-</code></td>\n<td>Eliminar</td>\n</tr>\n<tr>\n<td><code>Start-</code></td>\n<td>Iniciar</td>\n</tr>\n<tr>\n<td><code>Stop-</code></td>\n<td>Detener</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Sustantivo</th>\n<th>Sobre qu√© trabaja</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Process</code></td>\n<td>Proceso</td>\n</tr>\n<tr>\n<td><code>Service</code></td>\n<td>Servicio</td>\n</tr>\n<tr>\n<td><code>Item</code></td>\n<td>Archivo/carpeta</td>\n</tr>\n<tr>\n<td><code>EventLog</code></td>\n<td>Registros de eventos</td>\n</tr>\n<tr>\n<td><code>Computer</code></td>\n<td>Ordenador</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Ejemplos:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Qu√© hay que hacer</th>\n<th>Comando</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Obtener procesos</td>\n<td><code>Get-Process</code></td>\n</tr>\n<tr>\n<td>Detener un servicio</td>\n<td><code>Stop-Service</code></td>\n</tr>\n<tr>\n<td>Crear un nuevo archivo</td>\n<td><code>New-Item</code></td>\n</tr>\n<tr>\n<td>Obtener contenido de una carpeta</td>\n<td><code>Get-ChildItem</code></td>\n</tr>\n<tr>\n<td>Eliminar un archivo</td>\n<td><code>Remove-Item</code></td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Incluso si <strong>no conoce el comando exacto</strong>, puede <strong>inferirlo</strong> por el significado ‚Äî y casi siempre acertar√°.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>El cmdlet <code>Get-Help</code> es su principal asistente.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol class=\"wp-block-list\"><!-- wp:list-item -->\n<li><strong>Obtengamos ayuda sobre la propia ayuda:</strong></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list {\"ordered\":true,\"start\":2} -->\n<ol class=\"wp-block-list\"><!-- wp:list-item -->\n<li><strong>Obtengamos ayuda b√°sica sobre el comando para trabajar con procesos:</strong></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list {\"ordered\":true,\"start\":3} -->\n<ol class=\"wp-block-list\"><!-- wp:list-item -->\n<li><strong>Veamos ejemplos de uso de este comando:</strong></li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>Este es un par√°metro incre√≠blemente √∫til que a menudo proporciona soluciones listas para sus tareas.</li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list {\"ordered\":true,\"start\":5} -->\n<ol class=\"wp-block-list\"><!-- wp:list-item -->\n<li><strong>Obtengamos la informaci√≥n m√°s detallada sobre el comando:</strong></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>En la siguiente parte: tuber√≠as o cadenas de comandos (PipeLines)</p>\n<!-- /wp:paragraph -->[:]",
  "post_status": "publish",
  "post_author": 1,
  "post_name": "filosofia-de-powershell-parte-0-y-1",
  "_seo_description": "[:es]Descubre la filosof√≠a de PowerShell, su evoluci√≥n desde MS-DOS y Windows NT, y c√≥mo su enfoque en objetos revoluciona la automatizaci√≥n de tareas. Aprende sobre su sintaxis Verbo-Sustantivo y el uso de Get-Help.[:]",
  "_seo_keywords": "[:es]PowerShell, filosof√≠a, historia, MS-DOS, Windows NT, Monad, objetos, automatizaci√≥n, scripting, Verbo-Sustantivo, Get-Help, CLI, shell[:]"
}
{
  "post_title": "[:he]◊§◊ô◊ú◊ï◊°◊ï◊§◊ô◊ô◊™ <span dir=\"ltr\">PowerShell</span>. ◊ó◊ú◊ß 0-1[:]",
  "post_content": "[:he]<!-- wp:heading {\"level\":1} --><h1 class=\"wp-block-heading\" dir=\"rtl\">◊§◊ô◊ú◊ï◊°◊ï◊§◊ô◊ô◊™ <span dir=\"ltr\">PowerShell</span>.</h1><!-- /wp:heading --><!-- wp:heading {\"level\":2} --><h2 class=\"wp-block-heading\" dir=\"rtl\">◊ó◊ú◊ß 0.</h2><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">◊û◊î ◊î◊ô◊î ◊ú◊§◊†◊ô <span dir=\"ltr\">PowerShell</span>?</h3><!-- /wp:heading --><!-- wp:paragraph --><p dir=\"rtl\">◊ë◊©◊†◊™ 1981 ◊ô◊¶◊ê <span dir=\"ltr\">MS-DOS 1.0</span> ◊¢◊ù ◊û◊§◊®◊© ◊î◊§◊ß◊ï◊ì◊ï◊™ <span dir=\"ltr\"><code>COMMAND.COM</code></span>. ◊ú◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î ◊©◊ú ◊û◊©◊ô◊û◊ï◊™ ◊©◊ô◊û◊©◊ï <strong>◊ß◊ï◊ë◊¶◊ô ◊ê◊¶◊ï◊ï◊î (<span dir=\"ltr\"><code>.bat</code></span>)</strong> ‚Äî ◊ß◊ï◊ë◊¶◊ô ◊ò◊ß◊°◊ò ◊§◊©◊ï◊ò◊ô◊ù ◊¢◊ù ◊®◊¶◊£ ◊©◊ú ◊§◊ß◊ï◊ì◊ï◊™ ◊ß◊ï◊†◊°◊ï◊ú◊î. ◊ê◊°◊ß◊ò◊ô◊ñ◊ù ◊û◊ì◊î◊ô◊ù ◊©◊ú ◊©◊ï◊®◊™ ◊î◊§◊ß◊ï◊ì◊î ◊¢◊ú ◊®◊ß◊¢ ◊û◊¢◊®◊õ◊ï◊™ ◊™◊ï◊ê◊û◊ï◊™ <span dir=\"ltr\">POSIX</span> ◊©◊ë◊î◊ü ◊õ◊ë◊® ◊û◊©◊†◊™ 1979 ◊î◊ô◊ô◊™◊î ◊ß◊ô◊ô◊û◊™ <strong>◊û◊¢◊ò◊§◊™ ◊ë◊ï◊®◊ü (<span dir=\"ltr\"><code>sh</code></span>)</strong>.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">üìÖ ◊û◊¶◊ë ◊©◊ï◊ß ◊î◊û◊¢◊ò◊§◊ï◊™ ◊ë◊ñ◊û◊ü ◊ô◊¶◊ô◊ê◊™ <span dir=\"ltr\"><strong>MS-DOS 1.0</strong></span> (◊ê◊ï◊í◊ï◊°◊ò 1981)</h3><!-- /wp:heading --><!-- wp:paragraph --><p dir=\"rtl\">◊ú◊î◊ú◊ü ◊ò◊ë◊ú◊î ◊û◊°◊õ◊û◊™ ◊©◊ú ◊û◊¢◊®◊õ◊ï◊™ ◊î◊§◊¢◊ú◊î ◊§◊ï◊§◊ï◊ú◊®◊ô◊ï◊™ ◊û◊ê◊ï◊™◊î ◊™◊ß◊ï◊§◊î ◊ï◊™◊û◊ô◊õ◊™◊ü ◊ë◊û◊¢◊ò◊§◊ï◊™ (<span dir=\"ltr\">sh</span>, <span dir=\"ltr\">csh</span> ◊ï◊¢◊ï◊ì):</p><!-- /wp:paragraph --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊û◊¢◊®◊õ◊™ ◊î◊§◊¢◊ú◊î</th><th>◊™◊û◊ô◊õ◊î ◊ë◊û◊¢◊ò◊§◊ï◊™ (<span dir=\"ltr\">sh</span>, <span dir=\"ltr\">csh</span>, ◊ê◊ó◊®◊ï◊™)</th><th>◊î◊¢◊®◊ï◊™</th></tr></thead><tbody><tr><td><strong><span dir=\"ltr\">UNIX Version 7 (V7)</span></strong></td><td><span dir=\"ltr\"><code>sh</code></span></td><td>◊î-<span dir=\"ltr\">UNIX</span> ◊î◊ß◊ú◊ê◊°◊ô ◊î◊ê◊ó◊®◊ï◊ü ◊©◊ú <span dir=\"ltr\">Bell Labs</span>, ◊†◊§◊ï◊• ◊ë◊©◊ô◊û◊ï◊©</td></tr><tr><td><strong><span dir=\"ltr\">UNIX/32V</span></strong></td><td><span dir=\"ltr\"><code>sh</code></span>, <span dir=\"ltr\"><code>csh</code></span></td><td>◊í◊®◊°◊™ <span dir=\"ltr\">UNIX</span> ◊ú◊ê◊®◊õ◊ô◊ò◊ß◊ò◊ï◊®◊™ <span dir=\"ltr\">VAX</span></td></tr><tr><td><strong><span dir=\"ltr\">4BSD / 3BSD</span></strong></td><td><span dir=\"ltr\"><code>sh</code></span>, <span dir=\"ltr\"><code>csh</code></span></td><td>◊¢◊†◊£ <span dir=\"ltr\">UNIX</span> ◊ê◊ï◊†◊ô◊ë◊®◊°◊ô◊ò◊ê◊ô ◊û-<span dir=\"ltr\">Berkeley</span></td></tr><tr><td><strong><span dir=\"ltr\">UNIX System III</span></strong></td><td><span dir=\"ltr\"><code>sh</code></span></td><td>◊î◊í◊®◊°◊î ◊î◊û◊°◊ó◊®◊ô◊™ ◊î◊®◊ê◊©◊ï◊†◊î ◊û-<span dir=\"ltr\">AT&amp;T</span>, ◊ß◊ï◊ì◊û◊™ ◊ú-<span dir=\"ltr\">System V</span></td></tr><tr><td><strong><span dir=\"ltr\">Xenix</span> (◊û-<span dir=\"ltr\">Microsoft</span>)</strong></td><td><span dir=\"ltr\"><code>sh</code></span></td><td>◊í◊®◊°◊™ <span dir=\"ltr\">UNIX</span> ◊û◊ï◊®◊©◊ô◊™, ◊†◊û◊õ◊®◊î ◊¢◊ú ◊ô◊ì◊ô <span dir=\"ltr\">Microsoft</span> ◊û◊©◊†◊™ 1980</td></tr><tr><td><strong><span dir=\"ltr\">IDRIS</span></strong></td><td><span dir=\"ltr\"><code>sh</code></span></td><td>◊û◊¢◊®◊õ◊™ ◊î◊§◊¢◊ú◊î ◊ì◊û◊ï◊ô◊™ <span dir=\"ltr\">UNIX</span> ◊¢◊ë◊ï◊® <span dir=\"ltr\">PDP-11</span> ◊ï-<span dir=\"ltr\">Intel</span></td></tr><tr><td><strong><span dir=\"ltr\">Coherent</span> (<span dir=\"ltr\">Mark Williams</span>)</strong></td><td><span dir=\"ltr\"><code>sh</code></span> (◊ì◊ï◊û◊î)</td><td>◊ê◊ú◊ò◊®◊†◊ò◊ô◊ë◊î ◊ñ◊ï◊ú◊î ◊ú-<span dir=\"ltr\">UNIX</span> ◊¢◊ë◊ï◊® ◊û◊ó◊©◊ë◊ô◊ù ◊ê◊ô◊©◊ô◊ô◊ù</td></tr><tr><td><strong><span dir=\"ltr\">CP/M</span> (<span dir=\"ltr\">Digital Research</span>)</strong></td><td>‚ùå (◊ê◊ô◊ü <span dir=\"ltr\"><code>sh</code></span>, ◊®◊ß <span dir=\"ltr\">CLI</span> ◊§◊©◊ï◊ò ◊ë◊ô◊ï◊™◊®)</td><td>◊ú◊ê <span dir=\"ltr\">UNIX</span>, ◊û◊¢◊®◊õ◊™ ◊î◊î◊§◊¢◊ú◊î ◊î◊§◊ï◊§◊ï◊ú◊®◊ô◊™ ◊ë◊ô◊ï◊™◊® ◊ú◊û◊ó◊©◊ë◊ô <span dir=\"ltr\">8-bit</span></td></tr><tr><td><strong><span dir=\"ltr\">MS-DOS 1.0</span></strong></td><td>‚ùå (◊®◊ß <span dir=\"ltr\"><code>COMMAND.COM</code></span>)</td><td>◊û◊¢◊ò◊§◊™ ◊§◊ß◊ï◊ì◊î ◊û◊ô◊†◊ô◊û◊ú◊ô◊™, ◊ú◊ú◊ê ◊°◊ß◊®◊ô◊§◊ò◊ô◊ù ◊ê◊ï <span dir=\"ltr\">pipe</span></td></tr></tbody></table><!-- /wp:html --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">üí° ◊û◊î◊ù <span dir=\"ltr\"><code>sh</code></span> ◊ï-<span dir=\"ltr\"><code>csh</code></span></h3><!-- /wp:heading --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li><span dir=\"ltr\"><code>sh</code></span> ‚Äî <strong>◊û◊¢◊ò◊§◊™ ◊ë◊ï◊®◊ü (<span dir=\"ltr\">Bourne Shell</span>)</strong>, ◊û◊§◊®◊© ◊î◊°◊ß◊®◊ô◊§◊ò◊ô◊ù ◊î◊¢◊ô◊ß◊®◊ô ◊©◊ú <span dir=\"ltr\">UNIX</span> ◊û◊©◊†◊™ 1977.</li><!-- /wp:list-item --><!-- wp:list-item --><li><span dir=\"ltr\"><code>csh</code></span> ‚Äî <strong>◊û◊¢◊ò◊§◊™ <span dir=\"ltr\">C</span> (<span dir=\"ltr\">C Shell</span>)</strong>, ◊û◊¢◊ò◊§◊™ ◊û◊©◊ï◊§◊®◊™ ◊¢◊ù ◊™◊ó◊ë◊ô◊® ◊ì◊û◊ï◊ô <span dir=\"ltr\">C</span>, ◊ï◊†◊ï◊ó◊ï◊™ ◊ú◊¢◊ë◊ï◊ì◊î ◊ê◊ô◊†◊ò◊®◊ê◊ß◊ò◊ô◊ë◊ô◊™.</li><!-- /wp:list-item --><!-- wp:list-item --><li>◊û◊¢◊ò◊§◊ï◊™ ◊ê◊ú◊ï <strong>◊™◊û◊õ◊ï ◊ë◊î◊§◊†◊ô◊ï◊™ (<span dir=\"ltr\">redirects</span>), ◊¶◊ô◊†◊ï◊®◊ï◊™ (<span dir=\"ltr\">pipes</span>), ◊û◊©◊™◊†◊ô◊ù (<span dir=\"ltr\">variables</span>), ◊§◊ï◊†◊ß◊¶◊ô◊ï◊™ (<span dir=\"ltr\">functions</span>) ◊ï◊™◊†◊ê◊ô◊ù (<span dir=\"ltr\">conditions</span>)</strong> ‚Äî ◊õ◊ú ◊û◊î ◊©◊î◊§◊ö ◊ê◊™ <span dir=\"ltr\">UNIX</span> ◊ú◊õ◊ú◊ô ◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î ◊¢◊ï◊¶◊û◊™◊ô.</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:paragraph --><p dir=\"rtl\"><span dir=\"ltr\">Microsoft</span> ◊î◊™◊û◊ß◊ì◊î ◊ë◊û◊ó◊©◊ë◊ô <span dir=\"ltr\"><strong>IBM PC</strong></span> ◊ñ◊ï◊ú◊ô◊ù ◊ë◊¢◊ú◊ô <span dir=\"ltr\">16-bit</span>, ◊©◊î◊ô◊ï ◊ë◊¢◊ú◊ô <strong>◊û◊¢◊ò ◊ñ◊ô◊õ◊®◊ï◊ü</strong> (◊ë◊ì◊®◊ö ◊õ◊ú◊ú <span dir=\"ltr\">64‚Äì256 KB</span>), ◊ú◊ê ◊™◊û◊õ◊ï ◊ë◊®◊ô◊ë◊ï◊ô ◊û◊©◊ô◊û◊ï◊™ ◊ï◊ô◊ï◊¢◊ì◊ï ◊ú<strong>◊©◊ô◊û◊ï◊© ◊ë◊ô◊™◊ô ◊ï◊û◊©◊®◊ì◊ô</strong>, ◊ï◊ú◊ê ◊ú◊©◊®◊™◊ô◊ù. <span dir=\"ltr\">UNIX</span> ◊î◊ô◊î ◊ë◊™◊©◊ú◊ï◊ù, ◊ì◊®◊© ◊ê◊®◊õ◊ô◊ò◊ß◊ò◊ï◊®◊î ◊û◊ï◊®◊õ◊ë◊™ ◊ï◊†◊ô◊°◊ô◊ï◊ü, ◊ï◊ê◊ô◊ú◊ï ◊ú◊û◊†◊î◊ú◊ô ◊ó◊©◊ë◊ï◊†◊ï◊™ ◊ï◊û◊î◊†◊ì◊°◊ô◊ù, ◊ú◊ê ◊ú◊û◊†◊î◊ú◊ô ◊û◊¢◊®◊õ◊™, ◊†◊ì◊®◊©◊î ◊û◊¢◊®◊õ◊™ ◊î◊§◊¢◊ú◊î ◊û◊î◊ô◊®◊î ◊ï◊§◊©◊ï◊ò◊î.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊û◊û◊©◊ß <span dir=\"ltr\">DOS</span>, ◊ë◊û◊ß◊ï◊ù <span dir=\"ltr\"><code>sh</code></span> ◊î◊û◊ï◊®◊õ◊ë, ◊î◊¶◊ô◊í ◊ß◊ï◊ë◊• ◊ê◊ó◊ì <span dir=\"ltr\"><code>command.com</code></span> ◊¢◊ù ◊°◊ò ◊û◊¶◊ï◊û◊¶◊ù ◊©◊ú ◊§◊ß◊ï◊ì◊ï◊™ ◊§◊†◊ô◊û◊ô◊ï◊™ [<span dir=\"ltr\">(<code>dir</code>, <code>copy</code>, <code>del</code></span> ◊ï◊õ◊ì◊ï◊û◊î)](<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\">https://www.techgeekbuzz.com/blog/dos-commands/</a>) ◊ú◊ú◊ê ◊§◊ï◊†◊ß◊¶◊ô◊ï◊™, ◊ú◊ï◊ú◊ê◊ï◊™ ◊ê◊ï ◊û◊ï◊ì◊ï◊ú◊ô◊ù.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊î◊ô◊ï ◊í◊ù ◊§◊ß◊ï◊ì◊ï◊™ ◊ó◊ô◊¶◊ï◊†◊ô◊ï◊™ ‚Äî ◊ß◊ï◊ë◊¶◊ô ◊î◊§◊¢◊ú◊î ◊†◊§◊®◊ì◊ô◊ù (<span dir=\"ltr\">.exe</span> ◊ê◊ï <span dir=\"ltr\">.com</span>). ◊ì◊ï◊í◊û◊ê◊ï◊™: <span dir=\"ltr\"><code>FORMAT.COM</code>, <code>XCOPY.EXE</code>, <code>CHKDSK.EXE</code>, <code>EDIT.COM</code></span>.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊™◊®◊ó◊ô◊©◊ô ◊î◊®◊¶◊î ◊†◊õ◊™◊ë◊ï ◊ë◊ß◊ï◊ë◊• ◊ò◊ß◊°◊ò ◊¢◊ù ◊°◊ô◊ï◊û◊™ <span dir=\"ltr\"><code>.bat</code></span> (<span dir=\"ltr\">batch file</span>).</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊ì◊ï◊í◊û◊ê◊ï◊™ ◊ú◊ß◊ï◊ë◊¶◊ô ◊™◊¶◊ï◊®◊î:</p><!-- /wp:paragraph --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li><span dir=\"ltr\">AUTOEXEC.BAT</span></li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: <span dir=\"rtl\">AUTOEXEC.BAT</span> ‚Äî <span dir=\"rtl\">◊™◊¶◊ï◊®◊î ◊ê◊ï◊ò◊ï◊û◊ò◊ô◊™ ◊ï◊î◊§◊¢◊ú◊™ </span><span dir=\"ltr\">Windows 3.11</span>\n:: <span dir=\"rtl\">◊û◊ó◊ë◊®: </span><span dir=\"ltr\">hypo69</span>\n:: <span dir=\"rtl\">◊©◊†◊î: ◊ë◊¢◊®◊ö 1993</span>\n:: <span dir=\"rtl\">◊û◊ò◊®◊î: ◊û◊ë◊¶◊¢ ◊ê◊™◊ó◊ï◊ú ◊°◊ë◊ô◊ë◊™ </span><span dir=\"ltr\">DOS</span><span dir=\"rtl\">, ◊ò◊¢◊ô◊†◊™ ◊û◊†◊î◊ú◊ô ◊î◊™◊ß◊†◊ô◊ù ◊®◊©◊™◊ô◊ô◊ù ◊ï◊î◊§◊¢◊ú◊™ </span><span dir=\"ltr\">Windows 3.11</span>\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: <span dir=\"rtl\">◊î◊í◊ì◊®◊™ ◊©◊ï◊®◊™ ◊î◊§◊ß◊ï◊ì◊î</span>\nPROMPT $p$g\n\n:: <span dir=\"rtl\">◊î◊í◊ì◊®◊™ ◊û◊©◊™◊†◊ô ◊°◊ë◊ô◊ë◊î</span>\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: <span dir=\"rtl\">◊ò◊¢◊ô◊†◊™ ◊û◊†◊î◊ú◊ô ◊î◊™◊ß◊†◊ô◊ù ◊ï◊õ◊ú◊ô ◊¢◊ñ◊® ◊ú◊ñ◊ô◊õ◊®◊ï◊ü ◊î◊¢◊ú◊ô◊ï◊ü</span>\nLH C:\\DOS\\SMARTDRV.EXE       :: <span dir=\"rtl\">◊û◊ò◊û◊ï◊ü ◊ì◊ô◊°◊ß</span>\nLH C:\\DOS\\MOUSE.COM          :: <span dir=\"rtl\">◊û◊†◊î◊ú ◊î◊™◊ß◊ü ◊¢◊õ◊ë◊®</span>\n\n:: <span dir=\"rtl\">◊ò◊¢◊ô◊†◊™ ◊©◊ô◊®◊ï◊™◊ô ◊®◊©◊™ (◊®◊ú◊ï◊ï◊†◊ò◊ô ◊ú-</span><span dir=\"ltr\">Windows for Workgroups 3.11</span><span dir=\"rtl\">)</span>\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: <span dir=\"rtl\">◊î◊§◊¢◊ú◊î ◊ê◊ï◊ò◊ï◊û◊ò◊ô◊™ ◊©◊ú </span><span dir=\"ltr\">Windows</span>\nWIN\n</code></pre><!-- /wp:code --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li><span dir=\"ltr\">CONFIG.SYS</span></li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: <span dir=\"rtl\">CONFIG.SYS</span> ‚Äî <span dir=\"rtl\">◊™◊¶◊ï◊®◊™ ◊ñ◊ô◊õ◊®◊ï◊ü ◊ï◊û◊†◊î◊ú◊ô ◊î◊™◊ß◊†◊ô◊ù ◊©◊ú </span><span dir=\"ltr\">DOS</span><span dir=\"rtl\"> ◊¢◊ë◊ï◊® </span><span dir=\"ltr\">Windows 3.11</span>\n:: <span dir=\"rtl\">◊û◊ó◊ë◊®: </span><span dir=\"ltr\">hypo69</span>\n:: <span dir=\"rtl\">◊©◊†◊î: ◊ë◊¢◊®◊ö 1993</span>\n:: <span dir=\"rtl\">◊û◊ò◊®◊î: ◊ê◊™◊ó◊ï◊ú ◊û◊†◊î◊ú◊ô ◊î◊™◊ß◊†◊ô◊ù ◊©◊ú ◊ñ◊ô◊õ◊®◊ï◊ü, ◊î◊í◊ì◊®◊™ ◊§◊®◊û◊ò◊®◊ô◊ù ◊ú◊û◊¢◊®◊õ◊™</span>\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n</code></pre><!-- /wp:code --><!-- wp:paragraph --><p dir=\"rtl\">◊ë-<span dir=\"ltr\">Microsoft</span>, ◊ë◊û◊ß◊ë◊ô◊ú ◊ú-<span dir=\"ltr\">DOS</span>, ◊î◊ó◊ú◊ï ◊õ◊û◊¢◊ò ◊û◊ô◊ì ◊ú◊§◊™◊ó ◊ú◊ô◊ë◊î ◊ó◊ì◊©◊î ◊ú◊ó◊ú◊ï◊ò◊ô◊ü.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊ú◊ô◊ë◊™ <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\"><span dir=\"ltr\"><strong>Windows NT</strong></span></a> (<span dir=\"ltr\">New Technology</span>) ◊î◊ï◊§◊ô◊¢◊î ◊ú◊®◊ê◊©◊ï◊†◊î ◊¢◊ù ◊©◊ó◊®◊ï◊® ◊û◊¢◊®◊õ◊™ ◊î◊î◊§◊¢◊ú◊î:</p><!-- /wp:paragraph --><!-- wp:quote --><blockquote class=\"wp-block-quote\" dir=\"rtl\"><p><span dir=\"ltr\"><strong>Windows NT 3.1</strong></span> ‚Äî 27 ◊ë◊ô◊ï◊ú◊ô 1993</p></blockquote><!-- /wp:quote --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li><strong>◊î◊§◊ô◊™◊ï◊ó ◊î◊ó◊ú</strong>: ◊ë◊©◊†◊™ <strong>1988</strong> ◊ë◊î◊ï◊ë◊ú◊™◊ï ◊©◊ú <strong><span dir=\"ltr\">◊ì◊ô◊ô◊ë ◊ß◊ê◊ò◊ú◊®</span> (<span dir=\"ltr\">Dave Cutler</span>)</strong> (◊û◊î◊†◊ì◊° <span dir=\"ltr\">DEC</span> ◊ú◊©◊¢◊ë◊®, ◊ô◊ï◊¶◊® <span dir=\"ltr\">VMS</span>) ◊ë◊û◊ò◊®◊î ◊ú◊ô◊¶◊ï◊® ◊û◊¢◊®◊õ◊™ ◊î◊§◊¢◊ú◊î ◊ó◊ì◊©◊î ◊ú◊ó◊ú◊ï◊ò◊ô◊ü, ◊û◊ï◊í◊†◊™, ◊†◊ô◊ô◊ì◊™ ◊ï◊®◊ë-◊û◊©◊ô◊û◊™◊ô◊™, ◊©◊ê◊ô◊†◊î ◊™◊ï◊ê◊û◊™ ◊ú-<span dir=\"ltr\">MS-DOS</span> ◊ë◊®◊û◊™ ◊î◊ú◊ô◊ë◊î.</li><!-- /wp:list-item --><!-- wp:list-item --><li><strong><span dir=\"ltr\">NT 3.1</span></strong> ‚Äî ◊†◊ß◊®◊ê◊î ◊õ◊ö ◊õ◊ì◊ô ◊ú◊î◊ì◊í◊ô◊© ◊™◊ê◊ô◊û◊ï◊™ ◊ú-<span dir=\"ltr\"><strong>Windows 3.1</strong></span> ◊ë◊®◊û◊™ ◊î◊û◊û◊©◊ß, ◊ê◊ö ◊î◊ô◊ô◊™◊î <strong>◊ê◊®◊õ◊ô◊ò◊ß◊ò◊ï◊®◊î ◊ó◊ì◊©◊î ◊ú◊ó◊ú◊ï◊ò◊ô◊ü</strong>.</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":4} --><h4 class=\"wp-block-heading\" dir=\"rtl\">üß† ◊û◊î ◊î◊ë◊ô◊ê◊î ◊ú◊ô◊ë◊™ <span dir=\"ltr\">NT</span>:</h4><!-- /wp:heading --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊™◊õ◊ï◊†◊î</th><th>◊™◊ô◊ê◊ï◊®</th></tr></thead><tbody><tr><td><strong><span dir=\"rtl\">◊ê◊®◊õ◊ô◊ò◊ß◊ò◊ï◊®◊™ 32-bit</span></strong></td><td>◊ë◊†◊ô◊í◊ï◊ì ◊ú-<span dir=\"ltr\">MS-DOS</span> ◊ï-<span dir=\"ltr\">Windows 3.x</span>, ◊©◊î◊ô◊ï ◊ë-<span dir=\"ltr\">16-bit</span>.</td></tr><tr><td><strong><span dir=\"rtl\">◊®◊ô◊ë◊ï◊ô ◊û◊©◊ô◊û◊ï◊™</span></strong></td><td>◊®◊ô◊ë◊ï◊ô ◊û◊©◊ô◊û◊ï◊™ ◊î◊ß◊ì◊û◊î ◊ê◊û◊ô◊™◊ô (<span dir=\"ltr\">preemptive multitasking</span>).</td></tr><tr><td><strong><span dir=\"rtl\">◊ñ◊ô◊õ◊®◊ï◊ü ◊û◊ï◊í◊ü</span></strong></td><td>◊™◊ï◊õ◊†◊ï◊™ ◊ú◊ê ◊ô◊õ◊ú◊ï ◊ú◊§◊í◊ï◊¢ ◊ñ◊ï ◊ë◊ñ◊ï ◊ë◊ñ◊ô◊õ◊®◊ï◊ü.</td></tr><tr><td><strong><span dir=\"rtl\">◊û◊ï◊ì◊ï◊ú◊®◊ô◊ï◊™</span></strong></td><td>◊ê◊®◊õ◊ô◊ò◊ß◊ò◊ï◊®◊™ ◊ú◊ô◊ë◊î ◊®◊ë-◊©◊õ◊ë◊™◊ô◊™: <span dir=\"ltr\">HAL</span>, <span dir=\"ltr\">Executive</span>, <span dir=\"ltr\">Kernel</span>, ◊û◊†◊î◊ú◊ô ◊î◊™◊ß◊†◊ô◊ù.</td></tr><tr><td><strong><span dir=\"rtl\">◊™◊û◊ô◊õ◊î ◊ë◊®◊ô◊ë◊ï◊ô ◊§◊ú◊ò◊§◊ï◊®◊û◊ï◊™</span></strong></td><td><span dir=\"ltr\">NT 3.1</span> ◊¢◊ë◊ì◊î ◊¢◊ú <span dir=\"ltr\">x86</span>, <span dir=\"ltr\">MIPS</span> ◊ï-<span dir=\"ltr\">Alpha</span>.</td></tr><tr><td><strong><span dir=\"rtl\">◊™◊ê◊ô◊û◊ï◊™ ◊ú-POSIX</span></strong></td><td><span dir=\"ltr\">NT</span> ◊°◊ï◊§◊ß◊î ◊¢◊ù <strong>◊™◊™-◊û◊¢◊®◊õ◊™ <span dir=\"ltr\">POSIX</span></strong>, ◊û◊ê◊ï◊©◊®◊™ ◊ú◊§◊ô <span dir=\"ltr\">POSIX.1</span>.</td></tr></tbody></table><!-- /wp:html --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":4} --><h4 class=\"wp-block-heading\" dir=\"rtl\">üìú ◊°◊ì◊®◊™ <span dir=\"ltr\">NT</span>:</h4><!-- /wp:heading --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊í◊®◊°◊™ <span dir=\"ltr\">NT</span></th><th>◊©◊†◊î</th><th>◊î◊¢◊®◊ï◊™</th></tr></thead><tbody><tr><td><span dir=\"ltr\">NT 3.1</span></td><td>1993</td><td>◊î◊û◊î◊ì◊ï◊®◊î ◊î◊®◊ê◊©◊ï◊†◊î ◊©◊ú <span dir=\"ltr\">NT</span></td></tr><tr><td><span dir=\"ltr\">NT 3.5 / 3.51</span></td><td>1994‚Äì1995</td><td>◊©◊ô◊§◊ï◊®◊ô◊ù, ◊ê◊ï◊§◊ò◊ô◊û◊ô◊ñ◊¶◊ô◊î</td></tr><tr><td><span dir=\"ltr\">NT 4.0</span></td><td>1996</td><td>◊û◊û◊©◊ß <span dir=\"ltr\">Windows 95</span>, ◊ê◊ö ◊ú◊ô◊ë◊™ <span dir=\"ltr\">NT</span></td></tr><tr><td><span dir=\"ltr\">Windows 2000</span></td><td>2000</td><td><span dir=\"ltr\">NT 5.0</span></td></tr><tr><td><span dir=\"ltr\">Windows XP</span></td><td>2001</td><td><span dir=\"ltr\">NT 5.1</span></td></tr><tr><td><span dir=\"ltr\">Windows Vista</span></td><td>2007</td><td><span dir=\"ltr\">NT 6.0</span></td></tr><tr><td><span dir=\"ltr\">Windows 10</span></td><td>2015</td><td><span dir=\"ltr\">NT 10.0</span></td></tr><tr><td><span dir=\"ltr\">Windows 11</span></td><td>2021</td><td>◊í◊ù <span dir=\"ltr\">NT 10.0</span> (◊©◊ô◊ï◊ï◊ß üòä)</td></tr></tbody></table><!-- /wp:html --><!-- wp:paragraph --><p dir=\"rtl\">◊î◊î◊ë◊ì◊ú ◊ë◊ô◊õ◊ï◊ú◊ï◊™ ◊©◊ú ◊û◊¢◊®◊õ◊ï◊™ ◊î◊î◊§◊¢◊ú◊î:</p><!-- /wp:paragraph --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊û◊ê◊§◊ô◊ô◊ü</th><th><span dir=\"ltr\"><strong>MS-DOS</strong></span> (1981)</th><th><span dir=\"ltr\"><strong>Windows NT</strong></span> (1993)</th></tr></thead><tbody><tr><td><strong><span dir=\"rtl\">◊°◊ï◊í ◊û◊¢◊®◊õ◊™</span></strong></td><td>◊û◊ï◊†◊ï◊ú◊ô◊ò◊ô◊™, ◊ó◊ì-◊û◊©◊ô◊û◊™◊ô◊™</td><td>◊û◊ô◊ß◊®◊ï-◊ú◊ô◊ë◊î/◊î◊ô◊ë◊®◊ô◊ì◊ô◊™, ◊®◊ë-◊û◊©◊ô◊û◊™◊ô◊™</td></tr><tr><td><strong><span dir=\"rtl\">◊ê◊®◊õ◊ô◊ò◊ß◊ò◊ï◊®◊î</span></strong></td><td><span dir=\"ltr\">16-bit</span></td><td><span dir=\"ltr\">32-bit</span> (◊¢◊ù ◊™◊û◊ô◊õ◊î ◊ë-<span dir=\"ltr\">64-bit</span> ◊û-<span dir=\"ltr\">NT 5.2 / XP x64</span>)</td></tr><tr><td><strong><span dir=\"rtl\">◊®◊ô◊ë◊ï◊ô ◊û◊©◊ô◊û◊ï◊™</span></strong></td><td>‚ùå ◊ó◊°◊® (◊™◊î◊ú◊ô◊ö ◊ê◊ó◊ì ◊ë◊õ◊ú ◊§◊¢◊ù)</td><td>‚úÖ <span dir=\"ltr\">Preemptive multitasking</span></td></tr><tr><td><strong><span dir=\"rtl\">◊ñ◊ô◊õ◊®◊ï◊ü ◊û◊ï◊í◊ü</span></strong></td><td>‚ùå ◊ê◊ô◊ü</td><td>‚úÖ ◊õ◊ü (◊õ◊ú ◊™◊î◊ú◊ô◊ö ◊ë◊û◊®◊ó◊ë ◊õ◊™◊ï◊ë◊ï◊™ ◊û◊©◊ú◊ï)</td></tr><tr><td><strong><span dir=\"rtl\">◊û◊¶◊ë ◊û◊®◊ï◊ë◊î ◊û◊©◊™◊û◊©◊ô◊ù</span></strong></td><td>‚ùå ◊ê◊ô◊ü</td><td>‚úÖ ◊ó◊ú◊ß◊ô◊™ (◊ë-<span dir=\"ltr\">NT Workstation/Server</span>)</td></tr><tr><td><strong><span dir=\"rtl\">◊™◊ê◊ô◊û◊ï◊™ ◊ú-POSIX</span></strong></td><td>‚ùå ◊ê◊ô◊ü</td><td>‚úÖ ◊™◊™-◊û◊¢◊®◊õ◊™ <span dir=\"ltr\">POSIX</span> ◊û◊ï◊ë◊†◊ô◊™ ◊ë-<span dir=\"ltr\">NT 3.1‚Äì5.2</span></td></tr><tr><td><strong><span dir=\"rtl\">◊†◊ô◊ô◊ì◊ï◊™ ◊ú◊ô◊ë◊î</span></strong></td><td>‚ùå ◊®◊ß <span dir=\"ltr\">x86</span></td><td>‚úÖ <span dir=\"ltr\">x86, MIPS, Alpha, PowerPC</span></td></tr><tr><td><strong><span dir=\"rtl\">◊û◊†◊î◊ú◊ô ◊î◊™◊ß◊†◊ô◊ù</span></strong></td><td>◊í◊ô◊©◊î ◊ô◊©◊ô◊®◊î ◊ú◊ó◊ï◊û◊®◊î</td><td>◊ì◊®◊ö <span dir=\"ltr\">HAL</span> ◊ï◊û◊†◊î◊ú◊ô ◊î◊™◊ß◊†◊ô◊ù ◊ë◊û◊¶◊ë ◊ú◊ô◊ë◊î (<span dir=\"ltr\">Kernel-mode Drivers</span>)</td></tr><tr><td><strong><span dir=\"rtl\">◊®◊û◊™ ◊í◊ô◊©◊î ◊ú◊ô◊ô◊©◊ï◊û◊ô◊ù</span></strong></td><td>◊ô◊ô◊©◊ï◊û◊ô◊ù = ◊®◊û◊™ ◊û◊¢◊®◊õ◊™</td><td>◊®◊û◊™ ◊û◊©◊™◊û◊© / ◊®◊û◊™ ◊ú◊ô◊ë◊î ◊û◊ï◊§◊®◊ì◊ï◊™</td></tr><tr><td><strong><span dir=\"rtl\">◊ê◊ë◊ò◊ó◊î</span></strong></td><td>‚ùå ◊ó◊°◊®◊î</td><td>‚úÖ ◊û◊ï◊ì◊ú ◊ê◊ë◊ò◊ó◊î: <span dir=\"ltr\">SID, ACL</span>, ◊ê◊°◊ô◊û◊ï◊†◊ô ◊í◊ô◊©◊î</td></tr><tr><td><strong><span dir=\"rtl\">◊ô◊¶◊ô◊ë◊ï◊™</span></strong></td><td>‚ùå ◊™◊ú◊ï◊™ ◊©◊ú ◊™◊ï◊õ◊†◊î ◊ê◊ó◊™ = ◊ß◊®◊ô◊°◊™ ◊û◊¢◊®◊õ◊™ ◊î◊§◊¢◊ú◊î</td><td>‚úÖ ◊ë◊ô◊ì◊ï◊ì ◊™◊î◊ú◊ô◊õ◊ô◊ù, ◊î◊í◊†◊™ ◊ú◊ô◊ë◊î</td></tr></tbody></table><!-- /wp:html --><!-- wp:paragraph --><p dir=\"rtl\">◊ê◊ë◊ú ◊î◊ô◊î \"◊ê◊ë◊ú\" ◊í◊ì◊ï◊ú ◊ê◊ó◊ì! ◊ú◊ê ◊î◊ï◊ß◊ì◊©◊î ◊™◊©◊ï◊û◊™ ◊ú◊ë ◊û◊°◊§◊ß◊™ ◊ú◊õ◊ú◊ô ◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î ◊ï◊†◊ô◊î◊ï◊ú ◊¢◊ì ◊©◊†◊™ 2002.</p><!-- /wp:paragraph --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:paragraph --><p dir=\"rtl\"><span dir=\"ltr\">Microsoft</span> ◊î◊©◊™◊û◊©◊î ◊ë◊í◊ô◊©◊ï◊™, ◊ê◊°◊ò◊®◊ò◊í◊ô◊ï◊™ ◊ï◊õ◊ú◊ô◊ù ◊©◊ï◊†◊ô◊ù ◊ú◊ó◊ú◊ï◊ò◊ô◊ü ◊ú◊†◊ô◊î◊ï◊ú. ◊õ◊ú ◊ñ◊î ◊î◊ô◊î <strong>◊û◊§◊ï◊¶◊ú</strong>, ◊ú◊¢◊ô◊™◊ô◊ù ◊ß◊®◊ï◊ë◊ï◊™ ◊û◊ë◊ï◊°◊° <span dir=\"ltr\">GUI</span> ◊ï◊ú◊ê ◊™◊û◊ô◊ì ◊†◊ô◊™◊ü ◊ú◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î.</p><!-- /wp:paragraph --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":5} --><h5 class=\"wp-block-heading\" dir=\"rtl\">üìå ◊®◊©◊ô◊û◊™ ◊õ◊ú◊ô◊ù ◊†◊ë◊ó◊®◊ô◊ù:</h5><!-- /wp:heading --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊õ◊ú◊ô</th><th>◊û◊ò◊®◊î</th></tr></thead><tbody><tr><td><span dir=\"ltr\"><code>cmd.exe</code></span></td><td>◊û◊§◊®◊© ◊§◊ß◊ï◊ì◊ï◊™ ◊û◊©◊ï◊§◊® (◊î◊ó◊ú◊§◊î ◊ú-<span dir=\"ltr\"><code>COMMAND.COM</code></span>)</td></tr><tr><td><span dir=\"ltr\"><code>.bat</code></span>, <span dir=\"ltr\"><code>.cmd</code></span></td><td>◊°◊ß◊®◊ô◊§◊ò◊ô◊ù ◊©◊ú ◊©◊ï◊®◊™ ◊î◊§◊ß◊ï◊ì◊î</td></tr><tr><td><strong><span dir=\"ltr\">Windows Script Host (WSH)</span></strong></td><td>◊™◊û◊ô◊õ◊î ◊ë-<span dir=\"ltr\">VBScript</span> ◊ï-<span dir=\"ltr\">JScript</span> ◊ú◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î</td></tr><tr><td><span dir=\"ltr\"><code>reg.exe</code></span></td><td>◊†◊ô◊î◊ï◊ú ◊î◊®◊ô◊©◊ï◊ù ◊û◊©◊ï◊®◊™ ◊î◊§◊ß◊ï◊ì◊î</td></tr><tr><td><span dir=\"ltr\"><code>net.exe</code></span></td><td>◊¢◊ë◊ï◊ì◊î ◊¢◊ù ◊û◊©◊™◊û◊©◊ô◊ù, ◊®◊©◊™, ◊û◊ì◊§◊°◊ï◊™</td></tr><tr><td><span dir=\"ltr\"><code>sc.exe</code></span></td><td>◊†◊ô◊î◊ï◊ú ◊©◊ô◊®◊ï◊™◊ô◊ù</td></tr><tr><td><span dir=\"ltr\"><code>tasklist</code></span>, <span dir=\"ltr\"><code>taskkill</code></span></td><td>◊†◊ô◊î◊ï◊ú ◊™◊î◊ú◊ô◊õ◊ô◊ù</td></tr><tr><td><span dir=\"ltr\"><code>gpedit.msc</code></span></td><td>◊û◊ì◊ô◊†◊ô◊ï◊™ ◊ß◊ë◊ï◊¶◊™◊ô◊™ (◊û◊ß◊ï◊û◊ô◊™)</td></tr><tr><td><span dir=\"ltr\"><code>MMC</code></span></td><td>◊ß◊ï◊†◊°◊ï◊ú◊î ◊¢◊ù ◊™◊ï◊°◊§◊ï◊™ (<span dir=\"ltr\">snap-ins</span>) ◊ú◊†◊ô◊î◊ï◊ú</td></tr><tr><td><strong><span dir=\"ltr\">WMI</span></strong></td><td>◊í◊ô◊©◊î ◊ú◊û◊ô◊ì◊¢ ◊û◊¢◊®◊õ◊™ (◊ì◊®◊ö <span dir=\"ltr\"><code>wmic</code></span>, <span dir=\"ltr\">VBScript</span>, ◊ê◊ï <span dir=\"ltr\">COM</span>)</td></tr></tr><tr><td><span dir=\"ltr\"><code>WbemTest.exe</code></span></td><td><span dir=\"ltr\">GUI</span> ◊ú◊ë◊ì◊ô◊ß◊™ ◊©◊ê◊ô◊ú◊™◊ï◊™ <span dir=\"ltr\">WMI</span></td></tr><tr><td><span dir=\"ltr\"><code>eventvwr</code></span></td><td>◊¶◊§◊ô◊ô◊î ◊ë◊ô◊ï◊û◊†◊ô ◊ê◊ô◊®◊ï◊¢◊ô◊ù</td></tr><tr><td><span dir=\"ltr\"><code>perfmon</code></span></td><td>◊†◊ô◊ò◊ï◊® ◊û◊©◊ê◊ë◊ô◊ù</td></tr></tbody></table><!-- /wp:html --><!-- wp:heading {\"level\":5} --><h5 class=\"wp-block-heading\" dir=\"rtl\">üõ† ◊ì◊ï◊í◊û◊ê◊ï◊™ ◊ú◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î:</h5><!-- /wp:heading --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li>◊ß◊ï◊ë◊¶◊ô <span dir=\"ltr\">VBScript</span> (<span dir=\"ltr\"><code>*.vbs</code></span>) ◊ú◊†◊ô◊î◊ï◊ú ◊û◊©◊™◊û◊©◊ô◊ù, ◊®◊©◊™◊ï◊™, ◊û◊ì◊§◊°◊ï◊™ ◊ï◊©◊ô◊®◊ï◊™◊ô◊ù.</li><!-- /wp:list-item --><!-- wp:list-item --><li><span dir=\"ltr\"><code>WMIC</code></span> ‚Äî ◊û◊û◊©◊ß ◊©◊ï◊®◊™ ◊§◊ß◊ï◊ì◊î ◊ú-<span dir=\"ltr\">WMI</span> (◊ú◊ì◊ï◊í◊û◊î: <span dir=\"ltr\"><code>wmic process list brief</code></span>).</li><!-- /wp:list-item --><!-- wp:list-item --><li>◊°◊ß◊®◊ô◊§◊ò◊ô <span dir=\"ltr\"><code>.cmd</code></span> ◊¢◊ù ◊ß◊®◊ô◊ê◊ï◊™ ◊ú-<span dir=\"ltr\"><code>net</code></span>, <span dir=\"ltr\"><code>sc</code></span>, <span dir=\"ltr\"><code>reg</code></span>, <span dir=\"ltr\"><code>wmic</code></span>, ◊ï◊õ◊ì◊ï◊û◊î.</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">‚öôÔ∏è <span dir=\"ltr\">Windows Scripting Host (WSH)</span></h3><!-- /wp:heading --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li>◊ú◊®◊ê◊©◊ï◊†◊î ◊î◊ï◊§◊ô◊¢ ◊ë-<span dir=\"ltr\"><strong>Windows 98</strong></span>, ◊©◊ô◊û◊© ◊ë◊ê◊ï◊§◊ü ◊§◊¢◊ô◊ú ◊ë-<span dir=\"ltr\"><strong>Windows 2000</strong></span> ◊ï-<span dir=\"ltr\"><strong>XP</strong></span>.</li><!-- /wp:list-item --><!-- wp:list-item --><li>◊ê◊§◊©◊® ◊ú◊î◊®◊ô◊• ◊ß◊ï◊ë◊¶◊ô <span dir=\"ltr\">VBScript</span> ◊ï-<span dir=\"ltr\">JScript</span> ◊û◊©◊ï◊®◊™ ◊î◊§◊ß◊ï◊ì◊î:</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre><!-- /wp:code --><!-- wp:heading {\"level\":2} --><h2 class=\"wp-block-heading\" dir=\"rtl\">◊ó◊ú◊ß 1.</h2><!-- /wp:heading --><!-- wp:paragraph --><p dir=\"rtl\">◊®◊ß ◊ë◊©◊†◊™ 2002 ◊í◊ï◊ë◊© ◊ë◊ó◊ë◊®◊î ◊§◊®◊ï◊ô◊ß◊ò <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\"><span dir=\"ltr\">Monad</span></a>, ◊©◊î◊™◊§◊™◊ó ◊û◊ê◊ï◊ó◊® ◊ô◊ï◊™◊® ◊ú-<span dir=\"ltr\">PowerShell</span>:</p><!-- /wp:paragraph --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li><strong>◊™◊ó◊ô◊ú◊™ ◊î◊§◊ô◊™◊ï◊ó</strong>: ◊ë◊¢◊®◊ö ◊ë◊©◊†◊™ 2002</li><!-- /wp:list-item --><!-- wp:list-item --><li><strong>◊î◊õ◊®◊ñ◊î ◊§◊ï◊û◊ë◊ô◊™</strong>: ◊©◊†◊™ 2003, ◊õ-\"<span dir=\"ltr\">Monad Shell</span>\"</li><!-- /wp:list-item --><!-- wp:list-item --><li><strong>◊í◊®◊°◊ê◊ï◊™ ◊ë◊ò◊ê ◊®◊ê◊©◊ï◊†◊ï◊™</strong>: ◊î◊ï◊§◊ô◊¢◊ï ◊¢◊ì ◊©◊†◊™ 2005</li><!-- /wp:list-item --><!-- wp:list-item --><li><strong>◊î◊©◊ó◊®◊ï◊® ◊î◊°◊ï◊§◊ô (<span dir=\"ltr\">PowerShell 1.0</span>)</strong>: ◊†◊ï◊ë◊û◊ë◊® 2006</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:paragraph --><p dir=\"rtl\">◊î◊û◊ó◊ë◊® ◊ï◊î◊ê◊ì◊®◊ô◊õ◊ú ◊î◊®◊ê◊©◊ô ◊©◊ú ◊§◊®◊ï◊ô◊ß◊ò <span dir=\"ltr\">Monad / PowerShell</span> ◊î◊ï◊ê <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\"><span dir=\"ltr\">◊í'◊§◊®◊ô ◊°◊†◊ï◊ë◊®</span> (<span dir=\"ltr\">Jeffrey Snover</span>)</a></p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊î◊ô◊ï◊ù <span dir=\"ltr\">PowerShell Core</span> ◊¢◊ï◊ë◊ì ◊¢◊ú:</p><!-- /wp:paragraph --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\"><span dir=\"ltr\">Windows</span></a></li><!-- /wp:list-item --><!-- wp:list-item --><li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\"><span dir=\"ltr\">macOS</span></a></li><!-- /wp:list-item --><!-- wp:list-item --><li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\"><span dir=\"ltr\">Linux</span></a></li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:paragraph --><p dir=\"rtl\">◊ë◊û◊ß◊ë◊ô◊ú ◊î◊™◊ß◊ô◊ô◊ù ◊§◊ô◊™◊ï◊ó ◊©◊ú <span dir=\"ltr\">framework .NET</span> ◊ï-<span dir=\"ltr\">PowerShell</span> ◊©◊ï◊ú◊ë ◊ë◊ï ◊¢◊û◊ï◊ß. ◊ë◊§◊®◊ß◊ô◊ù ◊î◊ë◊ê◊ô◊ù ◊ê◊¶◊ô◊í ◊ì◊ï◊í◊û◊ê◊ï◊™.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊ï◊¢◊õ◊©◊ô◊ï ‚Äî ◊î◊ó◊©◊ï◊ë ◊ë◊ô◊ï◊™◊®!</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊î◊ô◊™◊®◊ï◊ü ◊î◊¢◊ô◊ß◊®◊ô ◊©◊ú <span dir=\"ltr\">PowerShell</span> ◊ú◊¢◊ï◊û◊™ ◊û◊¢◊ò◊§◊ï◊™ ◊§◊ß◊ï◊ì◊î ◊ß◊ú◊ê◊°◊ô◊ï◊™ ◊î◊ï◊ê ◊ë◊õ◊ö ◊©◊î◊ï◊ê ◊¢◊ï◊ë◊ì ◊¢◊ù <em>◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù</em>, ◊ï◊ú◊ê ◊¢◊ù ◊ò◊ß◊°◊ò. ◊õ◊ê◊©◊® ◊ê◊™◊ù ◊û◊®◊ô◊¶◊ô◊ù ◊§◊ß◊ï◊ì◊î, ◊î◊ô◊ê ◊û◊ó◊ñ◊ô◊®◊î ◊ú◊õ◊ù ◊ú◊ê ◊®◊ß ◊ò◊ß◊°◊ò, ◊ê◊ú◊ê ◊ê◊ï◊ë◊ô◊ô◊ß◊ò ◊û◊ï◊ë◊†◊î (◊ê◊ï ◊ê◊ï◊°◊£ ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù) ◊©◊ô◊© ◊ú◊ï ◊û◊ê◊§◊ô◊ô◊†◊ô◊ù (<span dir=\"ltr\">Properties</span>) ◊ï◊û◊™◊ï◊ì◊ï◊™ (<span dir=\"ltr\">Methods</span>) ◊û◊ï◊í◊ì◊®◊ô◊ù ◊î◊ô◊ò◊ë.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p dir=\"rtl\">◊®◊ê◊ï ◊õ◊ô◊¶◊ì <span dir=\"ltr\">PowerShell</span> ◊¢◊ï◊ú◊î ◊¢◊ú ◊û◊¢◊ò◊§◊ï◊™ ◊ß◊ú◊ê◊°◊ô◊ï◊™ ◊î◊ï◊ì◊ï◊™ ◊ú<strong>◊¢◊ë◊ï◊ì◊î ◊¢◊ù ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù</strong></p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">üìÅ ◊ê◊ô◊ö ◊ñ◊î ◊î◊ô◊î: <span dir=\"ltr\"><code>dir</code></span> ◊ï◊†◊ô◊™◊ï◊ó ◊ô◊ì◊†◊ô</h3><!-- /wp:heading --><!-- wp:paragraph --><p dir=\"rtl\">◊ë-<span dir=\"ltr\"><strong>CMD</strong></span> (◊í◊ù ◊ë-<span dir=\"ltr\"><code>COMMAND.COM</code></span> ◊î◊ô◊©◊ü ◊ï◊í◊ù ◊ë-<span dir=\"ltr\"><code>cmd.exe</code></span>) ◊î◊§◊ß◊ï◊ì◊î <span dir=\"ltr\"><code>dir</code></span> ◊û◊ó◊ñ◊ô◊®◊î ◊ê◊™ ◊î◊™◊ï◊¶◊ê◊î ◊õ◊ò◊ß◊°◊ò ◊®◊í◊ô◊ú. ◊ì◊ï◊í◊û◊™ ◊§◊ú◊ò:</p><!-- /wp:paragraph --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-plaintext\" dir=\"ltr\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre><!-- /wp:code --><!-- wp:paragraph --><p dir=\"rtl\">◊†◊†◊ô◊ó ◊©◊ê◊™◊ù ◊®◊ï◊¶◊ô◊ù ◊ú◊ó◊ú◊• ◊ê◊™ <strong>◊©◊ù ◊î◊ß◊ï◊ë◊•</strong> ◊ï<strong>◊í◊ï◊ì◊ú</strong> ◊õ◊ú ◊ß◊ï◊ë◊•. ◊™◊ô◊ê◊ú◊¶◊ï ◊ú◊†◊™◊ó ◊ê◊™ ◊î◊©◊ï◊®◊ï◊™ ◊ô◊ì◊†◊ô◊™:</p><!-- /wp:paragraph --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-cmd\" dir=\"ltr\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre><!-- /wp:code --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li>◊ñ◊î ◊†◊ï◊®◊ê ◊ß◊©◊î ◊ú◊ß◊®◊ô◊ê◊î, ◊™◊ú◊ï◊ô ◊ë-<span dir=\"ltr\">locale</span>, ◊ë◊§◊ï◊®◊û◊ò ◊î◊™◊ê◊®◊ô◊ö, ◊ë◊í◊ï◊§◊ü. ◊ï◊ñ◊î ◊†◊©◊ë◊® ◊õ◊©◊©◊û◊ï◊™ ◊û◊õ◊ô◊ú◊ô◊ù ◊®◊ï◊ï◊ó◊ô◊ù.</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">‚úÖ <span dir=\"ltr\">PowerShell</span>: ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù ◊ë◊û◊ß◊ï◊ù ◊ò◊ß◊°◊ò</h3><!-- /wp:heading --><!-- wp:heading {\"level\":4} --><h4 class=\"wp-block-heading\" dir=\"rtl\">‚úî ◊ì◊ï◊í◊û◊î ◊§◊©◊ï◊ò◊î ◊ï◊ß◊®◊ô◊ê◊î:</h4><!-- /wp:heading --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre><!-- /wp:code --><!-- wp:paragraph --><p dir=\"rtl\"><strong>◊™◊ï◊¶◊ê◊î:</strong></p><!-- /wp:paragraph --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-plaintext\" dir=\"ltr\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre><!-- /wp:code --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li><span dir=\"ltr\"><code>Get-ChildItem</code></span> ◊û◊ó◊ñ◊ô◊® <strong>◊û◊¢◊®◊ö ◊©◊ú ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô ◊ß◊ë◊¶◊ô◊ù/◊™◊ô◊ß◊ô◊ï◊™</strong></li><!-- /wp:list-item --><!-- wp:list-item --><li><span dir=\"ltr\"><code>Select-Object</code></span> ◊û◊ê◊§◊©◊® ◊ú◊ß◊ë◊ú ◊ë◊ß◊ú◊ï◊™ ◊ê◊™ ◊î<strong>◊û◊ê◊§◊ô◊ô◊†◊ô◊ù</strong> ◊î◊®◊¶◊ï◊ô◊ô◊ù</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">üîç ◊û◊î ◊ë◊ê◊û◊™ ◊û◊ó◊ñ◊ô◊® <span dir=\"ltr\"><code>Get-ChildItem</code></span>?</h3><!-- /wp:heading --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre><!-- /wp:code --><!-- wp:paragraph --><p dir=\"rtl\"><strong>◊™◊ï◊¶◊ê◊î:</strong></p><!-- /wp:paragraph --><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-plaintext\" dir=\"ltr\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre><!-- /wp:code --><!-- wp:paragraph --><p dir=\"rtl\"><span dir=\"ltr\">PowerShell</span> ◊û◊ó◊ñ◊ô◊® <strong>◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù ◊û◊°◊ï◊í <span dir=\"ltr\"><code>System.IO.FileInfo</code></span></strong>, ◊©◊ú◊î◊ù ◊ô◊©:</p><!-- /wp:paragraph --><!-- wp:list --><ul dir=\"rtl\"><!-- wp:list-item --><li>üß± ◊û◊ê◊§◊ô◊ô◊†◊ô◊ù (<span dir=\"ltr\"><code>Name</code></span>, <span dir=\"ltr\"><code>Length</code></span>, <span dir=\"ltr\"><code>CreationTime</code></span>, <span dir=\"ltr\"><code>Extension</code></span>, ‚Ä¶)</li><!-- /wp:list-item --><!-- wp:list-item --><li>üõ† ◊û◊™◊ï◊ì◊ï◊™ (<span dir=\"ltr\"><code>Delete()</code></span>, <span dir=\"ltr\"><code>CopyTo()</code></span>, <span dir=\"ltr\"><code>MoveTo()</code></span> ◊ï◊õ◊ì◊ï◊û◊î)</li><!-- /wp:list-item --></ul><!-- /wp:list --><!-- wp:paragraph --><p dir=\"rtl\">◊ê◊™◊ù ◊¢◊ï◊ë◊ì◊ô◊ù <strong>◊¢◊ù ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù ◊û◊ú◊ê◊ô◊ù</strong>, ◊ï◊ú◊ê ◊¢◊ù ◊û◊ó◊®◊ï◊ñ◊ï◊™.</p><!-- /wp:paragraph --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:heading {\"level\":3} --><h3 class=\"wp-block-heading\" dir=\"rtl\">◊™◊ó◊ë◊ô◊® \"◊§◊ï◊¢◊ú-◊©◊ù ◊¢◊¶◊ù\":</h3><!-- /wp:heading --><!-- wp:paragraph --><p dir=\"rtl\"><span dir=\"ltr\">PowerShell</span> ◊û◊©◊™◊û◊© ◊ë<strong>◊™◊ó◊ë◊ô◊® ◊§◊ß◊ï◊ì◊ï◊™ ◊ß◊§◊ì◊†◊ô ◊ï◊î◊í◊ô◊ï◊†◊ô</strong>:<br>\"◊§◊ï◊¢◊ú-◊©◊ù ◊¢◊¶◊ù\" (<span dir=\"ltr\">Verb-Noun</span>)</p><!-- /wp:paragraph --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊§◊ï◊¢◊ú</th><th>◊û◊î ◊¢◊ï◊©◊î</th></tr></thead><tbody><tr><td><span dir=\"ltr\"><code>Get-</code></span></td><td>◊ß◊ë◊ú</td></tr><tr><td><span dir=\"ltr\"><code>Set-</code></span></td><td>◊î◊í◊ì◊®</td></tr><tr><td><span dir=\"ltr\"><code>New-</code></span></td><td>◊¶◊ï◊®</td></tr><tr><td><span dir=\"ltr\"><code>Remove-</code></span></td><td>◊î◊°◊®</td></tr><tr><td><span dir=\"ltr\"><code>Start-</code></span></td><td>◊î◊§◊¢◊ú</td></tr><tr><td><span dir=\"ltr\"><code>Stop-</code></span></td><td>◊¢◊¶◊ï◊®</td></tr></tbody></table><!-- /wp:html --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊©◊ù ◊¢◊¶◊ù</th><th>◊¢◊ú ◊û◊î ◊¢◊ï◊ë◊ì</th></tr></thead><tbody><tr><td><span dir=\"ltr\"><code>Process</code></span></td><td>◊™◊î◊ú◊ô◊ö</td></tr><tr><td><span dir=\"ltr\"><code>Service</code></span></td><td>◊©◊ô◊®◊ï◊™</td></tr><tr><td><span dir=\"ltr\"><code>Item</code></span></td><td>◊ß◊ï◊ë◊•/◊™◊ô◊ß◊ô◊ô◊î</td></tr><tr><td><span dir=\"ltr\"><code>EventLog</code></span></td><td>◊ô◊ï◊û◊†◊ô ◊ê◊ô◊®◊ï◊¢◊ô◊ù</td></tr><tr><td><span dir=\"ltr\"><code>Computer</code></span></td><td>◊û◊ó◊©◊ë</td></tr></tbody></table><!-- /wp:html --><!-- wp:heading {\"level\":4} --><h4 class=\"wp-block-heading\" dir=\"rtl\">üîÑ ◊ì◊ï◊í◊û◊ê◊ï◊™:</h4><!-- /wp:heading --><!-- wp:html --><table dir=\"rtl\"><thead><tr><th>◊û◊î ◊¶◊®◊ô◊ö ◊ú◊¢◊©◊ï◊™</th><th>◊§◊ß◊ï◊ì◊î</th></tr></thead><tbody><tr><td>◊ß◊ë◊ú ◊™◊î◊ú◊ô◊õ◊ô◊ù</td><td><span dir=\"ltr\"><code>Get-Process</code></span></td></tr><tr><td>◊¢◊¶◊ï◊® ◊©◊ô◊®◊ï◊™</td><td><span dir=\"ltr\"><code>Stop-Service</code></span></td></tr><tr><td>◊¶◊ï◊® ◊ß◊ï◊ë◊• ◊ó◊ì◊©</td><td><span dir=\"ltr\"><code>New-Item</code></span></td></tr><tr><td>◊ß◊ë◊ú ◊™◊ï◊õ◊ü ◊™◊ô◊ß◊ô◊ô◊î</td><td><span dir=\"ltr\"><code>Get-ChildItem</code></span></td></tr><tr><td>◊û◊ó◊ß ◊ß◊ï◊ë◊•</td><td><span dir=\"ltr\"><code>Remove-Item</code></span></td></tr></tbody></table><!-- /wp:html --><!-- wp:paragraph --><p dir=\"rtl\">‚¨Ö ◊í◊ù ◊ê◊ù ◊ê◊™◊ù <strong>◊ú◊ê ◊ô◊ï◊ì◊¢◊ô◊ù ◊ê◊™ ◊î◊§◊ß◊ï◊ì◊î ◊î◊û◊ì◊ï◊ô◊ß◊™</strong>, ◊ê◊™◊ù ◊ô◊õ◊ï◊ú◊ô◊ù <strong>◊ú◊†◊ó◊©</strong> ◊ê◊ï◊™◊î ◊ú◊§◊ô ◊î◊û◊©◊û◊¢◊ï◊™ ‚Äî ◊ï◊õ◊û◊¢◊ò ◊™◊û◊ô◊ì ◊™◊¶◊ì◊ß◊ï.</p><!-- /wp:paragraph --><!-- wp:separator --><hr class=\"wp-block-separator has-alpha-channel-opacity\"/><!-- /wp:separator --><!-- wp:paragraph --><p dir=\"rtl\">◊î-<span dir=\"ltr\">cmdlet</span> <span dir=\"ltr\"><code>Get-Help</code></span> ‚Äî ◊î◊¢◊ï◊ñ◊® ◊î◊®◊ê◊©◊ô ◊©◊ú◊õ◊ù.</p><!-- /wp:paragraph --><!-- wp:list {\"ordered\":true} --><ol dir=\"rtl\"><!-- wp:list-item --><li><strong>◊†◊ß◊ë◊ú ◊¢◊ñ◊®◊î ◊¢◊ú ◊î◊¢◊ñ◊®◊î ◊¢◊¶◊û◊î:</strong><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre><!-- /wp:code --></li><!-- /wp:list-item --><!-- wp:list-item --><li><strong>◊†◊ß◊ë◊ú ◊¢◊ñ◊®◊î ◊ë◊°◊ô◊°◊ô◊™ ◊¢◊ú ◊î◊§◊ß◊ï◊ì◊î ◊ú◊¢◊ë◊ï◊ì◊î ◊¢◊ù ◊™◊î◊ú◊ô◊õ◊ô◊ù:</strong><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre><!-- /wp:code --></li><!-- /wp:list-item --><!-- wp:list-item --><li><strong>◊†◊®◊ê◊î ◊ì◊ï◊í◊û◊ê◊ï◊™ ◊ú◊©◊ô◊û◊ï◊© ◊ë◊§◊ß◊ï◊ì◊î ◊ñ◊ï:</strong><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre><!-- /wp:code --><!-- wp:paragraph --><p dir=\"rtl\">◊ñ◊î◊ï ◊§◊®◊û◊ò◊® ◊©◊ô◊û◊ï◊©◊ô ◊ú◊î◊§◊ú◊ô◊ê, ◊©◊ú◊¢◊ô◊™◊ô◊ù ◊ß◊®◊ï◊ë◊ï◊™ ◊û◊°◊§◊ß ◊§◊™◊®◊ï◊†◊ï◊™ ◊û◊ï◊õ◊†◊ô◊ù ◊ú◊û◊©◊ô◊û◊ï◊™ ◊©◊ú◊õ◊ù.</p><!-- /wp:paragraph --></li><!-- /wp:list-item --><!-- wp:list-item --><li><strong>◊†◊ß◊ë◊ú ◊û◊ô◊ì◊¢ ◊û◊§◊ï◊®◊ò ◊õ◊õ◊ú ◊î◊ê◊§◊©◊® ◊¢◊ú ◊î◊§◊ß◊ï◊ì◊î:</strong><!-- wp:code --><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre><!-- /wp:code --></li><!-- /wp:list-item --></ol><!-- /wp:list --><!-- wp:paragraph --><p dir=\"rtl\">◊ë◊ó◊ú◊ß ◊î◊ë◊ê: <span dir=\"ltr\">pipeline</span> ◊ê◊ï ◊©◊®◊©◊®◊™ ◊§◊ß◊ï◊ì◊ï◊™ (<span dir=\"ltr\">PipeLines</span>)</p><!-- /wp:paragraph -->[:] ",
  "post_status": "publish",
  "post_author": 1,
  "_seo_description": "[:he]◊û◊ê◊û◊® ◊ñ◊î ◊û◊¶◊ô◊í ◊ê◊™ ◊§◊ô◊ú◊ï◊°◊ï◊§◊ô◊ô◊™ <span dir=\"ltr\">PowerShell</span>, ◊î◊ó◊ú ◊û◊î◊î◊ô◊°◊ò◊ï◊®◊ô◊î ◊©◊ú ◊û◊¢◊®◊õ◊ï◊™ ◊î◊§◊¢◊ú◊î ◊õ◊û◊ï <span dir=\"ltr\">MS-DOS</span> ◊ï-<span dir=\"ltr\">Windows NT</span>, ◊ì◊®◊ö ◊î◊¶◊®◊õ◊ô◊ù ◊ú◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î, ◊ï◊¢◊ì ◊ú◊¢◊ß◊®◊ï◊†◊ï◊™ ◊î◊ú◊ô◊ë◊î ◊©◊ú <span dir=\"ltr\">PowerShell</span>: ◊¢◊ë◊ï◊ì◊î ◊¢◊ù ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù ◊ï◊™◊ó◊ë◊ô◊® <span dir=\"ltr\">Verb-Noun</span>.[:]",
  "_seo_keywords": "[:he]PowerShell, ◊§◊ô◊ú◊ï◊°◊ï◊§◊ô◊î, MS-DOS, Windows NT, ◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î, Monad, ◊°◊ß◊®◊ô◊§◊ò◊ô◊ù, cmd, WSH, ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù, cmdlet, Get-Help[:]"
}
{
  "post_title": "[:en]The Philosophy of PowerShell. Part 0. What was before PowerShell? Part 1. Objects Instead of Text[:ru]–§–∏–ª–æ—Å–æ—Ñ–∏—è PowerShell. –ß–∞—Å—Ç—å 0. –ß—Ç–æ –±—ã–ª–æ –¥–æ PowerShell? –ß–∞—Å—Ç—å 1. –û–±—ä–µ–∫—Ç—ã –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞[:he]<span dir=\"rtl\">◊§◊ô◊ú◊ï◊°◊ï◊§◊ô◊ô◊™ PowerShell. ◊ó◊ú◊ß 0. ◊û◊î ◊î◊ô◊î ◊ú◊§◊†◊ô PowerShell? ◊ó◊ú◊ß 1. ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù ◊ë◊û◊ß◊ï◊ù ◊ò◊ß◊°◊ò</span>[:fr]La philosophie de PowerShell. Partie 0. Qu'y avait-il avant PowerShell ? Partie 1. Objets au lieu de texte[:es]La filosof√≠a de PowerShell. Parte 0. ¬øQu√© hab√≠a antes de PowerShell? Parte 1. Objetos en lugar de texto[:ua]–§—ñ–ª–æ—Å–æ—Ñ—ñ—è PowerShell. –ß–∞—Å—Ç–∏–Ω–∞ 0. –©–æ –±—É–ª–æ –¥–æ PowerShell? –ß–∞—Å—Ç–∏–Ω–∞ 1. –û–±'—î–∫—Ç–∏ –∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É[:pl]Filozofia PowerShell. Czƒô≈õƒá 0. Co by≈Ço przed PowerShell? Czƒô≈õƒá 1. Obiekty zamiast tekstu[:de]Die Philosophie von PowerShell. Teil 0. Was war vor PowerShell? Teil 1. Objekte statt Text[:it]La filosofia di PowerShell. Parte 0. Cosa c'era prima di PowerShell? Parte 1. Oggetti invece di testo[:]",
  "post_content": "[:ua]<!-- wp:heading {\"level\":1} -->\n<h3 class=\"wp-block-heading\">–§—ñ–ª–æ—Å–æ—Ñ—ñ—è PowerShell.</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">–ß–∞—Å—Ç–∏–Ω–∞ 0.</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–©–æ –±—É–ª–æ –¥–æ PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–£ 1981 —Ä–æ—Ü—ñ –≤–∏–π—à–æ–≤ MS-DOS 1.0 –∑ –∫–æ–º–∞–Ω–¥–Ω–∏–º —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–º <code>COMMAND.COM</code>. –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó –∑–∞–≤–¥–∞–Ω—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏—Å—è <strong>–ø–∞–∫–µ—Ç–Ω—ñ —Ñ–∞–π–ª–∏ (<code>.bat</code>)</strong> ‚Äî –ø—Ä–æ—Å—Ç—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ —Ñ–∞–π–ª–∏ –∑ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—é –∫–æ–Ω—Å–æ–ª—å–Ω–∏—Ö –∫–æ–º–∞–Ω–¥. –î–∏–≤–æ–≤–∏–∂–Ω–∏–π –∞—Å–∫–µ—Ç–∏–∑–º –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –Ω–∞ —Ç–ª—ñ POSIX-—Å—É–º—ñ—Å–Ω–∏—Ö —Å–∏—Å—Ç–µ–º, –¥–µ –≤–∂–µ –∑ 1979 —Ä–æ–∫—É —ñ—Å–Ω—É–≤–∞–ª–∞ <strong>–æ–±–æ–ª–æ–Ω–∫–∞ –ë–æ—Ä–Ω–∞ (<code>sh</code>)</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">üìÖ –°—Ç–∞–Ω —Ä–∏–Ω–∫—É –æ–±–æ–ª–æ–Ω–æ–∫ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤–∏—Ö–æ–¥—É <strong>MS-DOS 1.0</strong> (—Å–µ—Ä–ø–µ–Ω—å 1981)</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–û—Å—å –∑–≤–µ–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü—è –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –û–° —Ç–æ–≥–æ —á–∞—Å—É —Ç–∞ —ó—Ö –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –æ–±–æ–ª–æ–Ω–æ–∫ (<code>sh</code>, <code>csh</code> —Ç–∞ —ñ–Ω.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞</th><th>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –æ–±–æ–ª–æ–Ω–æ–∫ (<code>sh</code>, <code>csh</code>, —ñ–Ω.)</th><th>–ö–æ–º–µ–Ω—Ç–∞—Ä</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>–û—Å—Ç–∞–Ω–Ω—ñ–π –∫–ª–∞—Å–∏—á–Ω–∏–π UNIX Bell Labs, —à–∏—Ä–æ–∫–æ —Ä–æ–∑–ø–æ–≤—Å—é–¥–∂–µ–Ω–∏–π</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>–í–µ—Ä—Å—ñ—è UNIX –¥–ª—è –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏ VAX</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>–£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å—å–∫–∞ –≥—ñ–ª–∫–∞ UNIX –≤—ñ–¥ Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>–ü–µ—Ä—à–∞ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –≤–µ—Ä—Å—ñ—è –≤—ñ–¥ AT&amp;T, –ø–æ–ø–µ—Ä–µ–¥–Ω–∏–∫ System V</td></tr><tr><td><strong>Xenix (–≤—ñ–¥ Microsoft)</strong></td><td><code>sh</code></td><td>–õ—ñ—Ü–µ–Ω–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è UNIX, –ø—Ä–æ–¥–∞–≤–∞–ª–∞—Å—è Microsoft –∑ 1980 —Ä.</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>UNIX-–ø–æ–¥—ñ–±–Ω–∞ –û–° –¥–ª—è PDP-11 —Ç–∞ Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (—Å—Ö–æ–∂–∞)</td><td>–ù–µ–¥–æ—Ä–æ–≥–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ UNIX –¥–ª—è –ü–ö</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (–ù–µ–º–∞—î <code>sh</code>, —Ç—ñ–ª—å–∫–∏ –Ω–∞–π–ø—Ä–æ—Å—Ç—ñ—à–∏–π CLI)</td><td>–ù–µ UNIX, –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∞ –û–° –¥–ª—è 8-–±—ñ—Ç–Ω–∏—Ö –ü–ö</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (—Ç—ñ–ª—å–∫–∏ <code>COMMAND.COM</code>)</td><td>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∫–æ–º–∞–Ω–¥–Ω–∞ –æ–±–æ–ª–æ–Ω–∫–∞, –∂–æ–¥–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤ —á–∏ pipe</td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">üí° –©–æ —Ç–∞–∫–µ <code>sh</code>, <code>csh</code></h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, –æ—Å–Ω–æ–≤–Ω–∏–π —Å–∫—Ä–∏–ø—Ç–æ–≤–∏–π —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä UNIX –∑ 1977 —Ä–æ–∫—É.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, –ø–æ–∫—Ä–∞—â–µ–Ω–∞ –æ–±–æ–ª–æ–Ω–∫–∞ –∑ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º, —Å—Ö–æ–∂–∏–º –Ω–∞ C, —Ç–∞ –∑—Ä—É—á–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—ó —Ä–æ–±–æ—Ç–∏.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>–¶—ñ –æ–±–æ–ª–æ–Ω–∫–∏ <strong>–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è, –ø–∞–π–ø–∏, –∑–º—ñ–Ω–Ω—ñ, —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ —É–º–æ–≤–∏</strong> ‚Äî –≤—Å–µ, —â–æ –∑—Ä–æ–±–∏–ª–æ UNIX –ø–æ—Ç—É–∂–Ω–∏–º —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft –æ—Ä—ñ—î–Ω—Ç—É–≤–∞–ª–∞—Å—è –Ω–∞ <strong>–¥–µ—à–µ–≤—ñ 16-–±—ñ—Ç–Ω—ñ IBM PC</strong>, —è–∫—ñ –º–∞–ª–∏ <strong>–º–∞–ª–æ –ø–∞–º'—è—Ç—ñ</strong> (–∑–∞–∑–≤–∏—á–∞–π 64‚Äì256 –ö–ë), –Ω–µ –º–∞–ª–∏ –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—ñ —Ç–∞ –±—É–ª–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω—ñ –¥–ª—è <strong>–¥–æ–º–∞—à–Ω—å–æ–≥–æ —Ç–∞ –æ—Ñ—ñ—Å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</strong>, –∞ –Ω–µ —Å–µ—Ä–≤–µ—Ä—ñ–≤. UNIX –±—É–≤ –ø–ª–∞—Ç–Ω–∏–º, –≤–∏–º–∞–≥–∞–≤ —Å–∫–ª–∞–¥–Ω–æ—ó –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏ —Ç–∞ –¥–æ—Å–≤—ñ–¥—É, –∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞–º —Ç–∞ —ñ–Ω–∂–µ–Ω–µ—Ä–∞–º, –Ω–µ —Å–∏—Å—Ç–µ–º–Ω–∏–º –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, –ø–æ—Ç—Ä—ñ–±–Ω–∞ –±—É–ª–∞ —à–≤–∏–¥–∫–∞ —Ç–∞ –ø—Ä–æ—Å—Ç–∞ –û–°.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å DOS –∑–∞–º—ñ—Å—Ç—å —Å–∫–ª–∞–¥–Ω–æ–≥–æ <code>sh</code> –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–≤ –æ–¥–∏–Ω —Ñ–∞–π–ª <code>command.com</code> –∑—ñ —Å–∫—É–ø–∏–º –Ω–∞–±–æ—Ä–æ–º –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –∫–æ–º–∞–Ω–¥ (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\">dir, copy, del —Ç–æ—â–æ</a>) –±–µ–∑ —Ñ—É–Ω–∫—Ü—ñ–π, —Ü–∏–∫–ª—ñ–≤ —ñ –º–æ–¥—É–ª—ñ–≤.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ë—É–ª–∏ –π –∑–æ–≤–Ω—ñ—à–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ ‚Äî –æ–∫—Ä–µ–º—ñ –≤–∏–∫–æ–Ω—É–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏ (.exe –∞–±–æ .com). –ü—Ä–∏–∫–ª–∞–¥–∏: <code>FORMAT.COM</code>, <code>XCOPY.EXE</code>, <code>CHKDSK.EXE</code>, <code>EDIT.COM</code>.<br>–°—Ü–µ–Ω–∞—Ä—ñ—ó –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É–≤–∞–ª–∏—Å—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º <code>.bat</code> (batch file).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ü—Ä–∏–∫–ª–∞–¥–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Ç–∞ –∑–∞–ø—É—Å–∫ Windows 3.11\n:: –ê–≤—Ç–æ—Ä: hypo69\n:: –†—ñ–∫: –ø—Ä–∏–±–ª–∏–∑–Ω–æ 1993\n:: –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –í–∏–∫–æ–Ω—É—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é DOS-—Å–µ—Ä–µ–¥–æ–≤–∏—â–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ—Ä–µ–∂–µ–≤–∏—Ö –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ —Ç–∞ –∑–∞–ø—É—Å–∫ Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞\nPROMPT $p$g\n\n:: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ —Ç–∞ —É—Ç–∏–ª—ñ—Ç —É –≤–µ—Ä—Ö–Ω—é –ø–∞–º'—è—Ç—å\nLH C:\\DOS\\SMARTDRV.EXE       :: –î–∏—Å–∫–æ–≤–∏–π –∫–µ—à\nLH C:\\DOS\\MOUSE.COM          :: –î—Ä–∞–π–≤–µ—Ä –º–∏—à—ñ\n\n:: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ—Ä–µ–∂–µ–≤–∏—Ö —Å–ª—É–∂–± (–∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–∞–ø—É—Å–∫ Windows\nWIN\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ø–∞–º'—è—Ç—ñ —Ç–∞ –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ DOS –¥–ª—è Windows 3.11\n:: –ê–≤—Ç–æ—Ä: hypo69\n:: –†—ñ–∫: –ø—Ä–∏–±–ª–∏–∑–Ω–æ 1993\n:: –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ –ø–∞–º'—è—Ç—ñ, –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>–£ –ú–∞–π–∫—Ä–æ—Å–æ—Ñ—Ç –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ DOS –º–∞–π–∂–µ –≤—ñ–¥—Ä–∞–∑—É –ø–æ—á–∞–ª–∏ —Ä–æ–∑—Ä–æ–±–ª—è—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤–æ –Ω–æ–≤–µ —è–¥—Ä–æ.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–Ø–¥—Ä–æ <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\"><strong>Windows NT</strong></a> (New Technology) –≤–ø–µ—Ä—à–µ –∑'—è–≤–∏–ª–æ—Å—è –∑ —Ä–µ–ª—ñ–∑–æ–º –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><!-- wp:paragraph -->\n<p><strong>Windows NT 3.1 ‚Äî 27 –ª–∏–ø–Ω—è 1993 —Ä–æ–∫—É</strong></p>\n<!-- /wp:paragraph --></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>–†–æ–∑—Ä–æ–±–∫–∞ –ø–æ—á–∞–ª–∞—Å—è</strong>: —É <strong>1988 —Ä–æ—Ü—ñ</strong> –ø—ñ–¥ –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–æ–º <strong>–î–µ–π–≤–∞ –ö–∞—Ç–ª–µ—Ä–∞</strong> (–∫–æ–ª–∏—à–Ω—å–æ–≥–æ —ñ–Ω–∂–µ–Ω–µ—Ä–∞ DEC, —Ç–≤–æ—Ä—Ü—è VMS) –∑ –º–µ—Ç–æ—é —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é –Ω–æ–≤—É, –∑–∞—Ö–∏—â–µ–Ω—É, –ø–µ—Ä–µ–Ω–æ—Å–∏–º—É —Ç–∞ –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—É –û–°, –Ω–µ —Å—É–º—ñ—Å–Ω—É –∑ MS-DOS –Ω–∞ —Ä—ñ–≤–Ω—ñ —è–¥—Ä–∞.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî –Ω–∞–∑–∏–≤–∞–ª–∞—Å—è —Ç–∞–∫, —â–æ–± –ø—ñ–¥–∫—Ä–µ—Å–ª–∏—Ç–∏ —Å—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑ <strong>Windows 3.1</strong> –Ω–∞ —Ä—ñ–≤–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É, –∞–ª–µ –±—É–ª–∞ <strong>–∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–æ–≤–æ—é –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é</strong>.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h6 class=\"wp-block-heading\">üß† –©–æ –ø—Ä–∏–Ω–µ—Å–ª–æ —è–¥—Ä–æ NT:</h6>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å</th><th>–û–ø–∏—Å</th></tr></thead><tbody><tr><td><strong>32-–±—ñ—Ç–Ω–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞</strong></td><td>–ù–∞ –≤—ñ–¥–º—ñ–Ω—É –≤—ñ–¥ MS-DOS —ñ Windows 3.x, —è–∫—ñ –±—É–ª–∏ 16-–±—ñ—Ç–Ω–∏–º–∏.</td></tr><tr><td><strong>–ë–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—ñ—Å—Ç—å</strong></td><td>–°–ø—Ä–∞–≤–∂–Ω—è –≤–∏–ø–µ—Ä–µ–¥–∂—É–≤–∞–ª—å–Ω–∞ –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—ñ—Å—Ç—å (preemptive multitasking).</td></tr><tr><td><strong>–ó–∞—Ö–∏—â–µ–Ω–∞ –ø–∞–º'—è—Ç—å</strong></td><td>–ü—Ä–æ–≥—Ä–∞–º–∏ –Ω–µ –º–æ–≥–ª–∏ –ø–æ—à–∫–æ–¥–∏—Ç–∏ –ø–∞–º'—è—Ç—å –æ–¥–Ω–∞ –æ–¥–Ω–æ—ó.</td></tr><tr><td><strong>–ú–æ–¥—É–ª—å–Ω—ñ—Å—Ç—å</strong></td><td>–ë–∞–≥–∞—Ç–æ—Ä—ñ–≤–Ω–µ–≤–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ —è–¥—Ä–∞: HAL, Executive, Kernel, –¥—Ä–∞–π–≤–µ—Ä–∏.</td></tr><tr><td><strong>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –±–∞–≥–∞—Ç–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—ñ</strong></td><td>NT 3.1 –ø—Ä–∞—Ü—é–≤–∞–ª–∞ –Ω–∞ x86, MIPS —Ç–∞ Alpha.</td></tr><tr><td><strong>–°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑ POSIX</strong></td><td>NT –ø–æ—Å—Ç–∞—á–∞–ª–∞—Å—è –∑ <strong>POSIX-–ø—ñ–¥—Å–∏—Å—Ç–µ–º–æ—é</strong>, —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ—é –∑–∞ POSIX.1.</td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h6 class=\"wp-block-heading\">üìú –õ—ñ–Ω—ñ–π–∫–∞ NT:</h6>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–í–µ—Ä—Å—ñ—è NT</th><th>–†—ñ–∫</th><th>–ö–æ–º–µ–Ω—Ç–∞—Ä</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>–ü–µ—Ä—à–∏–π —Ä–µ–ª—ñ–∑ NT</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è, –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è</td></tr><tr><td>NT 4.0</td><td>1996</td><td>–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å Windows 95, –∞–ª–µ —è–¥—Ä–æ NT</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>–¢–µ–∂ NT 10.0 (–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ üòä)</td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>–†—ñ–∑–Ω–∏—Ü—è –≤ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Å–∏—Å—Ç–µ–º:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>–¢–∏–ø —Å–∏—Å—Ç–µ–º–∏</strong></td><td>–ú–æ–Ω–æ–ª—ñ—Ç–Ω–∞, –æ–¥–Ω–æ–∑–∞–¥–∞—á–Ω–∞</td><td>–ú—ñ–∫—Ä–æ—è–¥–µ—Ä–Ω–∞/–≥—ñ–±—Ä–∏–¥–Ω–∞, –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω–∞</td></tr><tr><td><strong>–†–æ–∑—Ä—è–¥–Ω—ñ—Å—Ç—å</strong></td><td>16-–±—ñ—Ç</td><td>32-–±—ñ—Ç (–∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é 64-–±—ñ—Ç –∑ NT 5.2 / XP x64)</td></tr><tr><td><strong>–ë–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—ñ—Å—Ç—å</strong></td><td>‚ùå –í—ñ–¥—Å—É—Ç–Ω—è (–æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å –∑–∞ —Ä–∞–∑)</td><td>‚úÖ –í–∏–ø–µ—Ä–µ–¥–∂—É–≤–∞–ª—å–Ω–∞ –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—ñ—Å—Ç—å</td></tr><tr><td><strong>–ó–∞—Ö–∏—â–µ–Ω–∞ –ø–∞–º'—è—Ç—å</strong></td><td>‚ùå –ù—ñ</td><td>‚úÖ –¢–∞–∫ (–∫–æ–∂–µ–Ω –ø—Ä–æ—Ü–µ—Å —É —Å–≤–æ—î–º—É –∞–¥—Ä–µ—Å–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ)</td></tr><tr><td><strong>–ë–∞–≥–∞—Ç–æ–∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Ä–µ–∂–∏–º</strong></td><td>‚ùå –ù—ñ</td><td>‚úÖ –ß–∞—Å—Ç–∫–æ–≤–æ (—É NT Workstation/Server)</td></tr><tr><td><strong>–°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑ POSIX</strong></td><td>‚ùå –ù—ñ</td><td>‚úÖ –í–±—É–¥–æ–≤–∞–Ω–∞ POSIX-–ø—ñ–¥—Å–∏—Å—Ç–µ–º–∞ –≤ NT 3.1‚Äì5.2</td></tr><tr><td><strong>–ü–µ—Ä–µ–Ω–æ—Å–∏–º—ñ—Å—Ç—å —è–¥—Ä–∞</strong></td><td>‚ùå –¢—ñ–ª—å–∫–∏ x86</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>–î—Ä–∞–π–≤–µ—Ä–∏</strong></td><td>–ü—Ä—è–º–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è</td><td>–ß–µ—Ä–µ–∑ HAL —Ç–∞ Kernel-mode Drivers</td></tr><tr><td><strong>–†—ñ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø—É –¥–æ–¥–∞—Ç–∫—ñ–≤</strong></td><td>–î–æ–¥–∞—Ç–∫–∏ = —Å–∏—Å—Ç–µ–º–Ω–∏–π —Ä—ñ–≤–µ–Ω—å</td><td>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π / –Ø–¥–µ—Ä–Ω–∏–π —Ä—ñ–≤–µ–Ω—å —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ</td></tr><tr><td><strong>–ë–µ–∑–ø–µ–∫–∞</strong></td><td>‚ùå –í—ñ–¥—Å—É—Ç–Ω—è</td><td>‚úÖ –ú–æ–¥–µ–ª—å –±–µ–∑–ø–µ–∫–∏: SID, ACL, –º–∞—Ä–∫–µ—Ä–∏ –¥–æ—Å—Ç—É–ø—É</td></tr><tr><td><strong>–°—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å</strong></td><td>‚ùå –ó–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –æ–¥–Ω—ñ—î—ó –ø—Ä–æ–≥—Ä–∞–º–∏ = –∫—Ä–∞—Ö –û–°</td><td>‚úÖ –Ü–∑–æ–ª—è—Ü—ñ—è –ø—Ä–æ—Ü–µ—Å—ñ–≤, –∑–∞—Ö–∏—Å—Ç —è–¥—Ä–∞</td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>–ê–ª–µ –±—É–ª–æ –æ–¥–Ω–µ –≤–µ–ª–∏–∫–µ –ê–õ–ï! –ó–∞—Å–æ–±–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è –Ω–µ –ø—Ä–∏–¥—ñ–ª—è–ª–æ—Å—è –Ω–∞–ª–µ–∂–Ω–æ—ó —É–≤–∞–≥–∏ –∞–∂ –¥–æ 2002 —Ä–æ–∫—É.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ä—ñ–∑–Ω—ñ –ø—ñ–¥—Ö–æ–¥–∏, —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è. –í—Å–µ —Ü–µ –±—É–ª–æ <strong>—Ä–æ–∑—Ä—ñ–∑–Ω–µ–Ω–∏–º</strong>, —á–∞—Å—Ç–æ GUI-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–∏–º —ñ –Ω–µ –∑–∞–≤–∂–¥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∏–º.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h6 class=\"wp-block-heading\">üìå –°–ø–∏—Å–æ–∫ –¥–µ—è–∫–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤:</h6>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–ó–∞—Å—ñ–±</th><th>–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥–Ω–∏–π —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä (–∑–∞–º—ñ–Ω–∞ <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>–°–∫—Ä–∏–ø—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ VBScript —Ç–∞ JScript –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó</td></tr><tr><td><code>reg.exe</code></td><td>–ö–µ—Ä—É–≤–∞–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–æ–º –∑ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞</td></tr><tr><td><code>net.exe</code></td><td>–†–æ–±–æ—Ç–∞ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏, –º–µ—Ä–µ–∂–µ—é, –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏</td></tr><tr><td><code>sc.exe</code></td><td>–ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–ª—É–∂–±–∞–º–∏</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>–ö–µ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å–∞–º–∏</td></tr><tr><td><code>gpedit.msc</code></td><td>–ì—Ä—É–ø–æ–≤–∞ –ø–æ–ª—ñ—Ç–∏–∫–∞ (–ª–æ–∫–∞–ª—å–Ω–æ)</td></tr><tr><td><code>MMC</code></td><td>–ö–æ–Ω—Å–æ–ª—å –∑—ñ —Å–Ω–∞–ø-—ñ–Ω–∞–º–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è</td></tr><tr><td><code>WMI</code></td><td>–î–æ—Å—Ç—É–ø –¥–æ —Å–∏—Å—Ç–µ–º–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó (—á–µ—Ä–µ–∑ <code>wmic</code>, VBScript, –∞–±–æ COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è WMI-–∑–∞–ø–∏—Ç—ñ–≤</td></tr><tr><td><code>eventvwr</code></td><td>–ü–µ—Ä–µ–≥–ª—è–¥ –∂—É—Ä–Ω–∞–ª—ñ–≤ –ø–æ–¥—ñ–π</td></tr><tr><td><code>perfmon</code></td><td>–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å—ñ–≤</td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h6 class=\"wp-block-heading\">üõ† –ü—Ä–∏–∫–ª–∞–¥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó:</h6>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>VBScript-—Ñ–∞–π–ª–∏ (<code>*.vbs</code>) –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –º–µ—Ä–µ–∂, –ø—Ä–∏–Ω—Ç–µ—Ä—ñ–≤ —Ç–∞ —Å–ª—É–∂–±.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî –∫–æ–º–∞–Ω–¥–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ WMI (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>.cmd</code> —Å–∫—Ä–∏–ø—Ç–∏ –∑ –≤–∏–∫–ª–∏–∫–∞–º–∏ <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code> —Ç–æ—â–æ.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>–í–ø–µ—Ä—à–µ –∑'—è–≤–∏–≤—Å—è —É <strong>Windows 98</strong>, –∞–∫—Ç–∏–≤–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è —É <strong>Windows 2000 —Ç–∞ XP</strong>.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>–î–æ–∑–≤–æ–ª—è–≤ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ VBScript —Ç–∞ JScript-—Ñ–∞–π–ª–∏ –∑ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">–ß–∞—Å—Ç–∏–Ω–∞ 1.</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–õ–∏—à–µ —É 2002 —Ä–æ—Ü—ñ –≤ –∫–æ–º–ø–∞–Ω—ñ—ó —Å—Ñ–æ—Ä–º—É–≤–∞–≤—Å—è –ø—Ä–æ—î–∫—Ç <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\">Monad</a>, —è–∫–∏–π –ø—ñ–∑–Ω—ñ—à–µ –≤–∏–ª–∏–≤—Å—è –≤ PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>–ü–æ—á–∞—Ç–æ–∫ —Ä–æ–∑—Ä–æ–±–∫–∏: –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω–æ —É 2002 —Ä–æ—Ü—ñ</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>–ü—É–±–ª—ñ—á–Ω–µ –∞–Ω–æ–Ω—Å—É–≤–∞–Ω–Ω—è: 2003 —Ä—ñ–∫, —è–∫ \"Monad Shell\"</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>–ü–µ—Ä—à—ñ –±–µ—Ç–∞-–≤–µ—Ä—Å—ñ—ó: –∑'—è–≤–∏–ª–∏—Å—è –¥–æ 2005 —Ä–æ–∫—É</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>–§—ñ–Ω–∞–ª—å–Ω–∏–π —Ä–µ–ª—ñ–∑ (PowerShell 1.0): –ª–∏—Å—Ç–æ–ø–∞–¥ 2006 —Ä–æ–∫—É</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>–ê–≤—Ç–æ—Ä–æ–º —ñ –≥–æ–ª–æ–≤–Ω–∏–º –∞—Ä—Ö—ñ—Ç–µ–∫—Ç–æ—Ä–æ–º –ø—Ä–æ—î–∫—Ç—É Monad / PowerShell —î –î–∂–µ—Ñ—Ñ—Ä—ñ –°–Ω–æ–≤–µ—Ä<br><a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\">(Jeffrey Snover)</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–°—å–æ–≥–æ–¥–Ω—ñ PowerShell Core –ø—Ä–∞—Ü—é—î –Ω–∞<br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\">Windows</a><br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\">macOS</a><br><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\">Linux</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ü–∞—Ä–∞–ª–µ–ª—å–Ω–æ –π—à–ª–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É .NET, —ñ PowerShell –±—É–≤ —É –Ω–µ—ó –≥–ª–∏–±–æ–∫–æ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–π, —É –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–∑–¥—ñ–ª–∞—Ö —è –ø–æ–∫–∞–∂—É –ø—Ä–∏–∫–ª–∞–¥–∏.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ê —Ç–µ–ø–µ—Ä ‚Äî –Ω–∞–π–≥–æ–ª–æ–≤–Ω—ñ—à–µ!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ì–æ–ª–æ–≤–Ω–∞ –ø–µ—Ä–µ–≤–∞–≥–∞ PowerShell –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑ –∫–ª–∞—Å–∏—á–Ω–∏–º–∏ –∫–æ–º–∞–Ω–¥–Ω–∏–º–∏ –æ–±–æ–ª–æ–Ω–∫–∞–º–∏ ‚Äî —Ü–µ —Ç–µ, —â–æ –≤—ñ–Ω –ø—Ä–∞—Ü—é—î –∑ <em>–æ–±'—î–∫—Ç–∞–º–∏</em>, –∞ –Ω–µ –∑ —Ç–µ–∫—Å—Ç–æ–º. –ö–æ–ª–∏ –≤–∏ –≤–∏–∫–æ–Ω—É—î—Ç–µ –∫–æ–º–∞–Ω–¥—É, –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –≤–∞–º –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π –æ–±'—î–∫—Ç (–∞–±–æ –∫–æ–ª–µ–∫—Ü—ñ—é –æ–±'—î–∫—Ç—ñ–≤), —É —è–∫–æ–≥–æ —î —á—ñ—Ç–∫–æ –≤–∏–∑–Ω–∞—á–µ–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ (Properties) —Ç–∞ –º–µ—Ç–æ–¥–∏ (Methods).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–î–∏–≤—ñ—Ç—å—Å—è, —è–∫ PowerShell –ø–µ—Ä–µ–≤–µ—Ä—à—É—î –∫–ª–∞—Å–∏—á–Ω—ñ –æ–±–æ–ª–æ–Ω–∫–∏ –∑–∞–≤–¥—è–∫–∏ <strong>—Ä–æ–±–æ—Ç—ñ –∑ –æ–±'—î–∫—Ç–∞–º–∏</strong>:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">üìÅ –Ø–∫ –±—É–ª–æ: <code>dir</code> —Ç–∞ —Ä—É—á–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–£ <strong>CMD</strong> (—ñ –≤ —Å—Ç–∞—Ä–æ–º—É <code>COMMAND.COM</code>, —ñ –≤ <code>cmd.exe</code>) –∫–æ–º–∞–Ω–¥–∞ <code>dir</code> –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç —è–∫ –∑–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–∫—Å—Ç. –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–≤–æ–¥—É:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>–î–æ–ø—É—Å—Ç–∏–º–æ, –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏—Ç—è–≥—Ç–∏ <strong>—ñ–º'—è —Ñ–∞–π–ª—É</strong> —Ç–∞ <strong>—Ä–æ–∑–º—ñ—Ä</strong> –∫–æ–∂–Ω–æ–≥–æ —Ñ–∞–π–ª—É. –í–∞–º –¥–æ–≤–µ–¥–µ—Ç—å—Å—è –ø–∞—Ä—Å–∏—Ç–∏ —Ä—è–¥–∫–∏ –≤—Ä—É—á–Ω—É:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f &quot;tokens=5,6&quot; %a in ('dir ^| findstr /R &quot;[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]&quot;') do @echo %a %b\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>–¶–µ —Å—Ç—Ä–∞—à–µ–Ω–Ω–æ —Å–∫–ª–∞–¥–Ω–æ —á–∏—Ç–∞—î—Ç—å—Å—è, –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –ª–æ–∫–∞–ª—ñ, —Ñ–æ—Ä–º–∞—Ç—É –¥–∞—Ç–∏, —à—Ä–∏—Ñ—Ç—É. –Ü –ª–∞–º–∞—î—Ç—å—Å—è –ø—Ä–∏ –ø—Ä–æ–±—ñ–ª–∞—Ö —É –Ω–∞–∑–≤–∞—Ö.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">‚úÖ PowerShell: –æ–±'—î–∫—Ç–∏ –∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É</h5>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h6 class=\"wp-block-heading\">‚úî –ü—Ä–æ—Å—Ç–∏–π —ñ —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥:</h6>\n<!-- /wp:heading -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">Name          Length\n----\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> –ø–æ–≤–µ—Ä—Ç–∞—î <strong>–º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —Ñ–∞–π–ª—ñ–≤/–ø–∞–ø–æ–∫</strong></li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><code>Select-Object</code> –¥–æ–∑–≤–æ–ª—è—î –ª–µ–≥–∫–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ <strong>–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">üîç –©–æ –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ –ø–æ–≤–µ—Ä—Ç–∞—î <code>Get-ChildItem</code>?</h5>\n<!-- /wp:heading -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>PowerShell –ø–æ–≤–µ—Ä—Ç–∞—î <strong>–æ–±'—î–∫—Ç–∏ —Ç–∏–ø—É <code>System.IO.FileInfo</code></strong>, —É —è–∫–∏—Ö —î:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>üß± –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li>üõ† –ú–µ—Ç–æ–¥–∏ (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code> —Ç–æ—â–æ)</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>–í–∏ –ø—Ä–∞—Ü—é—î—Ç–µ <strong>–∑ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–º–∏ –æ–±'—î–∫—Ç–∞–º–∏</strong>, –∞ –Ω–µ –∑ —Ä—è–¥–∫–∞–º–∏.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">–°–∏–Ω—Ç–∞–∫—Å–∏—Å \"–î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫\":</h5>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î <strong>—Å—É–≤–æ—Ä–∏–π —Ç–∞ –ª–æ–≥—ñ—á–Ω–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥</strong>:<br><code>–î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫</code> (Verb-Noun)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–î—ñ—î—Å–ª–æ–≤–æ</th><th>–©–æ —Ä–æ–±–∏—Ç—å</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>–û—Ç—Ä–∏–º–∞—Ç–∏</td></tr><tr><td><code>Set-</code></td><td>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏</td></tr><tr><td><code>New-</code></td><td>–°—Ç–≤–æ—Ä–∏—Ç–∏</td></tr><tr><td><code>Remove-</code></td><td>–í–∏–¥–∞–ª–∏—Ç–∏</td></tr><tr><td><code>Start-</code></td><td>–ó–∞–ø—É—Å—Ç–∏—Ç–∏</td></tr><tr><td><code>Stop-</code></td><td>–ó—É–ø–∏–Ω–∏—Ç–∏</td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–Ü–º–µ–Ω–Ω–∏–∫</th><th>–ù–∞–¥ —á–∏–º –ø—Ä–∞—Ü—é—î</th></tr></thead><tbody><tr><td><code>Process</code></td><td>–ü—Ä–æ—Ü–µ—Å</td></tr><tr><td><code>Service</code></td><td>–°–ª—É–∂–±–∞</td></tr><tr><td><code>Item</code></td><td>–§–∞–π–ª/–ø–∞–ø–∫–∞</td></tr><tr><td><code>EventLog</code></td><td>–ñ—É—Ä–Ω–∞–ª–∏ –ø–æ–¥—ñ–π</td></tr><tr><td><code>Computer</code></td><td>–ö–æ–º–ø'—é—Ç–µ—Ä</td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h6 class=\"wp-block-heading\">üîÑ –ü—Ä–∏–∫–ª–∞–¥–∏:</h6>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table><thead><tr><th>–©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏</th><th>–ö–æ–º–∞–Ω–¥–∞</th></tr></thead><tbody><tr><td>–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ü–µ—Å–∏</td><td><code>Get-Process</code></td></tr><tr><td>–ó—É–ø–∏–Ω–∏—Ç–∏ —Å–ª—É–∂–±—É</td><td><code>Stop-Service</code></td></tr><tr><td>–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —Ñ–∞–π–ª</td><td><code>New-Item</code></td></tr><tr><td>–û—Ç—Ä–∏–º–∞—Ç–∏ –≤–º—ñ—Å—Ç –ø–∞–ø–∫–∏</td><td><code>Get-ChildItem</code></td></tr><tr><td>–í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–∞–π–ª</td><td><code>Remove-Item</code></td></tr></tbody></table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° –ù–∞–≤—ñ—Ç—å —è–∫—â–æ –≤–∏ <strong>–Ω–µ –∑–Ω–∞—î—Ç–µ —Ç–æ—á–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏</strong>, –≤–∏ –º–æ–∂–µ—Ç–µ <strong>–ø—Ä–∏–ø—É—Å—Ç–∏—Ç–∏</strong> —ó—ó –∑–∞ –∑–º—ñ—Å—Ç–æ–º ‚Äî —ñ –º–∞–π–∂–µ –∑–∞–≤–∂–¥–∏ –≤–≥–∞–¥–∞—î—Ç–µ.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>–ö–æ–º–∞–Ω–¥–ª–µ—Ç <code>Get-Help</code> ‚Äî –≤–∞—à –≥–æ–ª–æ–≤–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol class=\"wp-block-list\"><!-- wp:list-item -->\n<li><strong>–û—Ç—Ä–∏–º–∞—î–º–æ –¥–æ–≤—ñ–¥–∫—É –ø—Ä–æ —Å–∞–º—É –¥–æ–≤—ñ–¥–∫—É:</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>–û—Ç—Ä–∏–º–∞—î–º–æ –±–∞–∑–æ–≤—É –¥–æ–≤—ñ–¥–∫—É –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø—Ä–æ—Ü–µ—Å–∞–º–∏:</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>–ü–æ–¥–∏–≤–∏–º–æ—Å—è –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏:</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>–¶–µ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ –∫–æ—Ä–∏—Å–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä, —è–∫–∏–π —á–∞—Å—Ç–æ –¥–∞—î –≥–æ—Ç–æ–≤—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–≤–¥–∞–Ω—å.</li>\n<!-- /wp:list-item -->\n\n<!-- wp:list-item -->\n<li><strong>–û—Ç—Ä–∏–º–∞—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É:</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>–£ –Ω–∞—Å—Ç—É–ø–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ: –∫–æ–Ω–≤–µ—î—Ä –∞–±–æ –ª–∞–Ω—Ü—é–∂–æ–∫ –∫–æ–º–∞–Ω–¥ (PipeLines)</p>\n<!-- /wp:paragraph -->\n[:]",
  "post_status": "publish",
  "post_author": "1",
  "_seo_description": "[:en]Explore the evolution of command-line interfaces from MS-DOS to Windows NT and the birth of PowerShell. Understand the core philosophy of PowerShell and how it revolutionized automation by working with objects instead of text. Learn about its Verb-Noun syntax and the Get-Help cmdlet.[:ru]–ò—Å—Å–ª–µ–¥—É–π—Ç–µ —ç–≤–æ–ª—é—Ü–∏—é –∫–æ–º–∞–Ω–¥–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –æ—Ç MS-DOS –¥–æ Windows NT –∏ –ø–æ—è–≤–ª–µ–Ω–∏–µ PowerShell. –ü–æ–π–º–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é PowerShell –∏ —Ç–æ, –∫–∞–∫ –æ–Ω —Å–æ–≤–µ—Ä—à–∏–ª —Ä–µ–≤–æ–ª—é—Ü–∏—é –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, —Ä–∞–±–æ—Ç–∞—è —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞. –£–∑–Ω–∞–π—Ç–µ –æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ ¬´–ì–ª–∞–≥–æ–ª-–°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ¬ª –∏ –∫–æ–º–∞–Ω–¥–ª–µ—Ç–µ Get-Help.[:he]<span dir=\"rtl\">◊ó◊ß◊ï◊® ◊ê◊™ ◊î◊ê◊ë◊ï◊ú◊ï◊¶◊ô◊î ◊©◊ú ◊û◊û◊©◊ß◊ô ◊©◊ï◊®◊™ ◊î◊§◊ß◊ï◊ì◊î ◊û-MS-DOS ◊ú-Windows NT ◊ï◊î◊ï◊ú◊ì◊™ PowerShell. ◊î◊ë◊ü ◊ê◊™ ◊§◊ô◊ú◊ï◊°◊ï◊§◊ô◊ô◊™ ◊î◊ú◊ô◊ë◊î ◊©◊ú PowerShell ◊ï◊õ◊ô◊¶◊ì ◊î◊ï◊ê ◊ó◊ï◊ú◊ú ◊û◊î◊§◊õ◊î ◊ë◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î ◊¢◊ú ◊ô◊ì◊ô ◊¢◊ë◊ï◊ì◊î ◊¢◊ù ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù ◊ë◊û◊ß◊ï◊ù ◊ò◊ß◊°◊ò. ◊ú◊û◊ì ◊¢◊ú ◊™◊ó◊ë◊ô◊® Verb-Noun ◊ï◊¢◊ú ◊î-cmdlet Get-Help.</span>[:fr]Explorez l'√©volution des interfaces de ligne de commande de MS-DOS √† Windows NT et la naissance de PowerShell. Comprenez la philosophie de base de PowerShell et comment il a r√©volutionn√© l'automatisation en travaillant avec des objets plut√¥t qu'avec du texte. Apprenez-en davantage sur sa syntaxe Verbe-Nom et l'applet de commande Get-Help.[:es]Explora la evoluci√≥n de las interfaces de l√≠nea de comandos desde MS-DOS hasta Windows NT y el nacimiento de PowerShell. Comprende la filosof√≠a central de PowerShell y c√≥mo revolucion√≥ la automatizaci√≥n trabajando con objetos en lugar de texto. Aprende sobre su sintaxis Verbo-Sustantivo y el cmdlet Get-Help.[:ua]–î–æ—Å–ª—ñ–¥—ñ—Ç—å –µ–≤–æ–ª—é—Ü—ñ—é –∫–æ–º–∞–Ω–¥–Ω–∏—Ö —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ –≤—ñ–¥ MS-DOS –¥–æ Windows NT —ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è PowerShell. –ó—Ä–æ–∑—É–º—ñ–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—É —Ñ—ñ–ª–æ—Å–æ—Ñ—ñ—é PowerShell —ñ —Ç–µ, —è–∫ –≤—ñ–Ω –∑—Ä–æ–±–∏–≤ —Ä–µ–≤–æ–ª—é—Ü—ñ—é –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó, –ø—Ä–∞—Ü—é—é—á–∏ –∑ –æ–±'—î–∫—Ç–∞–º–∏ –∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É. –î—ñ–∑–Ω–∞–π—Ç–µ—Å—è –ø—Ä–æ –π–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å ¬´–î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫¬ª —Ç–∞ –∫–æ–º–∞–Ω–¥–ª–µ—Ç Get-Help.[:pl]Poznaj ewolucjƒô interfejs√≥w wiersza polece≈Ñ od MS-DOS do Windows NT i narodziny PowerShell. Zrozum podstawowƒÖ filozofiƒô PowerShell i to, jak zrewolucjonizowa≈Ç automatyzacjƒô, pracujƒÖc z obiektami zamiast tekstu. Dowiedz siƒô o jego sk≈Çadni Czasownik-Rzeczownik i poleceniu cmdlet Get-Help.[:de]Entdecken Sie die Entwicklung von Befehlszeilenschnittstellen von MS-DOS √ºber Windows NT bis hin zur Geburt von PowerShell. Verstehen Sie die Kernphilosophie von PowerShell und wie es die Automatisierung durch die Arbeit mit Objekten anstelle von Text revolutionierte. Erfahren Sie mehr √ºber die Verb-Nomen-Syntax und das Get-Help-Cmdlet.[:it]Esplora l'evoluzione delle interfacce a riga di comando da MS-DOS a Windows NT e la nascita di PowerShell. Comprendi la filosofia fondamentale di PowerShell e come ha rivoluzionato l'automazione lavorando con gli oggetti invece del testo. Scopri la sua sintassi Verbo-Nome e il cmdlet Get-Help.[:]",
  "_seo_keywords": "[:en]PowerShell, MS-DOS, Windows NT, command-line, automation, scripting, objects, Verb-Noun, Get-Help, Monad, Jeffrey Snover, batch files, CMD, WSH, System.IO.FileInfo[:ru]PowerShell, MS-DOS, Windows NT, –∫–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, —Å–∫—Ä–∏–ø—Ç—ã, –æ–±—ä–µ–∫—Ç—ã, –ì–ª–∞–≥–æ–ª-–°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ, Get-Help, Monad, –î–∂–µ—Ñ—Ñ—Ä–∏ –°–Ω–æ–≤–µ—Ä, –ø–∞–∫–µ—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã, CMD, WSH, System.IO.FileInfo[:he]<span dir=\"rtl\">PowerShell, MS-DOS, Windows NT, ◊©◊ï◊®◊™ ◊§◊ß◊ï◊ì◊î, ◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î, ◊°◊ß◊®◊ô◊§◊ò◊ô◊ù, ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù, Verb-Noun, Get-Help, Monad, ◊í'◊§◊®◊ô ◊°◊†◊ï◊ë◊®, ◊ß◊ë◊¶◊ô ◊ê◊¶◊ï◊ï◊î, CMD, WSH, System.IO.FileInfo</span>[:fr]PowerShell, MS-DOS, Windows NT, ligne de commande, automatisation, script, objets, Verbe-Nom, Get-Help, Monad, Jeffrey Snover, fichiers batch, CMD, WSH, System.IO.FileInfo[:es]PowerShell, MS-DOS, Windows NT, l√≠nea de comandos, automatizaci√≥n, scripting, objetos, Verbo-Sustantivo, Get-Help, Monad, Jeffrey Snover, archivos batch, CMD, WSH, System.IO.FileInfo[:ua]PowerShell, MS-DOS, Windows NT, –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä—è–¥–æ–∫, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è, —Å–∫—Ä–∏–ø—Ç–∏, –æ–±'—î–∫—Ç–∏, –î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫, Get-Help, Monad, –î–∂–µ—Ñ—Ñ—Ä—ñ –°–Ω–æ–≤–µ—Ä, –ø–∞–∫–µ—Ç–Ω—ñ —Ñ–∞–π–ª–∏, CMD, WSH, System.IO.FileInfo[:pl]PowerShell, MS-DOS, Windows NT, wiersz polece≈Ñ, automatyzacja, skrypty, obiekty, Czasownik-Rzeczownik, Get-Help, Monad, Jeffrey Snover, pliki wsadowe, CMD, WSH, System.IO.FileInfo[:de]PowerShell, MS-DOS, Windows NT, Befehlszeile, Automatisierung, Skripting, Objekte, Verb-Nomen, Get-Help, Monad, Jeffrey Snover, Batch-Dateien, CMD, WSH, System.IO.FileInfo[:it]PowerShell, MS-DOS, Windows NT, riga di comando, automazione, scripting, oggetti, Verbo-Nome, Get-Help, Monad, Jeffrey Snover, file batch, CMD, WSH, System.IO.FileInfo[:]"
}
{
  "lang": "pl",
  "post_title": "[:pl]Filozofia PowerShell. Czƒô≈õƒá 0 i 1[:]",
  "post_content": "[:pl]<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Co by≈Ço przed PowerShell?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>W 1981 roku ukaza≈Ç siƒô MS-DOS 1.0 z interpreterem polece≈Ñ <code>COMMAND.COM</code>. Do automatyzacji zada≈Ñ wykorzystywano <strong>pliki wsadowe (<code>.bat</code>)</strong> ‚Äî proste pliki tekstowe zawierajƒÖce sekwencjƒô komend konsoli. ZaskakujƒÖca asceza wiersza polece≈Ñ na tle system√≥w zgodnych z POSIX, gdzie ju≈º od 1979 roku istnia≈Ça <strong>pow≈Çoka Bourne'a (<code>sh</code>)</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Stan rynku pow≈Çok w momencie wydania <strong>MS-DOS 1.0</strong> (sierpie≈Ñ 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Poni≈ºej znajduje siƒô zbiorcza tabela popularnych system√≥w operacyjnych z tamtego okresu i ich wsparcia dla pow≈Çok (<code>sh</code>, <code>csh</code> i inne):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>System operacyjny</th>\n<th>Obs≈Çuga pow≈Çok (<code>sh</code>, <code>csh</code>, inne)</th>\n<th>Komentarz</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>UNIX Version 7 (V7)</strong></td>\n<td><code>sh</code></td>\n<td>Ostatni klasyczny UNIX Bell Labs, szeroko rozpowszechniony</td>\n</tr>\n<tr>\n<td><strong>UNIX/32V</strong></td>\n<td><code>sh</code>, <code>csh</code></td>\n<td>Wersja UNIX dla architektury VAX</td>\n</tr>\n<tr>\n<td><strong>4BSD / 3BSD</strong></td>\n<td><code>sh</code>, <code>csh</code></td>\n<td>Uniwersytecka ga≈ÇƒÖ≈∫ UNIX-a z Berkeley</td>\n</tr>\n<tr>\n<td><strong>UNIX System III</strong></td>\n<td><code>sh</code></td>\n<td>Pierwsza komercyjna wersja od AT&amp;T, poprzednik System V</td>\n</tr>\n<tr>\n<td><strong>Xenix (od Microsoft)</strong></td>\n<td><code>sh</code></td>\n<td>Licencjonowana wersja UNIX-a, sprzedawana przez Microsoft od 1980 r.</td>\n</tr>\n<tr>\n<td><strong>IDRIS</strong></td>\n<td><code>sh</code></td>\n<td>System operacyjny podobny do UNIX-a dla PDP-11 i Intel</td>\n</tr>\n<tr>\n<td><strong>Coherent (Mark Williams)</strong></td>\n<td><code>sh</code> (podobna)</td>\n<td>Niedroga alternatywa dla UNIX-a na PC</td>\n</tr>\n<tr>\n<td><strong>CP/M (Digital Research)</strong></td>\n<td>‚ùå (Brak <code>sh</code>, tylko najprostszy CLI)</td>\n<td>Nie UNIX, najpopularniejszy system operacyjny dla 8-bitowych komputer√≥w PC</td>\n</tr>\n<tr>\n<td><strong>MS-DOS 1.0</strong></td>\n<td>‚ùå (tylko <code>COMMAND.COM</code>)</td>\n<td>Minimalna pow≈Çoka polece≈Ñ, bez skrypt√≥w i potok√≥w</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° Co to jest <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul>\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, g≈Ç√≥wny interpreter skrypt√≥w UNIX od 1977 roku.</li>\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, ulepszona pow≈Çoka o sk≈Çadni podobnej do C, z udogodnieniami do pracy interaktywnej.</li>\n<li>Te pow≈Çoki <strong>obs≈Çugiwa≈Çy przekierowania, potoki, zmienne, funkcje i warunki</strong> ‚Äî wszystko, co sprawi≈Ço, ≈ºe UNIX sta≈Ç siƒô potƒô≈ºnym narzƒôdziem automatyzacji.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft skupia≈Ç siƒô na <strong>tanich 16-bitowych komputerach IBM PC</strong>, kt√≥re mia≈Çy <strong>ma≈Ço pamiƒôci</strong> (zazwyczaj 64‚Äì256 KB), nie posiada≈Çy wielozadaniowo≈õci i by≈Çy przeznaczone do <strong>u≈ºytku domowego i biurowego</strong>, a nie serwer√≥w. UNIX by≈Ç p≈Çatny, wymaga≈Ç z≈Ço≈ºonej architektury i do≈õwiadczenia, a ksiƒôgowi i in≈ºynierowie, nie administratorzy system√≥w, potrzebowali szybkiego i prostego systemu operacyjnego.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Interfejs DOS, zamiast z≈Ço≈ºonego <code>sh</code>, oferowa≈Ç jeden plik <code>command.com</code> z ubogim zestawem wewnƒôtrznych polece≈Ñ [<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\"> (dir, copy, del itp.)</a>] bez funkcji, pƒôtli i modu≈Ç√≥w.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>By≈Çy te≈º polecenia zewnƒôtrzne ‚Äî oddzielne pliki wykonywalne (.exe lub .com). Przyk≈Çady: <code>FORMAT.COM</code>, <code>XCOPY.EXE</code>, <code>CHKDSK.EXE</code>, <code>EDIT.COM</code>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Scenariusze wykonawcze zapisywano w pliku tekstowym z rozszerzeniem .bat (plik wsadowy).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Przyk≈Çady plik√≥w konfiguracyjnych:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li><code>AUTOEXEC.BAT</code></li>\n<li><code>CONFIG.SYS</code></li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Automatyczna konfiguracja i uruchamianie Windows 3.11\n:: Autor: hypo69\n:: Rok: oko≈Ço 1993\n:: Przeznaczenie: Inicjuje ≈õrodowisko DOS, ≈Çaduje sterowniki sieciowe i uruchamia Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Ustawienie wiersza polece≈Ñ\nPROMPT $p$g\n\n:: Ustawienie zmiennych ≈õrodowiskowych\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: ≈Åadowanie sterownik√≥w i narzƒôdzi do g√≥rnej pamiƒôci\nLH C:\\DOS\\SMARTDRV.EXE       :: Pamiƒôƒá podrƒôczna dysku\nLH C:\\DOS\\MOUSE.COM          :: Sterownik myszy\n\n:: ≈Åadowanie us≈Çug sieciowych (dotyczy Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Automatyczne uruchamianie Windows\nWIN\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî Konfiguracja pamiƒôci i sterownik√≥w DOS dla Windows 3.11\n:: Autor: hypo69\n:: Rok: oko≈Ço 1993\n:: Przeznaczenie: Inicjalizacja sterownik√≥w pamiƒôci, konfiguracja parametr√≥w systemowych\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>W Microsofcie, r√≥wnolegle do DOS-a, niemal od razu rozpoczƒôto prace nad zasadniczo nowym jƒÖdrem.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>JƒÖdro <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) po raz pierwszy pojawi≈Ço siƒô wraz z wydaniem systemu operacyjnego:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><strong>Windows NT 3.1 ‚Äî 27 lipca 1993 roku</strong></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul>\n<li><strong>Rozw√≥j rozpoczƒÖ≈Ç siƒô</strong>: w <strong>1988 roku</strong> pod kierownictwem <strong>Dave'a Cutlera</strong> (by≈Çego in≈ºyniera DEC, tw√≥rcy VMS) w celu stworzenia ca≈Çkowicie nowego, bezpiecznego, przeno≈õnego i wielozadaniowego systemu operacyjnego, niekompatybilnego z MS-DOS na poziomie jƒÖdra.</li>\n<li><strong>NT 3.1</strong> ‚Äî nazwana tak, aby podkre≈õliƒá kompatybilno≈õƒá z <strong>Windows 3.1</strong> na poziomie interfejsu, ale by≈Ça <strong>ca≈Çkowicie nowƒÖ architekturƒÖ</strong>.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Co przynios≈Ço jƒÖdro NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Cecha</th>\n<th>Opis</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>32-bitowa architektura</strong></td>\n<td>W przeciwie≈Ñstwie do MS-DOS i Windows 3.x, kt√≥re by≈Çy 16-bitowe.</td>\n</tr>\n<tr>\n<td><strong>Wielozadaniowo≈õƒá</strong></td>\n<td>Prawdziwa wielozadaniowo≈õƒá wyw≈ÇaszczajƒÖca.</td>\n</tr>\n<tr>\n<td><strong>Pamiƒôƒá chroniona</strong></td>\n<td>Programy nie mog≈Çy uszkodziƒá pamiƒôci innych program√≥w.</td>\n</tr>\n<tr>\n<td><strong>Modu≈Çowo≈õƒá</strong></td>\n<td>Wielopoziomowa architektura jƒÖdra: HAL, Executive, Kernel, sterowniki.</td>\n</tr>\n<tr>\n<td><strong>Obs≈Çuga wielu platform</strong></td>\n<td>NT 3.1 dzia≈Ça≈Ça na x86, MIPS i Alpha.</td>\n</tr>\n<tr>\n<td><strong>Kompatybilno≈õƒá z POSIX</strong></td>\n<td>NT by≈Ç dostarczany z <strong>podsystemem POSIX</strong>, certyfikowanym zgodnie z POSIX.1.</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú Linia NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Wersja NT</th>\n<th>Rok</th>\n<th>Komentarz</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NT 3.1</td>\n<td>1993</td>\n<td>Pierwsze wydanie NT</td>\n</tr>\n<tr>\n<td>NT 3.5 / 3.51</td>\n<td>1994‚Äì1995</td>\n<td>Ulepszenia, optymalizacja</td>\n</tr>\n<tr>\n<td>NT 4.0</td>\n<td>1996</td>\n<td>Interfejs Windows 95, ale jƒÖdro NT</td>\n</tr>\n<tr>\n<td>Windows 2000</td>\n<td>2000</td>\n<td>NT 5.0</td>\n</tr>\n<tr>\n<td>Windows XP</td>\n<td>2001</td>\n<td>NT 5.1</td>\n</tr>\n<tr>\n<td>Windows Vista</td>\n<td>2007</td>\n<td>NT 6.0</td>\n</tr>\n<tr>\n<td>Windows 10</td>\n<td>2015</td>\n<td>NT 10.0</td>\n</tr>\n<tr>\n<td>Windows 11</td>\n<td>2021</td>\n<td>R√≥wnie≈º NT 10.0 (marketing üòä)</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>R√≥≈ºnice w mo≈ºliwo≈õciach system√≥w operacyjnych:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Cecha</th>\n<th>MS-DOS (1981)</th>\n<th>Windows NT (1993)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Typ systemu</strong></td>\n<td>Monolityczny, jednotaskowy</td>\n<td>MikrojƒÖdrowy/hybrydowy, wielozadaniowy</td>\n</tr>\n<tr>\n<td><strong>Architektura bitowa</strong></td>\n<td>16-bitowa</td>\n<td>32-bitowa (z obs≈ÇugƒÖ 64-bitowƒÖ od NT 5.2 / XP x64)</td>\n</tr>\n<tr>\n<td><strong>Wielozadaniowo≈õƒá</strong></td>\n<td>‚ùå Brak (jeden proces na raz)</td>\n<td>‚úÖ Wielozadaniowo≈õƒá wyw≈ÇaszczajƒÖca</td>\n</tr>\n<tr>\n<td><strong>Pamiƒôƒá chroniona</strong></td>\n<td>‚ùå Nie</td>\n<td>‚úÖ Tak (ka≈ºdy proces we w≈Çasnej przestrzeni adresowej)</td>\n</tr>\n<tr>\n<td><strong>Tryb wielou≈ºytkownikowy</strong></td>\n<td>‚ùå Nie</td>\n<td>‚úÖ Czƒô≈õciowo (w NT Workstation/Server)</td>\n</tr>\n<tr>\n<td><strong>Kompatybilno≈õƒá z POSIX</strong></td>\n<td>‚ùå Nie</td>\n<td>‚úÖ Wbudowany podsystem POSIX w NT 3.1‚Äì5.2</td>\n</tr>\n<tr>\n<td><strong>Przeno≈õno≈õƒá jƒÖdra</strong></td>\n<td>‚ùå Tylko x86</td>\n<td>‚úÖ x86, MIPS, Alpha, PowerPC</td>\n</tr>\n<tr>\n<td><strong>Sterowniki</strong></td>\n<td>Bezpo≈õredni dostƒôp do sprzƒôtu</td>\n<td>Poprzez HAL i sterowniki trybu jƒÖdra</td>\n</tr>\n<tr>\n<td><strong>Poziom dostƒôpu aplikacji</strong></td>\n<td>Aplikacje = poziom systemowy</td>\n<td>Poziom u≈ºytkownika / jƒÖdra oddzielony</td>\n</tr>\n<tr>\n<td><strong>Bezpiecze≈Ñstwo</strong></td>\n<td>‚ùå Brak</td>\n<td>‚úÖ Model bezpiecze≈Ñstwa: SID, ACL, tokeny dostƒôpu</td>\n</tr>\n<tr>\n<td><strong>Stabilno≈õƒá</strong></td>\n<td>‚ùå Zale≈ºno≈õƒá jednego programu = awaria systemu operacyjnego</td>\n<td>‚úÖ Izolacja proces√≥w, ochrona jƒÖdra</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>By≈Ço jednak jedno du≈ºe ALE! ≈örodkom automatyzacji i administracji nie po≈õwiƒôcano nale≈ºytej uwagi a≈º do 2002 roku.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft stosowa≈Ç zupe≈Çnie r√≥≈ºne podej≈õcia, strategie i narzƒôdzia do administracji. Wszystko to by≈Ço <strong>rozproszone</strong>, czƒôsto zorientowane na GUI i nie zawsze nadajƒÖce siƒô do automatyzacji.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Lista niekt√≥rych narzƒôdzi:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Narzƒôdzie</th>\n<th>Przeznaczenie</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cmd.exe</code></td>\n<td>Ulepszony interpreter polece≈Ñ (zastƒôpstwo dla <code>COMMAND.COM</code>)</td>\n</tr>\n<tr>\n<td><code>.bat</code>, <code>.cmd</code></td>\n<td>Skrypty wiersza polece≈Ñ</td>\n</tr>\n<tr>\n<td><strong>Windows Script Host (WSH)</strong></td>\n<td>Obs≈Çuga VBScript i JScript do automatyzacji</td>\n</tr>\n<tr>\n<td><code>reg.exe</code></td>\n<td>ZarzƒÖdzanie rejestrem z wiersza polece≈Ñ</td>\n</tr>\n<tr>\n<td><code>net.exe</code></td>\n<td>Praca z u≈ºytkownikami, sieciƒÖ, drukarkami</td>\n</tr>\n<tr>\n<td><code>sc.exe</code></td>\n<td>ZarzƒÖdzanie us≈Çugami</td>\n</tr>\n<tr>\n<td><code>tasklist</code>, <code>taskkill</code></td>\n<td>ZarzƒÖdzanie procesami</td>\n</tr>\n<tr>\n<td><code>gpedit.msc</code></td>\n<td>Zasady grupy (lokalnie)</td>\n</tr>\n<tr>\n<td><code>MMC</code></td>\n<td>Konsola z przystawkami do zarzƒÖdzania</td>\n</tr>\n<tr>\n<td><code>WMI</code></td>\n<td>Dostƒôp do informacji systemowych (poprzez <code>wmic</code>, VBScript lub COM)</td>\n</tr>\n<tr>\n<td><code>WbemTest.exe</code></td>\n<td>GUI do testowania zapyta≈Ñ WMI</td>\n</tr>\n<tr>\n<td><code>eventvwr</code></td>\n<td>PrzeglƒÖdanie dziennik√≥w zdarze≈Ñ</td>\n</tr>\n<tr>\n<td><code>perfmon</code></td>\n<td>Monitorowanie zasob√≥w</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Przyk≈Çady automatyzacji:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul>\n<li>Pliki VBScript (<code>*.vbs</code>) do zarzƒÖdzania u≈ºytkownikami, sieciami, drukarkami i us≈Çugami.</li>\n<li><code>WMIC</code> ‚Äî interfejs wiersza polece≈Ñ dla WMI (np. <code>wmic process list brief</code>).</li>\n<li>Skrypty <code>.cmd</code> z wywo≈Çaniami <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code> itp.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul>\n<li>Po raz pierwszy pojawi≈Ç siƒô w <strong>Windows 98</strong>, by≈Ç aktywnie u≈ºywany w <strong>Windows 2000 i XP</strong>.</li>\n<li>Pozwala≈Ç wykonywaƒá pliki VBScript i JScript z wiersza polece≈Ñ:</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\">Czƒô≈õƒá 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Dopiero w 2002 roku w firmie sformu≈Çowano projekt <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">Monad</a>, kt√≥ry p√≥≈∫niej przekszta≈Çci≈Ç siƒô w PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li>PoczƒÖtek rozwoju: orientacyjnie w 2002 roku</li>\n<li>Publiczne og≈Çoszenie: 2003 rok, jako \"Monad Shell\"</li>\n<li>Pierwsze wersje beta: pojawi≈Çy siƒô do 2005 roku</li>\n<li>Ostateczne wydanie (PowerShell 1.0): listopad 2006 roku</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Autorem i g≈Ç√≥wnym architektem projektu Monad / PowerShell jest Jeffrey Snover <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\"> (Jeffrey Snover)</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Dzi≈õ PowerShell Core dzia≈Ça na <a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a> <a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a> <a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>R√≥wnolegle trwa≈Ç rozw√≥j frameworka .NET, a PowerShell by≈Ç w niego g≈Çƒôboko zintegrowany; w kolejnych rozdzia≈Çach poka≈ºƒô przyk≈Çady.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A teraz ‚Äî najwa≈ºniejsze!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>G≈Ç√≥wnƒÖ przewagƒÖ PowerShell nad klasycznymi pow≈Çokami polece≈Ñ jest to, ≈ºe pracuje on z <em>obiektami</em>, a nie z tekstem. Kiedy wykonujesz polecenie, zwraca ono nie tylko tekst, ale ustrukturyzowany obiekt (lub kolekcjƒô obiekt√≥w), kt√≥ry ma jasno zdefiniowane w≈Ça≈õciwo≈õci (Properties) i metody (Methods).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Zobacz, jak PowerShell przewy≈ºsza klasyczne pow≈Çoki dziƒôki <strong>pracy z obiektami</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ Jak by≈Ço: <code>dir</code> i rƒôczne parsowanie</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>W <strong>CMD</strong> (zar√≥wno w starym <code>COMMAND.COM</code>, jak i w <code>cmd.exe</code>) polecenie <code>dir</code> zwraca wynik jako zwyk≈Çy tekst. Przyk≈Çad wyj≈õcia:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Za≈Ç√≥≈ºmy, ≈ºe chcesz wyodrƒôbniƒá <strong>nazwƒô pliku</strong> i <strong>rozmiar</strong> ka≈ºdego pliku. Bƒôdziesz musia≈Ç parsowaƒá wiersze rƒôcznie:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f &quot;tokens=5,6&quot; %a in ('dir ^| findstr /R &quot;[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]&quot;') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul>\n<li>Jest to strasznie trudne do odczytania, zale≈ºy od ustawie≈Ñ regionalnych, formatu daty, czcionki. I psuje siƒô przy spacjach w nazwach.</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: obiekty zamiast tekstu</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Prosty i czytelny przyk≈Çad:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\"><strong>Wynik:</strong></h2>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul>\n<li><code>Get-ChildItem</code> zwraca <strong>tablicƒô obiekt√≥w plik√≥w/folder√≥w</strong></li>\n<li><code>Select-Object</code> pozwala ≈Çatwo uzyskaƒá potrzebne <strong>w≈Ça≈õciwo≈õci</strong></li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç Co faktycznie zwraca <code>Get-ChildItem</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:heading -->\n<h2 class=\"wp-block-heading\"><strong>Wynik:</strong></h2>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>PowerShell zwraca <strong>obiekty typu <code>System.IO.FileInfo</code></strong>, kt√≥re posiadajƒÖ:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul>\n<li>üß± W≈Ça≈õciwo≈õci (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<li>üõ† Metody (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code> itp.)</li>\n</ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Pracujesz <strong>z pe≈Çnoprawnymi obiektami</strong>, a nie z ciƒÖgami znak√≥w.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Sk≈Çadnia \"Czasownik-Rzeczownik\":</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell u≈ºywa <strong>≈õcis≈Çej i logicznej sk≈Çadni polece≈Ñ</strong>: <code>Czasownik-Rzeczownik</code> (Verb-Noun)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Czasownik</th>\n<th>Co robi</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Get-</code></td>\n<td>Pobierz</td>\n</tr>\n<tr>\n<td><code>Set-</code></td>\n<td>Ustaw</td>\n</tr>\n<tr>\n<td><code>New-</code></td>\n<td>Utw√≥rz</td>\n</tr>\n<tr>\n<td><code>Remove-</code></td>\n<td>Usu≈Ñ</td>\n</tr>\n<tr>\n<td><code>Start-</code></td>\n<td>Uruchom</td>\n</tr>\n<tr>\n<td><code>Stop-</code></td>\n<td>Zatrzymaj</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Rzeczownik</th>\n<th>Nad czym pracuje</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Process</code></td>\n<td>Proces</td>\n</tr>\n<tr>\n<td><code>Service</code></td>\n<td>Us≈Çuga</td>\n</tr>\n<tr>\n<td><code>Item</code></td>\n<td>Element/Plik</td>\n</tr>\n<tr>\n<td><code>EventLog</code></td>\n<td>Dzienniki zdarze≈Ñ</td>\n</tr>\n<tr>\n<td><code>Computer</code></td>\n<td>Komputer</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Przyk≈Çady:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\">\n<table>\n<thead>\n<tr>\n<th>Co nale≈ºy zrobiƒá</th>\n<th>Polecenie</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Pobierz procesy</td>\n<td><code>Get-Process</code></td>\n</tr>\n<tr>\n<td>Zatrzymaj us≈Çugƒô</td>\n<td><code>Stop-Service</code></td>\n</tr>\n<tr>\n<td>Utw√≥rz nowy pliz</td>\n<td><code>New-Item</code></td>\n</tr>\n<tr>\n<td>Pobierz zawarto≈õƒá folderu</td>\n<td><code>Get-ChildItem</code></td>\n</tr>\n<tr>\n<td>Usu≈Ñ plik</td>\n<td><code>Remove-Item</code></td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Nawet je≈õli <strong>nie znasz dok≈Çadnego polecenia</strong>, mo≈ºesz je <strong>odgadnƒÖƒá</strong> na podstawie sensu ‚Äî i prawie zawsze trafisz.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Cmdlet <code>Get-Help</code> ‚Äî to tw√≥j g≈Ç√≥wny pomocnik.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol>\n<li><strong>Uzyskajmy pomoc o samej pomocy:</strong>\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre>\n<!-- /wp:code --></li>\n<li><strong>Uzyskajmy podstawowƒÖ pomoc dotyczƒÖcƒÖ polecenia do pracy z procesami:</strong>\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre>\n<!-- /wp:code --></li>\n<li><strong>Zobaczmy przyk≈Çady u≈ºycia tego polecenia:</strong>\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre>\n<!-- /wp:code -->\nJest to niezwykle przydatny parametr, kt√≥ry czƒôsto dostarcza gotowe rozwiƒÖzania dla Twoich zada≈Ñ.</li>\n<li><strong>Uzyskajmy maksymalnie szczeg√≥≈Çowe informacje o poleceniu:</strong>\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre>\n<!-- /wp:code --></li>\n</ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>W nastƒôpnej czƒô≈õci: potok lub ≈Ça≈Ñcuch polece≈Ñ (PipeLines)</p>\n<!-- /wp:paragraph -->\n[:]",
  "post_status": "publish",
  "post_author": 1,
  "_seo_description": "[:pl]Poznaj historiƒô i podstawy filozofii PowerShell w czƒô≈õciach 0 i 1. Dowiedz siƒô, co poprzedza≈Ço PowerShell, od MS-DOS po Windows NT, oraz kluczowe r√≥≈ºnice w automatyzacji. Zrozum, jak PowerShell wykorzystuje obiekty i sk≈Çadniƒô czasownik-rzeczownik, aby usprawniƒá zarzƒÖdzanie systemem w por√≥wnaniu do tradycyjnych pow≈Çok komend.[:]",
  "_seo_keywords": "[:pl]PowerShell, filozofia PowerShell, MS-DOS, Windows NT, automatyzacja, skrypty, command.com, sh, csh, Monad, Jeffrey Snover, obiekty PowerShell, Verb-Noun, Get-Help, zarzƒÖdzanie systemem, CLI, Windows 98, WSH, VBScript[:]"
}
{
  "lang": "en,de,fr,es,uk,pl,it",
  "post_title": "[:en]PowerShell Philosophy[:de]PowerShell-Philosophie[:fr]La philosophie de PowerShell[:es]Filosof√≠a de PowerShell[:uk]–§—ñ–ª–æ—Å–æ—Ñ—ñ—è PowerShell[:pl]Filozofia PowerShell[:it]La filosofia di PowerShell[:]",
  "post_content": "[:en]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">PowerShell Philosophy.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Part 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>What existed before PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In 1981, MS-DOS 1.0 was released with the command interpreter <code>COMMAND.COM</code>. For task automation, **batch files (<code>.bat</code>)** were used ‚Äî simple text files containing a sequence of console commands. This was an astonishing asceticism of the command line compared to POSIX-compatible systems, where the **Bourne shell (<code>sh</code>)** had existed since 1979.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Shell Market Status at the Release of **MS-DOS 1.0** (August 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Here is a summary table of popular OSes of that time and their shell support (<code>sh</code>, <code>csh</code>, etc.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Operating System</th><th>Shell Support (<code>sh</code>, <code>csh</code>, etc.)</th><th>Comment</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>Last classic Bell Labs UNIX, widely distributed</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>UNIX version for VAX architecture</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>University UNIX branch from Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>First commercial AT&amp;T version, predecessor to System V</td></tr><tr><td><strong>Xenix (from Microsoft)</strong></td><td><code>sh</code></td><td>Licensed UNIX version, sold by Microsoft since 1980</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>UNIX-like OS for PDP-11 and Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (similar)</td><td>Inexpensive UNIX alternative for PCs</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (No <code>sh</code>, only simplest CLI)</td><td>Not UNIX, most popular OS for 8-bit PCs</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (only <code>COMMAND.COM</code>)</td><td>Minimal command shell, no scripts or pipe</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° What are <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, the main UNIX scripting interpreter since 1977.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, an improved shell with C-like syntax and conveniences for interactive work.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>These shells **supported redirects, pipes, variables, functions, and conditions** ‚Äî everything that made UNIX a powerful automation tool.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft focused on **cheap 16-bit IBM PCs**, which had **little memory** (usually 64‚Äì256 KB), lacked multitasking, and were intended for **home and office use**, not servers. UNIX was expensive, required complex architecture and experience, and accountants and engineers, not system administrators, needed a fast and simple OS.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead of the complex <code>sh</code>, the DOS interface presented a single <code>command.com</code> file with a meager set of internal commands (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del, etc.</a>) without functions, loops, or modules.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There were also external commands ‚Äî separate executable files (.exe or .com). Examples: FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Execution scripts were saved in a text file with the <code>.bat</code> extension (batch file).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Examples of configuration files:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Automatic configuration and launch of Windows 3.11\n:: Author: hypo69\n:: Year: approximately 1993\n:: Purpose: Initializes the DOS environment, loads network drivers, and launches Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Setting the command prompt\nPROMPT $p$g\n\n:: Setting environment variables\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Loading drivers and utilities into upper memory\nLH C:\\DOS\\SMARTDRV.EXE       :: Disk cache\nLH C:\\DOS\\MOUSE.COM          :: Mouse driver\n\n:: Loading network services (relevant for Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Automatic launch of Windows\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî DOS memory and driver configuration for Windows 3.11\n:: Author: hypo69\n:: Year: approximately 1993\n:: Purpose: Initializes memory drivers, configures system parameters\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>In parallel with DOS, Microsoft almost immediately began developing a fundamentally new kernel.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) kernel first appeared with the release of the operating system:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Windows NT 3.1 ‚Äî July 27, 1993</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Development began</strong>: in <strong>1988</strong> under the leadership of <strong>Dave Cutler</strong> (former DEC engineer, creator of VMS) with the goal of creating a completely new, secure, portable, and multitasking OS, incompatible with MS-DOS at the kernel level.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî named to emphasize compatibility with <strong>Windows 3.1</strong> at the interface level, but was a <strong>completely new architecture</strong>.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† What the NT kernel brought:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Feature</th><th>Description</th></tr></thead><tbody><tr><td><strong>32-bit architecture</strong></td><td>Unlike MS-DOS and Windows 3.x, which were 16-bit.</td></tr><tr><td><strong>Multitasking</strong></td><td>True preemptive multitasking.</td></tr><tr><td><strong>Protected memory</strong></td><td>Programs could not corrupt each other's memory.</td></tr><tr><td><strong>Modularity</strong></td><td>Layered kernel architecture: HAL, Executive, Kernel, drivers.</td></tr><tr><td><strong>Cross-platform support</strong></td><td>NT 3.1 ran on x86, MIPS, and Alpha.</td></tr><tr><td><strong>POSIX compatibility</strong></td><td>NT shipped with a <strong>POSIX subsystem</strong>, certified to POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú NT Lineup:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>NT Version</th><th>Year</th><th>Comment</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>First NT release</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Improvements, optimization</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Windows 95 interface, but NT kernel</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>Also NT 10.0 (marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Differences in operating system capabilities:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Characteristic</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>System Type</strong></td><td>Monolithic, single-tasking</td><td>Microkernel/hybrid, multitasking</td></tr><tr><td><strong>Bitness</strong></td><td>16-bit</td><td>32-bit (with 64-bit support from NT 5.2 / XP x64)</td></tr><tr><td><strong>Multitasking</strong></td><td>‚ùå Absent (one process at a time)</td><td>‚úÖ Preemptive multitasking</td></tr><tr><td><strong>Protected Memory</strong></td><td>‚ùå No</td><td>‚úÖ Yes (each process in its own address space)</td></tr><tr><td><strong>Multi-user Mode</strong></td><td>‚ùå No</td><td>‚úÖ Partially (in NT Workstation/Server)</td></tr><tr><td><strong>POSIX Compatibility</strong></td><td>‚ùå No</td><td>‚úÖ Built-in POSIX subsystem in NT 3.1‚Äì5.2</td></tr><tr><td><strong>Kernel Portability</strong></td><td>‚ùå x86 only</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Drivers</strong></td><td>Direct hardware access</td><td>Via HAL and Kernel-mode Drivers</td></tr><tr><td><strong>Application Access Level</strong></td><td>Applications = system level</td><td>User / Kernel level separated</td></tr><tr><td><strong>Security</strong></td><td>‚ùå Absent</td><td>‚úÖ Security model: SID, ACL, access tokens</td></tr><tr><td><strong>Stability</strong></td><td>‚ùå One program's dependency = OS crash</td><td>‚úÖ Process isolation, kernel protection</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>But there was one big BUT! Automation and administration tools were not given due attention until 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft used completely different approaches, strategies, and tools for administration. All of this was **disparate**, often GUI-oriented, and not always automatable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå List of some tools:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Tool</th><th>Purpose</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Improved command interpreter (replacement for <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Command-line scripts</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Support for VBScript and JScript for automation</td></tr><tr><td><code>reg.exe</code></td><td>Registry management from the command line</td></tr><tr><td><code>net.exe</code></td><td>Working with users, network, printers</td></tr><tr><td><code>sc.exe</code></td><td>Service management</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>Process management</td></tr><tr><td><code>gpedit.msc</code></td><td>Group Policy (locally)</td></tr><tr><td><code>MMC</code></td><td>Console with snap-ins for management</td></tr><tr><td><code>WMI</code></td><td>Access to system information (via <code>wmic</code>, VBScript, or COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI for testing WMI queries</td></tr><tr><td><code>eventvwr</code></td><td>Event log viewer</td></tr><tr><td><code>perfmon</code></td><td>Resource monitoring</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Automation Examples:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>VBScript files (<code>*.vbs</code>) for administering users, networks, printers, and services.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî command-line interface to WMI (e.g., <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>.cmd</code> scripts with calls to <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, etc.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>First appeared in <strong>Windows 98</strong>, actively used in <strong>Windows 2000 and XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Allowed running VBScript and JScript files from the command line:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Part 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Only in 2002 did the company formulate the <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">Monad project</a>, which later evolved into PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Beginning of development: approximately 2002</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Public announcement: 2003, as \"Monad Shell\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First beta versions: appeared by 2005</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Final release (PowerShell 1.0): November 2006</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The author and chief architect of the Monad / PowerShell project is <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">Jeffrey Snover</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Today, PowerShell Core runs on</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>In parallel, the .NET framework was being developed, and PowerShell was deeply integrated into it; in subsequent chapters, I will show examples.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And now ‚Äî the most important part!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The main advantage of PowerShell compared to classic command shells is that it works with <em>objects</em>, not text. When you execute a command, it returns not just text, but a structured object (or collection of objects) with clearly defined properties (Properties) and methods (Methods).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>See how PowerShell surpasses classic shells due to **working with objects**</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ How it was: <code>dir</code> and manual parsing</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In <strong>CMD</strong> (both in the old <code>COMMAND.COM</code> and in <code>cmd.exe</code>), the <code>dir</code> command returns results as plain text. Example output:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Let's say you want to extract the **file name** and **size** of each file. You would have to parse the strings manually:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>This is terribly difficult to read, depends on locale, date format, font. And it breaks with spaces in names.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: Objects instead of text</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Simple and readable example:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Result:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> returns an **array of file/folder objects**.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> allows easy retrieval of the necessary **properties**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç What does <code>Get-ChildItem</code> actually return?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Result:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>PowerShell returns **objects of type <code>System.IO.FileInfo</code>**, which have:</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üß± Properties (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† Methods (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, etc.)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>You work **with full-fledged objects**, not with strings.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Verb-Noun Syntax:</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell uses a **strict and logical command syntax**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>Verb-Noun</code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Verb</th><th>What it does</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Get</td></tr><tr><td><code>Set-</code></td><td>Set</td></tr><tr><td><code>New-</code></td><td>Create</td></tr><tr><td><code>Remove-</code></td><td>Remove</td></tr><tr><td><code>Start-</code></td><td>Start</td></tr><tr><td><code>Stop-</code></td><td>Stop</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Noun</th><th>What it operates on</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Process</td></tr><tr><td><code>Service</code></td><td>Service</td></tr><tr><td><code>Item</code></td><td>File/folder</td></tr><tr><td><code>EventLog</code></td><td>Event logs</td></tr><tr><td><code>Computer</code></td><td>Computer</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Examples:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>What needs to be done</th><th>Command</th></tr></thead><tbody><tr><td>Get processes</td><td><code>Get-Process</code></td></tr><tr><td>Stop service</td><td><code>Stop-Service</code></td></tr><tr><td>Create new file</td><td><code>New-Item</code></td></tr><tr><td>Get folder contents</td><td><code>Get-ChildItem</code></td></tr><tr><td>Delete file</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Even if you **don't know the exact command**, you can **guess** it by its meaning ‚Äî and almost always be correct.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>The <code>Get-Help</code> cmdlet is your main assistant.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>Get help about help itself:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Get basic help about a command for working with processes:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>See examples of using this command:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre></code><br>This is an incredibly useful parameter that often provides ready-made solutions for your tasks.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Get the most detailed information about the command:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre></code></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>In the next part: pipeline or command chain (PipeLines)</p>\n<!-- /wp:paragraph -->[:de]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">PowerShell-Philosophie.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Teil 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Was gab es vor PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>1981 wurde MS-DOS 1.0 mit dem Kommandointerpreter <code>COMMAND.COM</code> ver√∂ffentlicht. Zur Aufgabenautomatisierung wurden **Batch-Dateien (<code>.bat</code>)** verwendet ‚Äî einfache Textdateien mit einer Abfolge von Konsolenbefehlen. Ein erstaunlicher Asketismus der Kommandozeile im Vergleich zu POSIX-kompatiblen Systemen, wo die **Bourne Shell (<code>sh</code>)** bereits seit 1979 existierte.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Marktstatus der Shells zum Zeitpunkt der Ver√∂ffentlichung von **MS-DOS 1.0** (August 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Hier ist eine √úbersichtstabelle der damaligen popul√§ren Betriebssysteme und ihrer Shell-Unterst√ºtzung (<code>sh</code>, <code>csh</code> u.a.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Betriebssystem</th><th>Shell-Unterst√ºtzung (<code>sh</code>, <code>csh</code>, u.a.)</th><th>Kommentar</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>Das letzte klassische Bell Labs UNIX, weit verbreitet</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>UNIX-Version f√ºr die VAX-Architektur</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>Universit√§re UNIX-Linie von Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>Erste kommerzielle Version von AT&amp;T, Vorg√§nger von System V</td></tr><tr><td><strong>Xenix (von Microsoft)</strong></td><td><code>sh</code></td><td>Lizenzierte UNIX-Version, seit 1980 von Microsoft verkauft</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>UNIX-√§hnliches Betriebssystem f√ºr PDP-11 und Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (√§hnlich)</td><td>Kosteng√ºnstige UNIX-Alternative f√ºr PCs</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (Keine <code>sh</code>, nur einfachste CLI)</td><td>Kein UNIX, beliebtestes Betriebssystem f√ºr 8-Bit-PCs</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (nur <code>COMMAND.COM</code>)</td><td>Minimale Befehlsshell, keine Skripte oder Pipes</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° Was sind <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, der wichtigste UNIX-Skriptinterpreter seit 1977.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, eine verbesserte Shell mit C-√§hnlicher Syntax und Komfort f√ºr die interaktive Arbeit.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Diese Shells **unterst√ºtzten Umleitungen, Pipes, Variablen, Funktionen und Bedingungen** ‚Äî all das, was UNIX zu einem m√§chtigen Automatisierungswerkzeug machte.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft konzentrierte sich auf **g√ºnstige 16-Bit-IBM-PCs**, die **wenig Speicher** (typischerweise 64‚Äì256 KB) besa√üen, keine Multitasking-F√§higkeiten hatten und f√ºr den **Heim- und B√ºrogebrauch** bestimmt waren, nicht f√ºr Server. UNIX war kostenpflichtig, erforderte eine komplexe Architektur und Erfahrung, und Buchhalter sowie Ingenieure, die keine Systemadministratoren waren, ben√∂tigten ein schnelles und einfaches Betriebssystem.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Die DOS-Oberfl√§che pr√§sentierte anstelle der komplexen <code>sh</code> eine einzelne <code>command.com</code>-Datei mit einem kargen Satz interner Befehle (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del usw.</a>) ohne Funktionen, Schleifen oder Module.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Es gab auch externe Befehle ‚Äî separate ausf√ºhrbare Dateien (.exe oder .com). Beispiele: FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ausf√ºhrungsskripte wurden in einer Textdatei mit der Erweiterung <code>.bat</code> (Batch-Datei) gespeichert.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Beispiele f√ºr Konfigurationsdateien:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Automatische Konfiguration und Start von Windows 3.11\n:: Autor: hypo69\n:: Jahr: circa 1993\n:: Zweck: Initialisiert die DOS-Umgebung, l√§dt Netzwerktreiber und startet Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Eingabeaufforderung einstellen\nPROMPT $p$g\n\n:: Umgebungsvariablen setzen\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Treiber und Dienstprogramme in den oberen Speicher laden\nLH C:\\DOS\\SMARTDRV.EXE       :: Festplatten-Cache\nLH C:\\DOS\\MOUSE.COM          :: Maustreiber\n\n:: Netzwerkdienste laden (relevant f√ºr Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Automatischer Windows-Start\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî DOS Speicher- und Treiberkonfiguration f√ºr Windows 3.11\n:: Autor: hypo69\n:: Jahr: circa 1993\n:: Zweck: Initialisierung der Speichertreiber, Konfiguration der Systemparameter\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Parallel zu DOS begann Microsoft fast unmittelbar mit der Entwicklung eines grundlegend neuen Kernels.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Der <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology)-Kernel erschien erstmals mit der Ver√∂ffentlichung des Betriebssystems:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Windows NT 3.1 ‚Äî 27. Juli 1993</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Entwicklung begann</strong>: <strong>1988</strong> unter der Leitung von <strong>Dave Cutler</strong> (ehemaliger DEC-Ingenieur, Sch√∂pfer von VMS) mit dem Ziel, ein v√∂llig neues, sicheres, portables und Multitasking-f√§higes Betriebssystem zu schaffen, das auf Kernel-Ebene nicht mit MS-DOS kompatibel war.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî wurde so genannt, um die Kompatibilit√§t mit <strong>Windows 3.1</strong> auf Oberfl√§chebene zu betonen, war aber eine <strong>v√∂llig neue Architektur</strong>.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Was der NT-Kernel brachte:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Merkmal</th><th>Beschreibung</th></tr></thead><tbody><tr><td><strong>32-Bit-Architektur</strong></td><td>Im Gegensatz zu MS-DOS und Windows 3.x, die 16-Bit waren.</td></tr><tr><td><strong>Multitasking</strong></td><td>Echtes pr√§emptives Multitasking.</td></tr><tr><td><strong>Gesch√ºtzter Speicher</strong></td><td>Programme konnten den Speicher voneinander nicht besch√§digen.</td></tr><tr><td><strong>Modularit√§t</strong></td><td>Geschichtete Kernel-Architektur: HAL, Executive, Kernel, Treiber.</td></tr><tr><td><strong>Multiplattform-Unterst√ºtzung</strong></td><td>NT 3.1 lief auf x86, MIPS und Alpha.</td></tr><tr><td><strong>POSIX-Kompatibilit√§t</strong></td><td>NT wurde mit einem <strong>POSIX-Subsystem</strong> ausgeliefert, das nach POSIX.1 zertifiziert war.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú NT-Produktlinie:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>NT-Version</th><th>Jahr</th><th>Kommentar</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>Erste NT-Ver√∂ffentlichung</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Verbesserungen, Optimierung</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Windows 95 Oberfl√§che, aber NT-Kernel</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>Auch NT 10.0 (Marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Unterschiede in den Betriebssystemf√§higkeiten:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Eigenschaft</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>Systemtyp</strong></td><td>Monolithisch, Einprozess</td><td>Mikrokernel/Hybrid, Multitasking</td></tr><tr><td><strong>Bitzahl</strong></td><td>16-Bit</td><td>32-Bit (mit 64-Bit-Unterst√ºtzung ab NT 5.2 / XP x64)</td></tr><tr><td><strong>Multitasking</strong></td><td>‚ùå Nicht vorhanden (ein Prozess gleichzeitig)</td><td>‚úÖ Pr√§emptives Multitasking</td></tr><tr><td><strong>Gesch√ºtzter Speicher</strong></td><td>‚ùå Nein</td><td>‚úÖ Ja (jeder Prozess in seinem eigenen Adressraum)</td></tr><tr><td><strong>Mehrbenutzermodus</strong></td><td>‚ùå Nein</td><td>‚úÖ Teilweise (in NT Workstation/Server)</td></tr><tr><td><strong>POSIX-Kompatibilit√§t</strong></td><td>‚ùå Nein</td><td>‚úÖ Integriertes POSIX-Subsystem in NT 3.1‚Äì5.2</td></tr><tr><td><strong>Kernel-Portabilit√§t</strong></td><td>‚ùå Nur x86</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Treiber</strong></td><td>Direkter Hardwarezugriff</td><td>√úber HAL und Kernel-Modus-Treiber</td></tr><tr><td><strong>Zugriffsebene Anwendungen</strong></td><td>Anwendungen = Systemebene</td><td>Benutzer-/Kernel-Ebene getrennt</td></tr><tr><td><strong>Sicherheit</strong></td><td>‚ùå Nicht vorhanden</td><td>‚úÖ Sicherheitsmodell: SID, ACL, Zugriffstoken</td></tr><tr><td><strong>Stabilit√§t</strong></td><td>‚ùå Abh√§ngigkeit eines Programms = OS-Absturz</td><td>‚úÖ Prozessisolation, Kernelschutz</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Aber es gab ein gro√ües ABER! Den Automatisierungs- und Verwaltungswerkzeugen wurde bis 2002 nicht die geb√ºhrende Aufmerksamkeit geschenkt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft verwendete v√∂llig unterschiedliche Ans√§tze, Strategien und Tools f√ºr die Administration. All dies war **inkonsistent**, oft GUI-orientiert und nicht immer automatisierbar.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Liste einiger Tools:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Tool</th><th>Zweck</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Verbesserter Kommandointerpreter (Ersatz f√ºr <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Kommandozeilen-Skripte</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Unterst√ºtzung f√ºr VBScript und JScript zur Automatisierung</td></tr><tr><td><code>reg.exe</code></td><td>Registrierungsverwaltung √ºber die Kommandozeile</td></tr><tr><td><code>net.exe</code></td><td>Arbeit mit Benutzern, Netzwerk, Druckern</td></tr><tr><td><code>sc.exe</code></td><td>Dienstverwaltung</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>Prozessverwaltung</td></tr><tr><td><code>gpedit.msc</code></td><td>Gruppenrichtlinie (lokal)</td></tr><tr><td><code>MMC</code></td><td>Konsole mit Snap-Ins zur Verwaltung</td></tr><tr><td><code>WMI</code></td><td>Zugriff auf Systeminformationen (√ºber <code>wmic</code>, VBScript oder COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI zum Testen von WMI-Abfragen</td></tr><tr><td><code>eventvwr</code></td><td>Ereignisprotokoll-Viewer</td></tr><tr><td><code>perfmon</code></td><td>Ressourcen√ºberwachung</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Automatisierungsbeispiele:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>VBScript-Dateien (<code>*.vbs</code>) zur Verwaltung von Benutzern, Netzwerken, Druckern und Diensten.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî Kommandozeilenschnittstelle zu WMI (z.B. <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>.cmd</code>-Skripte mit Aufrufen von <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code> usw.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Erschien erstmals in <strong>Windows 98</strong>, aktiv genutzt in <strong>Windows 2000 und XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Erm√∂glichte die Ausf√ºhrung von VBScript- und JScript-Dateien √ºber die Kommandozeile:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Teil 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Erst im Jahr 2002 wurde im Unternehmen das <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">Monad-Projekt</a> formuliert, das sich sp√§ter zu PowerShell entwickelte:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Beginn der Entwicklung: ungef√§hr 2002</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>√ñffentliche Ank√ºndigung: 2003, als \"Monad Shell\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Erste Beta-Versionen: erschienen bis 2005</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Endg√ºltige Ver√∂ffentlichung (PowerShell 1.0): November 2006</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Der Autor und Hauptarchitekt des Monad / PowerShell-Projekts ist <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">Jeffrey Snover</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Heute l√§uft PowerShell Core auf</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Parallel dazu wurde das .NET-Framework entwickelt, und PowerShell war tief darin integriert; in den n√§chsten Kapiteln werde ich Beispiele zeigen.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Und nun ‚Äî das Wichtigste!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Der Hauptvorteil von PowerShell im Vergleich zu klassischen Kommandozeilen-Shells besteht darin, dass es mit <em>Objekten</em> und nicht mit Text arbeitet. Wenn Sie einen Befehl ausf√ºhren, gibt er Ihnen nicht nur Text zur√ºck, sondern ein strukturiertes Objekt (oder eine Sammlung von Objekten) mit klar definierten Eigenschaften (Properties) und Methoden (Methods).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sehen Sie, wie PowerShell durch die **Arbeit mit Objekten** klassische Shells √ºbertrifft:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ Wie es fr√ºher war: <code>dir</code> und manuelles Parsen</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In <strong>CMD</strong> (sowohl im alten <code>COMMAND.COM</code> als auch in <code>cmd.exe</code>) gibt der Befehl <code>dir</code> Ergebnisse als reinen Text zur√ºck. Beispielausgabe:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Angenommen, Sie m√∂chten den **Dateinamen** und die **Gr√∂√üe** jeder Datei extrahieren. Sie m√ºssten die Zeichenfolgen manuell parsen:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Dies ist furchtbar schwierig zu lesen, h√§ngt vom Gebietsschema, Datumsformat und der Schriftart ab. Und es bricht bei Leerzeichen in Namen.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: Objekte statt Text</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Einfaches und lesbares Beispiel:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Ergebnis:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> gibt ein **Array von Datei-/Ordnerobjekten** zur√ºck.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> erm√∂glicht das einfache Abrufen der ben√∂tigten **Eigenschaften**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç Was gibt <code>Get-ChildItem</code> tats√§chlich zur√ºck?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Ergebnis:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>PowerShell gibt **Objekte vom Typ <code>System.IO.FileInfo</code>** zur√ºck, die Folgendes besitzen:</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üß± Eigenschaften (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† Methoden (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code> usw.)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Sie arbeiten **mit vollwertigen Objekten**, nicht mit Zeichenketten.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Verb-Nomen-Syntax:</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell verwendet eine **strenge und logische Befehlssyntax**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>Verb-Nomen</code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Verb</th><th>Was es tut</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Abrufen</td></tr><tr><td><code>Set-</code></td><td>Setzen</td></tr><tr><td><code>New-</code></td><td>Erstellen</td></tr><tr><td><code>Remove-</code></td><td>Entfernen</td></tr><tr><td><code>Start-</code></td><td>Starten</td></tr><tr><td><code>Stop-</code></td><td>Stoppen</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Nomen</th><th>Woran es arbeitet</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Prozess</td></tr><tr><td><code>Service</code></td><td>Dienst</td></tr><tr><td><code>Item</code></td><td>Datei/Ordner</td></tr><tr><td><code>EventLog</code></td><td>Ereignisprotokolle</td></tr><tr><td><code>Computer</code></td><td>Computer</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Beispiele:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Was getan werden muss</th><th>Befehl</th></tr></thead><tbody><tr><td>Prozesse abrufen</td><td><code>Get-Process</code></td></tr><tr><td>Dienst stoppen</td><td><code>Stop-Service</code></td></tr><tr><td>Neue Datei erstellen</td><td><code>New-Item</code></td></tr><tr><td>Ordnerinhalt abrufen</td><td><code>Get-ChildItem</code></td></tr><tr><td>Datei l√∂schen</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Selbst wenn Sie den **genauen Befehl nicht kennen**, k√∂nnen Sie ihn nach seiner Bedeutung **erraten** ‚Äî und liegen fast immer richtig.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Das Cmdlet <code>Get-Help</code> ist Ihr wichtigster Helfer.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>Erhalten Sie Hilfe zur Hilfe selbst:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Erhalten Sie grundlegende Hilfe zu einem Befehl f√ºr die Arbeit mit Prozessen:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Sehen Sie Beispiele f√ºr die Verwendung dieses Befehls:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre></code><br>Dies ist ein unglaublich n√ºtzlicher Parameter, der oft fertige L√∂sungen f√ºr Ihre Aufgaben bietet.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Erhalten Sie die detailliertesten Informationen zum Befehl:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre></code></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Im n√§chsten Teil: Pipeline oder Befehlskette (PipeLines)</p>\n<!-- /wp:paragraph -->[:fr]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">La philosophie de PowerShell.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Partie 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Qu'est-ce qui existait avant PowerShell ?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>En 1981, MS-DOS 1.0 est sorti avec l'interpr√©teur de commandes <code>COMMAND.COM</code>. Pour l'automatisation des t√¢ches, on utilisait des **fichiers batch (<code>.bat</code>)** ‚Äî de simples fichiers texte contenant une s√©quence de commandes console. Un asc√©tisme √©tonnant de la ligne de commande par rapport aux syst√®mes compatibles POSIX o√π le **shell Bourne (<code>sh</code>)** existait d√©j√† depuis 1979.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ √âtat du march√© des shells au moment de la sortie de **MS-DOS 1.0** (ao√ªt 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Voici un tableau r√©capitulatif des syst√®mes d'exploitation populaires de l'√©poque et de leur prise en charge des shells (<code>sh</code>, <code>csh</code>, etc.) :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Syst√®me d'exploitation</th><th>Prise en charge des shells (<code>sh</code>, <code>csh</code>, etc.)</th><th>Commentaire</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>Dernier UNIX classique de Bell Labs, largement r√©pandu</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>Version d'UNIX pour l'architecture VAX</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>Branche universitaire d'UNIX de Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>Premi√®re version commerciale d'AT&amp;T, pr√©d√©cesseur de System V</td></tr><tr><td><strong>Xenix (de Microsoft)</strong></td><td><code>sh</code></td><td>Version sous licence d'UNIX, vendue par Microsoft depuis 1980</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>OS de type UNIX pour PDP-11 et Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (similaire)</td><td>Alternative UNIX bon march√© pour PC</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (Pas de <code>sh</code>, seulement un CLI tr√®s simple)</td><td>Pas UNIX, OS le plus populaire pour les PC 8 bits</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (seulement <code>COMMAND.COM</code>)</td><td>Shell de commandes minimal, pas de scripts ni de pipes</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° Qu'est-ce que <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, l'interpr√©teur de scripts UNIX principal depuis 1977.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, un shell am√©lior√© avec une syntaxe similaire au C et des commodit√©s pour le travail interactif.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Ces shells **soutenaient les redirections, les pipes, les variables, les fonctions et les conditions** ‚Äî tout ce qui a fait d'UNIX un outil d'automatisation puissant.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft s'est concentr√© sur les **PC IBM 16 bits bon march√©**, qui avaient **peu de m√©moire** (g√©n√©ralement 64‚Äì256 Ko), n'avaient pas de multit√¢che et √©taient destin√©s √† un **usage domestique et bureautique**, et non √† des serveurs. UNIX √©tait payant, n√©cessitait une architecture et une exp√©rience complexes, et les comptables et ing√©nieurs, pas les administrateurs syst√®me, avaient besoin d'un syst√®me d'exploitation rapide et simple.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>L'interface DOS, au lieu du complexe <code>sh</code>, pr√©sentait un seul fichier <code>command.com</code> avec un maigre ensemble de commandes internes (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del etc.</a>) sans fonctions, boucles ni modules.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Il existait √©galement des commandes externes ‚Äî des fichiers ex√©cutables s√©par√©s (.exe ou .com). Exemples : FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Les scripts d'ex√©cution √©taient enregistr√©s dans un fichier texte avec l'extension <code>.bat</code> (fichier batch).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Exemples de fichiers de configuration :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Configuration et lancement automatiques de Windows 3.11\n:: Auteur : hypo69\n:: Ann√©e : environ 1993\n:: Objet : Initialise l'environnement DOS, charge les pilotes r√©seau et lance Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Configuration de l'invite de commande\nPROMPT $p$g\n\n:: D√©finition des variables d'environnement\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Chargement des pilotes et utilitaires en m√©moire haute\nLH C:\\DOS\\SMARTDRV.EXE       :: Cache disque\nLH C:\\DOS\\MOUSE.COM          :: Pilote de souris\n\n:: Chargement des services r√©seau (pertinent pour Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Lancement automatique de Windows\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî Configuration de la m√©moire et des pilotes DOS pour Windows 3.11\n:: Auteur : hypo69\n:: Ann√©e : environ 1993\n:: Objet : Initialisation des pilotes de m√©moire, configuration des param√®tres syst√®me\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Parall√®lement √† DOS, Microsoft a presque imm√©diatement commenc√© √† d√©velopper un noyau fondamentalement nouveau.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Le noyau <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) est apparu pour la premi√®re fois avec la sortie du syst√®me d'exploitation :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Windows NT 3.1 ‚Äî 27 juillet 1993</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Le d√©veloppement a commenc√©</strong> : en **1988** sous la direction de **Dave Cutler** (ancien ing√©nieur DEC, cr√©ateur de VMS) dans le but de cr√©er un OS enti√®rement nouveau, s√©curis√©, portable et multit√¢che, incompatible avec MS-DOS au niveau du noyau.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî a √©t√© nomm√© ainsi pour souligner la compatibilit√© avec <strong>Windows 3.1</strong> au niveau de l'interface, mais c'√©tait une <strong>architecture enti√®rement nouvelle</strong>.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Ce qu'a apport√© le noyau NT :</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Caract√©ristique</th><th>Description</th></tr></thead><tbody><tr><td><strong>Architecture 32 bits</strong></td><td>Contrairement √† MS-DOS et Windows 3.x, qui √©taient en 16 bits.</td></tr><tr><td><strong>Multit√¢che</strong></td><td>V√©ritable multit√¢che pr√©emptif.</td></tr><tr><td><strong>M√©moire prot√©g√©e</strong></td><td>Les programmes ne pouvaient pas corrompre la m√©moire les uns des autres.</td></tr><tr><td><strong>Modularit√©</strong></td><td>Architecture de noyau multicouche : HAL, Executive, Kernel, pilotes.</td></tr><tr><td><strong>Prise en charge multiplateforme</strong></td><td>NT 3.1 fonctionnait sur x86, MIPS et Alpha.</td></tr><tr><td><strong>Compatibilit√© POSIX</strong></td><td>NT √©tait livr√© avec un **sous-syst√®me POSIX**, certifi√© POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú La lign√©e NT :</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Version NT</th><th>Ann√©e</th><th>Commentaire</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>Premi√®re version de NT</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Am√©liorations, optimisation</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Interface Windows 95, mais noyau NT</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>Aussi NT 10.0 (marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Diff√©rences dans les capacit√©s des syst√®mes d'exploitation :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Caract√©ristique</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>Type de syst√®me</strong></td><td>Monolithique, monot√¢che</td><td>Micro-noyau/hybride, multit√¢che</td></tr><tr><td><strong>Architecture</strong></td><td>16 bits</td><td>32 bits (avec prise en charge 64 bits √† partir de NT 5.2 / XP x64)</td></tr><tr><td><strong>Multit√¢che</strong></td><td>‚ùå Absent (un processus √† la fois)</td><td>‚úÖ Multit√¢che pr√©emptif</td></tr><tr><td><strong>M√©moire prot√©g√©e</strong></td><td>‚ùå Non</td><td>‚úÖ Oui (chaque processus dans son propre espace d'adressage)</td></tr><tr><td><strong>Mode multi-utilisateur</strong></td><td>‚ùå Non</td><td>‚úÖ Partiellement (dans NT Workstation/Server)</td></tr><tr><td><strong>Compatibilit√© POSIX</strong></td><td>‚ùå Non</td><td>‚úÖ Sous-syst√®me POSIX int√©gr√© dans NT 3.1‚Äì5.2</td></tr><tr><td><strong>Portabilit√© du noyau</strong></td><td>‚ùå x86 uniquement</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Pilotes</strong></td><td>Acc√®s direct au mat√©riel</td><td>Via HAL et pilotes en mode noyau</td></tr><tr><td><strong>Niveau d'acc√®s des applications</strong></td><td>Applications = niveau syst√®me</td><td>Niveaux utilisateur / noyau s√©par√©s</td></tr><tr><td><strong>S√©curit√©</strong></td><td>‚ùå Absente</td><td>‚úÖ Mod√®le de s√©curit√© : SID, ACL, jetons d'acc√®s</td></tr><tr><td><strong>Stabilit√©</strong></td><td>‚ùå D√©pendance d'un programme = crash de l'OS</td><td>‚úÖ Isolation des processus, protection du noyau</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Mais il y avait un grand MAIS ! Les outils d'automatisation et d'administration n'ont pas re√ßu l'attention voulue avant 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft a utilis√© des approches, des strat√©gies et des outils d'administration totalement diff√©rents. Tout cela √©tait **disparate**, souvent orient√© GUI et pas toujours automatisable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Liste de quelques outils :</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Outil</th><th>Objectif</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Interpr√©teur de commandes am√©lior√© (remplacement de <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Scripts de ligne de commande</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Prise en charge de VBScript et JScript pour l'automatisation</td></tr><tr><td><code>reg.exe</code></td><td>Gestion du registre depuis la ligne de commande</td></tr><tr><td><code>net.exe</code></td><td>Travail avec les utilisateurs, le r√©seau, les imprimantes</td></tr><tr><td><code>sc.exe</code></td><td>Gestion des services</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>Gestion des processus</td></tr><tr><td><code>gpedit.msc</code></td><td>Strat√©gie de groupe (localement)</td></tr><tr><td><code>MMC</code></td><td>Console avec des snap-ins pour l'administration</td></tr><tr><td><code>WMI</code></td><td>Acc√®s aux informations syst√®me (via <code>wmic</code>, VBScript ou COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>Interface graphique pour tester les requ√™tes WMI</td></tr><tr><td><code>eventvwr</code></td><td>Visionneuse des journaux d'√©v√©nements</td></tr><tr><td><code>perfmon</code></td><td>Surveillance des ressources</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Exemples d'automatisation :</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Fichiers VBScript (<code>*.vbs</code>) pour l'administration des utilisateurs, des r√©seaux, des imprimantes et des services.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî interface de ligne de commande vers WMI (par exemple : <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Scripts <code>.cmd</code> avec des appels √† <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, etc.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Apparu pour la premi√®re fois dans <strong>Windows 98</strong>, activement utilis√© dans <strong>Windows 2000 et XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Permettait d'ex√©cuter des fichiers VBScript et JScript depuis la ligne de commande :</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Partie 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ce n'est qu'en 2002 que la soci√©t√© a formul√© le <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">projet Monad</a>, qui s'est ensuite transform√© en PowerShell :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>D√©but du d√©veloppement : environ 2002</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Annonce publique : 2003, sous le nom de \"Monad Shell\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Premi√®res versions b√™ta : apparues vers 2005</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Version finale (PowerShell 1.0) : novembre 2006</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>L'auteur et architecte principal du projet Monad / PowerShell est <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">Jeffrey Snover</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Aujourd'hui, PowerShell Core fonctionne sur</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Parall√®lement, le framework .NET √©tait en d√©veloppement, et PowerShell y a √©t√© profond√©ment int√©gr√© ; dans les chapitres suivants, je montrerai des exemples.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Et maintenant ‚Äî le plus important !</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Le principal avantage de PowerShell par rapport aux shells de commande classiques est qu'il fonctionne avec des <em>objets</em>, et non du texte. Lorsque vous ex√©cutez une commande, elle ne vous renvoie pas seulement du texte, mais un objet structur√© (ou une collection d'objets) qui poss√®de des propri√©t√©s (Properties) et des m√©thodes (Methods) clairement d√©finies.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>D√©couvrez comment PowerShell surpasse les shells classiques gr√¢ce au **travail avec des objets**</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ Comment c'√©tait : <code>dir</code> et analyse manuelle</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Dans <strong>CMD</strong> (√† la fois dans l'ancien <code>COMMAND.COM</code> et dans <code>cmd.exe</code>), la commande <code>dir</code> renvoie le r√©sultat sous forme de texte brut. Exemple de sortie :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Supposons que vous vouliez extraire le **nom du fichier** et la **taille** de chaque fichier. Vous devriez analyser les cha√Ænes manuellement :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>C'est terriblement difficile √† lire, d√©pend de la locale, du format de date, de la police. Et cela se brise avec des espaces dans les noms.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell : Des objets au lieu de texte</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Exemple simple et lisible :</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>R√©sultat :</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> renvoie un **tableau d'objets fichiers/dossiers**.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> permet de r√©cup√©rer facilement les **propri√©t√©s** n√©cessaires.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç Que renvoie r√©ellement <code>Get-ChildItem</code> ?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>R√©sultat :</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>PowerShell renvoie des **objets de type <code>System.IO.FileInfo</code>**, qui poss√®dent :</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üß± Des propri√©t√©s (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† Des m√©thodes (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, etc.)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Vous travaillez **avec des objets √† part enti√®re**, pas avec des cha√Ænes de caract√®res.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Syntaxe Verbe-Nom :</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell utilise une **syntaxe de commande stricte et logique** :</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>Verbe-Nom</code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Verbe</th><th>Ce qu'il fait</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Obtenir</td></tr><tr><td><code>Set-</code></td><td>D√©finir</td></tr><tr><td><code>New-</code></td><td>Cr√©er</td></tr><tr><td><code>Remove-</code></td><td>Supprimer</td></tr><tr><td><code>Start-</code></td><td>D√©marrer</td></tr><tr><td><code>Stop-</code></td><td>Arr√™ter</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Nom</th><th>Sur quoi il op√®re</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Processus</td></tr><tr><td><code>Service</code></td><td>Service</td></tr><tr><td><code>Item</code></td><td>Fichier/dossier</td></tr><tr><td><code>EventLog</code></td><td>Journaux d'√©v√©nements</td></tr><tr><td><code>Computer</code></td><td>Ordinateur</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Exemples :</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Ce qu'il faut faire</th><th>Commande</th></tr></thead><tbody><tr><td>Obtenir les processus</td><td><code>Get-Process</code></td></tr><tr><td>Arr√™ter le service</td><td><code>Stop-Service</code></td></tr><tr><td>Cr√©er un nouveau fichier</td><td><code>New-Item</code></td></tr><tr><td>Obtenir le contenu du dossier</td><td><code>Get-ChildItem</code></td></tr><tr><td>Supprimer un fichier</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° M√™me si vous **ne connaissez pas la commande exacte**, vous pouvez la **deviner** par son sens ‚Äî et vous aurez presque toujours raison.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Le cmdlet <code>Get-Help</code> est votre principal assistant.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>Obtenir de l'aide sur l'aide elle-m√™me :</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Obtenir de l'aide de base sur une commande pour travailler avec les processus :</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Voir des exemples d'utilisation de cette commande :</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre></code><br>C'est un param√®tre incroyablement utile qui fournit souvent des solutions toutes faites pour vos t√¢ches.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Obtenir les informations les plus d√©taill√©es sur la commande :</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre></code></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Dans la partie suivante : le pipeline ou la cha√Æne de commandes (PipeLines)</p>\n<!-- /wp:paragraph -->[:es]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">Filosof√≠a de PowerShell.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Parte 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>¬øQu√© exist√≠a antes de PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>En 1981, se lanz√≥ MS-DOS 1.0 con el int√©rprete de comandos <code>COMMAND.COM</code>. Para la automatizaci√≥n de tareas se utilizaban los **archivos por lotes (<code>.bat</code>)** ‚Äîsimples archivos de texto con una secuencia de comandos de consola. Un ascetismo asombroso de la l√≠nea de comandos en comparaci√≥n con los sistemas compatibles con POSIX, donde el **shell de Bourne (<code>sh</code>)** ya exist√≠a desde 1979.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Estado del mercado de shells en el momento del lanzamiento de **MS-DOS 1.0** (agosto de 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Aqu√≠ hay una tabla resumida de los sistemas operativos populares de la √©poca y su soporte de shells (<code>sh</code>, <code>csh</code>, etc.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Sistema Operativo</th><th>Soporte de Shells (<code>sh</code>, <code>csh</code>, etc.)</th><th>Comentario</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>√öltimo UNIX cl√°sico de Bell Labs, ampliamente distribuido</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>Versi√≥n de UNIX para arquitectura VAX</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>Rama universitaria de UNIX de Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>Primera versi√≥n comercial de AT&amp;T, predecesor de System V</td></tr><tr><td><strong>Xenix (de Microsoft)</strong></td><td><code>sh</code></td><td>Versi√≥n licenciada de UNIX, vendida por Microsoft desde 1980</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>SO tipo UNIX para PDP-11 e Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (similar)</td><td>Alternativa UNIX econ√≥mica para PC</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (Sin <code>sh</code>, solo CLI muy simple)</td><td>No es UNIX, SO m√°s popular para PCs de 8 bits</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (solo <code>COMMAND.COM</code>)</td><td>Shell de comandos m√≠nimo, sin scripts ni pipes</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° ¬øQu√© son <code>sh</code>, <code>csh</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, el int√©rprete de scripts principal de UNIX desde 1977.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, un shell mejorado con sintaxis similar a C y facilidades para el trabajo interactivo.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Estos shells **soportaban redirecciones, pipes, variables, funciones y condiciones** ‚Äî todo lo que hizo de UNIX una herramienta de automatizaci√≥n potente.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft se centr√≥ en los **PC IBM de 16 bits econ√≥micos**, que ten√≠an **poca memoria** (normalmente 64‚Äì256 KB), no ten√≠an multitarea y estaban destinados al **uso dom√©stico y de oficina**, no a servidores. UNIX era de pago, requer√≠a una arquitectura y experiencia complejas, y los contables e ingenieros, no los administradores de sistemas, necesitaban un sistema operativo r√°pido y sencillo.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>La interfaz de DOS, en lugar del complejo <code>sh</code>, presentaba un √∫nico archivo <code>command.com</code> con un escaso conjunto de comandos internos (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del, etc.</a>) sin funciones, ciclos ni m√≥dulos.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Tambi√©n exist√≠an comandos externos ‚Äî archivos ejecutables separados (.exe o .com). Ejemplos: FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Los scripts de ejecuci√≥n se guardaban en un archivo de texto con la extensi√≥n <code>.bat</code> (archivo por lotes).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ejemplos de archivos de configuraci√≥n:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Configuraci√≥n y inicio autom√°tico de Windows 3.11\n:: Autor: hypo69\n:: A√±o: aproximadamente 1993\n:: Prop√≥sito: Inicializa el entorno DOS, carga los controladores de red e inicia Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Configuraci√≥n del prompt de la l√≠nea de comandos\nPROMPT $p$g\n\n:: Establecer variables de entorno\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Carga de controladores y utilidades en memoria superior\nLH C:\\DOS\\SMARTDRV.EXE       :: Cach√© de disco\nLH C:\\DOS\\MOUSE.COM          :: Controlador de rat√≥n\n\n:: Carga de servicios de red (relevante para Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Inicio autom√°tico de Windows\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî Configuraci√≥n de memoria y controladores DOS para Windows 3.11\n:: Autor: hypo69\n:: A√±o: aproximadamente 1993\n:: Prop√≥sito: Inicializaci√≥n de los controladores de memoria, configuraci√≥n de los par√°metros del sistema\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>En paralelo con DOS, Microsoft casi inmediatamente comenz√≥ a desarrollar un n√∫cleo fundamentalmente nuevo.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>El n√∫cleo <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) apareci√≥ por primera vez con el lanzamiento del sistema operativo:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Windows NT 3.1 ‚Äî 27 de julio de 1993</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>El desarrollo comenz√≥</strong>: en **1988** bajo el liderazgo de **Dave Cutler** (antiguo ingeniero de DEC, creador de VMS) con el objetivo de crear un sistema operativo completamente nuevo, seguro, portable y multitarea, incompatible con MS-DOS a nivel de n√∫cleo.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî se llam√≥ as√≠ para enfatizar la compatibilidad con **Windows 3.1** a nivel de interfaz, pero era una **arquitectura completamente nueva**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Lo que trajo el n√∫cleo NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Caracter√≠stica</th><th>Descripci√≥n</th></tr></thead><tbody><tr><td><strong>Arquitectura de 32 bits</strong></td><td>A diferencia de MS-DOS y Windows 3.x, que eran de 16 bits.</td></tr><tr><td><strong>Multitarea</strong></td><td>Multitarea preferente real.</td></tr><tr><td><strong>Memoria protegida</strong></td><td>Los programas no pod√≠an corromper la memoria de otros.</td></tr><tr><td><strong>Modularidad</strong></td><td>Arquitectura de n√∫cleo en capas: HAL, Executive, Kernel, controladores.</td></tr><tr><td><strong>Soporte multiplataforma</strong></td><td>NT 3.1 se ejecutaba en x86, MIPS y Alpha.</td></tr><tr><td><strong>Compatibilidad con POSIX</strong></td><td>NT se suministraba con un **subsistema POSIX**, certificado seg√∫n POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú L√≠nea de productos NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Versi√≥n NT</th><th>A√±o</th><th>Comentario</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>Primer lanzamiento de NT</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Mejoras, optimizaci√≥n</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Interfaz de Windows 95, pero n√∫cleo NT</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>Tambi√©n NT 10.0 (marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Diferencias en las capacidades del sistema operativo:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Caracter√≠stica</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>Tipo de sistema</strong></td><td>Monol√≠tico, monotarea</td><td>Micron√∫cleo/h√≠brido, multitarea</td></tr><tr><td><strong>Arquitectura</strong></td><td>16 bits</td><td>32 bits (con soporte de 64 bits desde NT 5.2 / XP x64)</td></tr><tr><td><strong>Multitarea</strong></td><td>‚ùå Ausente (un proceso a la vez)</td><td>‚úÖ Multitarea preferente</td></tr><tr><td><strong>Memoria protegida</strong></td><td>‚ùå No</td><td>‚úÖ S√≠ (cada proceso en su propio espacio de direcciones)</td></tr><tr><td><strong>Modo multiusuario</strong></td><td>‚ùå No</td><td>‚úÖ Parcialmente (en NT Workstation/Server)</td></tr><tr><td><strong>Compatibilidad con POSIX</strong></td><td>‚ùå No</td><td>‚úÖ Subsistema POSIX integrado en NT 3.1‚Äì5.2</td></tr><tr><td><strong>Portabilidad del n√∫cleo</strong></td><td>‚ùå Solo x86</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Controladores</strong></td><td>Acceso directo al hardware</td><td>A trav√©s de HAL y controladores en modo kernel</td></tr><tr><td><strong>Nivel de acceso de aplicaciones</strong></td><td>Aplicaciones = nivel de sistema</td><td>Nivel de usuario / kernel separados</td></tr><tr><td><strong>Seguridad</strong></td><td>‚ùå Ausente</td><td>‚úÖ Modelo de seguridad: SID, ACL, tokens de acceso</td></tr><tr><td><strong>Estabilidad</strong></td><td>‚ùå Dependencia de un programa = fallo del SO</td><td>‚úÖ Aislamiento de procesos, protecci√≥n del kernel</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>¬°Pero hab√≠a un gran PERO! Los medios de automatizaci√≥n y administraci√≥n no recibieron la atenci√≥n debida hasta 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft utiliz√≥ enfoques, estrategias y herramientas de administraci√≥n completamente diferentes. Todo esto estaba **desconectado**, a menudo orientado a la GUI y no siempre automatizable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Lista de algunas herramientas:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Herramienta</th><th>Prop√≥sito</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Int√©rprete de comandos mejorado (reemplazo de <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Scripts de l√≠nea de comandos</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Soporte para VBScript y JScript para la automatizaci√≥n</td></tr><tr><td><code>reg.exe</code></td><td>Administraci√≥n del registro desde la l√≠nea de comandos</td></tr><tr><td><code>net.exe</code></td><td>Trabajo con usuarios, red, impresoras</td></tr><tr><td><code>sc.exe</code></td><td>Administraci√≥n de servicios</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>Administraci√≥n de procesos</td></tr><tr><td><code>gpedit.msc</code></td><td>Pol√≠tica de grupo (localmente)</td></tr><tr><td><code>MMC</code></td><td>Consola con complementos para la administraci√≥n</td></tr><tr><td><code>WMI</code></td><td>Acceso a informaci√≥n del sistema (a trav√©s de <code>wmic</code>, VBScript o COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI para probar consultas WMI</td></tr><tr><td><code>eventvwr</code></td><td>Visor de registros de eventos</td></tr><tr><td><code>perfmon</code></td><td>Monitoreo de recursos</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Ejemplos de automatizaci√≥n:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Archivos VBScript (<code>*.vbs</code>) para la administraci√≥n de usuarios, redes, impresoras y servicios.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî interfaz de l√≠nea de comandos para WMI (por ejemplo: <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Scripts <code>.cmd</code> con llamadas a <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, etc.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Apareci√≥ por primera vez en <strong>Windows 98</strong>, y se utiliz√≥ activamente en <strong>Windows 2000 y XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Permit√≠a ejecutar archivos VBScript y JScript desde la l√≠nea de comandos:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Parte 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Solo en 2002, la compa√±√≠a formul√≥ el <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">proyecto Monad</a>, que m√°s tarde se convirti√≥ en PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Inicio del desarrollo: aproximadamente en 2002</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Anuncio p√∫blico: 2003, como \"Monad Shell\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Primeras versiones beta: aparecieron hacia 2005</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Lanzamiento final (PowerShell 1.0): noviembre de 2006</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>El autor y arquitecto principal del proyecto Monad / PowerShell es <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">Jeffrey Snover</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Hoy, PowerShell Core se ejecuta en</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Paralelamente, se estaba desarrollando el framework .NET y PowerShell se integr√≥ profundamente en √©l; en los siguientes cap√≠tulos mostrar√© ejemplos.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Y ahora, ¬°lo m√°s importante!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>La principal ventaja de PowerShell en comparaci√≥n con los shells de comandos cl√°sicos es que trabaja con <em>objetos</em>, no con texto. Cuando se ejecuta un comando, este no devuelve solo texto, sino un objeto estructurado (o una colecci√≥n de objetos) que tiene propiedades (Properties) y m√©todos (Methods) claramente definidos.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Vea c√≥mo PowerShell supera a los shells cl√°sicos gracias a la **manipulaci√≥n de objetos**</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ C√≥mo era antes: <code>dir</code> y an√°lisis manual</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>En **CMD** (tanto en el antiguo <code>COMMAND.COM</code> como en <code>cmd.exe</code>), el comando <code>dir</code> devuelve resultados como texto sin formato. Ejemplo de salida:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Supongamos que desea extraer el **nombre del archivo** y el **tama√±o** de cada archivo. Tendr√≠a que analizar las cadenas manualmente:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Esto es terriblemente dif√≠cil de leer, depende de la configuraci√≥n regional, el formato de fecha, la fuente. Y falla con espacios en los nombres.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: Objetos en lugar de texto</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Ejemplo simple y legible:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Resultado:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> devuelve una **matriz de objetos de archivo/carpeta**.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> permite recuperar f√°cilmente las **propiedades** necesarias.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç ¬øQu√© devuelve realmente <code>Get-ChildItem</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Resultado:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>PowerShell devuelve **objetos de tipo <code>System.IO.FileInfo</code>**, que tienen:</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üß± Propiedades (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† M√©todos (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, etc.)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Se trabaja **con objetos completos**, no con cadenas.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Sintaxis Verbo-Sustantivo:</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell utiliza una **sintaxis de comandos estricta y l√≥gica**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>Verbo-Sustantivo</code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Verbo</th><th>Qu√© hace</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Obtener</td></tr><tr><td><code>Set-</code></td><td>Establecer</td></tr><tr><td><code>New-</code></td><td>Crear</td></tr><tr><td><code>Remove-</code></td><td>Eliminar</td></tr><tr><td><code>Start-</code></td><td>Iniciar</td></tr><tr><td><code>Stop-</code></td><td>Detener</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Sustantivo</th><th>Sobre qu√© opera</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Proceso</td></tr><tr><td><code>Service</code></td><td>Servicio</td></tr><tr><td><code>Item</code></td><td>Archivo/carpeta</td></tr><tr><td><code>EventLog</code></td><td>Registros de eventos</td></tr><tr><td><code>Computer</code></td><td>Ordenador</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Ejemplos:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Qu√© hay que hacer</th><th>Comando</th></tr></thead><tbody><tr><td>Obtener procesos</td><td><code>Get-Process</code></td></tr><tr><td>Detener servicio</td><td><code>Stop-Service</code></td></tr><tr><td>Crear nuevo archivo</td><td><code>New-Item</code></td></tr><tr><td>Obtener contenido de la carpeta</td><td><code>Get-ChildItem</code></td></tr><tr><td>Eliminar archivo</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Incluso si **no conoce el comando exacto**, puede **suponerlo** por su significado ‚Äî y casi siempre acertar√°.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>El cmdlet <code>Get-Help</code> es su principal asistente.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>Obtener ayuda sobre la propia ayuda:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Obtener ayuda b√°sica sobre un comando para trabajar con procesos:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Ver ejemplos de uso de este comando:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre></code><br>Este es un par√°metro incre√≠blemente √∫til que a menudo proporciona soluciones ya hechas para sus tareas.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Obtener la informaci√≥n m√°s detallada sobre el comando:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre></code></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>En la siguiente parte: pipeline o cadena de comandos (PipeLines)</p>\n<!-- /wp:paragraph -->[:uk]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">–§—ñ–ª–æ—Å–æ—Ñ—ñ—è PowerShell.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">–ß–∞—Å—Ç–∏–Ω–∞ 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–©–æ –±—É–ª–æ –¥–æ PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–£ 1981 —Ä–æ—Ü—ñ –≤–∏–π—à–æ–≤ MS-DOS 1.0 –∑ –∫–æ–º–∞–Ω–¥–Ω–∏–º —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–º <code>COMMAND.COM</code>. –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó –∑–∞–≤–¥–∞–Ω—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏—Å—è **–ø–∞–∫–µ—Ç–Ω—ñ —Ñ–∞–π–ª–∏ (<code>.bat</code>)** ‚Äî –ø—Ä–æ—Å—Ç—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ —Ñ–∞–π–ª–∏ –∑ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—é –∫–æ–Ω—Å–æ–ª—å–Ω–∏—Ö –∫–æ–º–∞–Ω–¥. –î–∏–≤–æ–≤–∏–∂–Ω–∏–π –∞—Å–∫–µ—Ç–∏–∑–º –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –Ω–∞ —Ç–ª—ñ POSIX-—Å—É–º—ñ—Å–Ω–∏—Ö —Å–∏—Å—Ç–µ–º, –¥–µ –≤–∂–µ –∑ 1979 —Ä–æ–∫—É —ñ—Å–Ω—É–≤–∞–ª–∞ **–æ–±–æ–ª–æ–Ω–∫–∞ –ë–æ—Ä–Ω–∞ (<code>sh</code>)**.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ –°—Ç–∞–Ω —Ä–∏–Ω–∫—É –æ–±–æ–ª–æ–Ω–æ–∫ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤–∏—Ö–æ–¥—É **MS-DOS 1.0** (—Å–µ—Ä–ø–µ–Ω—å 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–û—Å—å –∑–≤–µ–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü—è –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –û–° —Ç–æ–≥–æ —á–∞—Å—É —Ç–∞ —ó—Ö –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –æ–±–æ–ª–æ–Ω–æ–∫ (<code>sh</code>, <code>csh</code> —Ç–∞ —ñ–Ω.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞</th><th>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –æ–±–æ–ª–æ–Ω–æ–∫ (<code>sh</code>, <code>csh</code>, —ñ–Ω.)</th><th>–ö–æ–º–µ–Ω—Ç–∞—Ä</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>–û—Å—Ç–∞–Ω–Ω—ñ–π –∫–ª–∞—Å–∏—á–Ω–∏–π UNIX Bell Labs, —à–∏—Ä–æ–∫–æ —Ä–æ–∑–ø–æ–≤—Å—é–¥–∂–µ–Ω–∏–π</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>–í–µ—Ä—Å—ñ—è UNIX –¥–ª—è –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏ VAX</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>–£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å—å–∫–∞ –≥—ñ–ª–∫–∞ UNIX –≤—ñ–¥ Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>–ü–µ—Ä—à–∞ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –≤–µ—Ä—Å—ñ—è –≤—ñ–¥ AT&amp;T, –ø–æ–ø–µ—Ä–µ–¥–Ω–∏–∫ System V</td></tr><tr><td><strong>Xenix (–≤—ñ–¥ Microsoft)</strong></td><td><code>sh</code></td><td>–õ—ñ—Ü–µ–Ω–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è UNIX, –ø—Ä–æ–¥–∞–≤–∞–ª–∞—Å—è Microsoft –∑ 1980 —Ä.</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>UNIX-–ø–æ–¥—ñ–±–Ω–∞ –û–° –¥–ª—è PDP-11 —Ç–∞ Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (—Å—Ö–æ–∂–∞)</td><td>–ù–µ–¥–æ—Ä–æ–≥–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ UNIX –¥–ª—è –ü–ö</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (–ù–µ–º–∞—î <code>sh</code>, —Ç—ñ–ª—å–∫–∏ –Ω–∞–π–ø—Ä–æ—Å—Ç—ñ—à–∏–π CLI)</td><td>–ù–µ UNIX, –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∞ –û–° –¥–ª—è 8-–±—ñ—Ç–Ω–∏—Ö –ü–ö</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (—Ç—ñ–ª—å–∫–∏ <code>COMMAND.COM</code>)</td><td>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∫–æ–º–∞–Ω–¥–Ω–∞ –æ–±–æ–ª–æ–Ω–∫–∞, –∂–æ–¥–Ω–∏—Ö —Å–∫—Ä–∏–ø—Ç—ñ–≤ —á–∏ pipe</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° –©–æ —Ç–∞–∫–µ <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, –æ—Å–Ω–æ–≤–Ω–∏–π —Å–∫—Ä–∏–ø—Ç–æ–≤–∏–π —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä UNIX –∑ 1977 —Ä–æ–∫—É.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, –ø–æ–∫—Ä–∞—â–µ–Ω–∞ –æ–±–æ–ª–æ–Ω–∫–∞ —ñ–∑ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º, —Å—Ö–æ–∂–∏–º –Ω–∞ C, —Ç–∞ –∑—Ä—É—á–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—ó —Ä–æ–±–æ—Ç–∏.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>–¶—ñ –æ–±–æ–ª–æ–Ω–∫–∏ **–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏, –ø–∞–π–ø–∏, –∑–º—ñ–Ω–Ω—ñ, —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ —É–º–æ–≤–∏** ‚Äî –≤—Å–µ, —â–æ –∑—Ä–æ–±–∏–ª–æ UNIX –ø–æ—Ç—É–∂–Ω–∏–º —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft –æ—Ä—ñ—î–Ω—Ç—É–≤–∞–ª–∞—Å—è –Ω–∞ **–¥–µ—à–µ–≤—ñ 16-–±—ñ—Ç–Ω—ñ IBM PC**, —è–∫—ñ –º–∞–ª–∏ **–º–∞–ª–æ –ø–∞–º'—è—Ç—ñ** (–∑–∞–∑–≤–∏—á–∞–π 64‚Äì256 –ö–ë), –Ω–µ –º–∞–ª–∏ –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—ñ —Ç–∞ –±—É–ª–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω—ñ –¥–ª—è **–¥–æ–º–∞—à–Ω—å–æ–≥–æ —Ç–∞ –æ—Ñ—ñ—Å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è**, –∞ –Ω–µ —Å–µ—Ä–≤–µ—Ä—ñ–≤. UNIX –±—É–≤ –ø–ª–∞—Ç–Ω–∏–º, –≤–∏–º–∞–≥–∞–≤ —Å–∫–ª–∞–¥–Ω–æ—ó –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏ —Ç–∞ –¥–æ—Å–≤—ñ–¥—É, –∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏ —Ç–∞ —ñ–Ω–∂–µ–Ω–µ—Ä–∏, –Ω–µ —Å–∏—Å—Ç–µ–º–Ω—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏, –ø–æ—Ç—Ä–µ–±—É–≤–∞–ª–∏ —à–≤–∏–¥–∫–æ—ó —Ç–∞ –ø—Ä–æ—Å—Ç–æ—ó –û–°.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å DOS –∑–∞–º—ñ—Å—Ç—å —Å–∫–ª–∞–¥–Ω–æ–≥–æ <code>sh</code> –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–≤ –æ–¥–∏–Ω —Ñ–∞–π–ª <code>command.com</code> –∑ –º—ñ–∑–µ—Ä–Ω–∏–º –Ω–∞–±–æ—Ä–æ–º –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –∫–æ–º–∞–Ω–¥ (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del —Ç–æ—â–æ</a>) –±–µ–∑ —Ñ—É–Ω–∫—Ü—ñ–π, —Ü–∏–∫–ª—ñ–≤ —Ç–∞ –º–æ–¥—É–ª—ñ–≤.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ë—É–ª–∏ –π –∑–æ–≤–Ω—ñ—à–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ ‚Äî –æ–∫—Ä–µ–º—ñ –≤–∏–∫–æ–Ω—É–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏ (.exe –∞–±–æ .com). –ü—Ä–∏–∫–ª–∞–¥–∏: FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–°—Ü–µ–Ω–∞—Ä—ñ—ó –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É–≤–∞–ª–∏—Å—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º <code>.bat</code> (batch file).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ü—Ä–∏–∫–ª–∞–¥–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Ç–∞ –∑–∞–ø—É—Å–∫ Windows 3.11\n:: –ê–≤—Ç–æ—Ä: hypo69\n:: –†—ñ–∫: –ø—Ä–∏–±–ª–∏–∑–Ω–æ 1993\n:: –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –í–∏–∫–æ–Ω—É—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é DOS-—Å–µ—Ä–µ–¥–æ–≤–∏—â–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ—Ä–µ–∂–µ–≤–∏—Ö –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ —Ç–∞ –∑–∞–ø—É—Å–∫ Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞\nPROMPT $p$g\n\n:: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ —Ç–∞ —É—Ç–∏–ª—ñ—Ç —É –≤–µ—Ä—Ö–Ω—é –ø–∞–º'—è—Ç—å\nLH C:\\DOS\\SMARTDRV.EXE       :: –î–∏—Å–∫–æ–≤–∏–π –∫–µ—à\nLH C:\\DOS\\MOUSE.COM          :: –î—Ä–∞–π–≤–µ—Ä –º–∏—à—ñ\n\n:: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ—Ä–µ–∂–µ–≤–∏—Ö —Å–ª—É–∂–± (–∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–∞–ø—É—Å–∫ Windows\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ø–∞–º'—è—Ç—ñ —Ç–∞ –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ DOS –¥–ª—è Windows 3.11\n:: –ê–≤—Ç–æ—Ä: hypo69\n:: –†—ñ–∫: –ø—Ä–∏–±–ª–∏–∑–Ω–æ 1993\n:: –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥—Ä–∞–π–≤–µ—Ä—ñ–≤ –ø–∞–º'—è—Ç—ñ, –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>–£ –ú–∞–π–∫—Ä–æ—Å–æ—Ñ—Ç –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ DOS –º–∞–π–∂–µ –æ–¥—Ä–∞–∑—É –ø–æ—á–∞–ª–∏ —Ä–æ–∑—Ä–æ–±–ª—è—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤–æ –Ω–æ–≤–µ —è–¥—Ä–æ.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–Ø–¥—Ä–æ <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) –≤–ø–µ—Ä—à–µ –∑'—è–≤–∏–ª–æ—Å—è –∑ —Ä–µ–ª—ñ–∑–æ–º –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Windows NT 3.1 ‚Äî 27 –ª–∏–ø–Ω—è 1993 —Ä–æ–∫—É</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>–†–æ–∑—Ä–æ–±–∫–∞ –ø–æ—á–∞–ª–∞—Å—è</strong>: —É **1988 —Ä–æ—Ü—ñ** –ø—ñ–¥ –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–æ–º **–î–µ–π–≤–∞ –ö–∞—Ç–ª–µ—Ä–∞** (–∫–æ–ª–∏—à–Ω—å–æ–≥–æ —ñ–Ω–∂–µ–Ω–µ—Ä–∞ DEC, —Ç–≤–æ—Ä—Ü—è VMS) –∑ –º–µ—Ç–æ—é —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é –Ω–æ–≤—É, –∑–∞—Ö–∏—â–µ–Ω—É, –ø–µ—Ä–µ–Ω–æ—Å–Ω—É —Ç–∞ –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—É –û–°, –Ω–µ —Å—É–º—ñ—Å–Ω—É –∑ MS-DOS –Ω–∞ —Ä—ñ–≤–Ω—ñ —è–¥—Ä–∞.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî –Ω–∞–∑–∏–≤–∞–ª–∞—Å—è —Ç–∞–∫, —â–æ–± –ø—ñ–¥–∫—Ä–µ—Å–ª–∏—Ç–∏ —Å—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑ **Windows 3.1** –Ω–∞ —Ä—ñ–≤–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É, –∞–ª–µ –±—É–ª–∞ **–∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–æ–≤–æ—é –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† –©–æ –ø—Ä–∏–Ω–µ—Å–ª–æ —è–¥—Ä–æ NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–û—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å</th><th>–û–ø–∏—Å</th></tr></thead><tbody><tr><td><strong>32-–±—ñ—Ç–Ω–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞</strong></td><td>–ù–∞ –≤—ñ–¥–º—ñ–Ω—É –≤—ñ–¥ MS-DOS —Ç–∞ Windows 3.x, —è–∫—ñ –±—É–ª–∏ 16-–±—ñ—Ç–Ω–∏–º–∏.</td></tr><tr><td><strong>–ë–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—ñ—Å—Ç—å</strong></td><td>–°–ø—Ä–∞–≤–∂–Ω—è preemptive multitasking.</td></tr><tr><td><strong>–ó–∞—Ö–∏—â–µ–Ω–∞ –ø–∞–º'—è—Ç—å</strong></td><td>–ü—Ä–æ–≥—Ä–∞–º–∏ –Ω–µ –º–æ–≥–ª–∏ –ø–æ—à–∫–æ–¥–∏—Ç–∏ –ø–∞–º'—è—Ç—å –æ–¥–Ω–∞ –æ–¥–Ω–æ—ó.</td></tr><tr><td><strong>–ú–æ–¥—É–ª—å–Ω—ñ—Å—Ç—å</strong></td><td>–ë–∞–≥–∞—Ç–æ—Ä—ñ–≤–Ω–µ–≤–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ —è–¥—Ä–∞: HAL, Executive, Kernel, –¥—Ä–∞–π–≤–µ—Ä–∏.</td></tr><tr><td><strong>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –±–∞–≥–∞—Ç–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—ñ</strong></td><td>NT 3.1 –ø—Ä–∞—Ü—é–≤–∞–ª–∞ –Ω–∞ x86, MIPS —Ç–∞ Alpha.</td></tr><tr><td><strong>–°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑ POSIX</strong></td><td>NT –ø–æ—Å—Ç–∞—á–∞–≤—Å—è –∑ **POSIX-–ø—ñ–¥—Å–∏—Å—Ç–µ–º–æ—é**, —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ—é –∑–∞ POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú –õ—ñ–Ω—ñ–π–∫–∞ NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–í–µ—Ä—Å—ñ—è NT</th><th>–†—ñ–∫</th><th>–ö–æ–º–µ–Ω—Ç–∞—Ä</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>–ü–µ—Ä—à–∏–π —Ä–µ–ª—ñ–∑ NT</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è, –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è</td></tr><tr><td>NT 4.0</td><td>1996</td><td>–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å Windows 95, –∞–ª–µ —è–¥—Ä–æ NT</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>–¢–∞–∫–æ–∂ NT 10.0 (–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>–í—ñ–¥–º—ñ–Ω–Ω–æ—Å—Ç—ñ –≤ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–∏—Ö —Å–∏—Å—Ç–µ–º:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>–¢–∏–ø —Å–∏—Å—Ç–µ–º–∏</strong></td><td>–ú–æ–Ω–æ–ª—ñ—Ç–Ω–∞, –æ–¥–Ω–æ–∑–∞–¥–∞—á–Ω–∞</td><td>–ú—ñ–∫—Ä–æ—è–¥–µ—Ä–Ω–∞/–≥—ñ–±—Ä–∏–¥–Ω–∞, –±–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω–∞</td></tr><tr><td><strong>–†–æ–∑—Ä—è–¥–Ω—ñ—Å—Ç—å</strong></td><td>16-–±—ñ—Ç</td><td>32-–±—ñ—Ç (–∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é 64-–±—ñ—Ç –∑ NT 5.2 / XP x64)</td></tr><tr><td><strong>–ë–∞–≥–∞—Ç–æ–∑–∞–¥–∞—á–Ω—ñ—Å—Ç—å</strong></td><td>‚ùå –í—ñ–¥—Å—É—Ç–Ω—è (–æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å –∑–∞ —Ä–∞–∑)</td><td>‚úÖ Preemptive multitasking</td></tr><tr><td><strong>–ó–∞—Ö–∏—â–µ–Ω–∞ –ø–∞–º'—è—Ç—å</strong></td><td>‚ùå –ù—ñ</td><td>‚úÖ –¢–∞–∫ (–∫–æ–∂–µ–Ω –ø—Ä–æ—Ü–µ—Å —É —Å–≤–æ—î–º—É –∞–¥—Ä–µ—Å–Ω–æ–º—É –ø—Ä–æ—Å—Ç–æ—Ä—ñ)</td></tr><tr><td><strong>–ë–∞–≥–∞—Ç–æ–∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π —Ä–µ–∂–∏–º</strong></td><td>‚ùå –ù—ñ</td><td>‚úÖ –ß–∞—Å—Ç–∫–æ–≤–æ (—É NT Workstation/Server)</td></tr><tr><td><strong>–°—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑ POSIX</strong></td><td>‚ùå –ù—ñ</td><td>‚úÖ –í–±—É–¥–æ–≤–∞–Ω–∞ POSIX-–ø—ñ–¥—Å–∏—Å—Ç–µ–º–∞ –≤ NT 3.1‚Äì5.2</td></tr><tr><td><strong>–ü–µ—Ä–µ–Ω–æ—Å–Ω—ñ—Å—Ç—å —è–¥—Ä–∞</strong></td><td>‚ùå –¢—ñ–ª—å–∫–∏ x86</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>–î—Ä–∞–π–≤–µ—Ä–∏</strong></td><td>–ü—Ä—è–º–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è</td><td>–ß–µ—Ä–µ–∑ HAL —Ç–∞ Kernel-mode Drivers</td></tr><tr><td><strong>–†—ñ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø—É –¥–æ–¥–∞—Ç–∫—ñ–≤</strong></td><td>–î–æ–¥–∞—Ç–∫–∏ = —Å–∏—Å—Ç–µ–º–Ω–∏–π —Ä—ñ–≤–µ–Ω—å</td><td>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π / –Ø–¥–µ—Ä–Ω–∏–π —Ä—ñ–≤–µ–Ω—å —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ</td></tr><tr><td><strong>–ë–µ–∑–ø–µ–∫–∞</strong></td><td>‚ùå –í—ñ–¥—Å—É—Ç–Ω—è</td><td>‚úÖ –ú–æ–¥–µ–ª—å –±–µ–∑–ø–µ–∫–∏: SID, ACL, —Ç–æ–∫–µ–Ω–∏ –¥–æ—Å—Ç—É–ø—É</td></tr><tr><td><strong>–°—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å</strong></td><td>‚ùå –ó–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –æ–¥–Ω—ñ—î—ó –ø—Ä–æ–≥—Ä–∞–º–∏ = –∫—Ä–∞—Ö –û–°</td><td>‚úÖ –Ü–∑–æ–ª—è—Ü—ñ—è –ø—Ä–æ—Ü–µ—Å—ñ–≤, –∑–∞—Ö–∏—Å—Ç —è–¥—Ä–∞</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>–ê–ª–µ –±—É–ª–æ –æ–¥–Ω–µ –≤–µ–ª–∏–∫–µ –ê–õ–ï! –ó–∞—Å–æ–±–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è –Ω–µ –ø—Ä–∏–¥—ñ–ª—è–ª–æ—Å—è –Ω–∞–ª–µ–∂–Ω–æ—ó —É–≤–∞–≥–∏ –∞–∂ –¥–æ 2002 —Ä–æ–∫—É.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ä—ñ–∑–Ω—ñ –ø—ñ–¥—Ö–æ–¥–∏, —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è. –í—Å–µ —Ü–µ –±—É–ª–æ **—Ä–æ–∑—Ä—ñ–∑–Ω–µ–Ω–∏–º**, —á–∞—Å—Ç–æ –æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–∏–º –Ω–∞ GUI —Ç–∞ –Ω–µ –∑–∞–≤–∂–¥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∏–º.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå –°–ø–∏—Å–æ–∫ –¥–µ—è–∫–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–ó–∞—Å—ñ–±</th><th>–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥–Ω–∏–π —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä (–∑–∞–º—ñ–Ω–∞ <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>–°–∫—Ä–∏–ø—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ VBScript —Ç–∞ JScript –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó</td></tr><tr><td><code>reg.exe</code></td><td>–ö–µ—Ä—É–≤–∞–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–æ–º –∑ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞</td></tr><tr><td><code>net.exe</code></td><td>–†–æ–±–æ—Ç–∞ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏, –º–µ—Ä–µ–∂–µ—é, –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏</td></tr><tr><td><code>sc.exe</code></td><td>–ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–ª—É–∂–±–∞–º–∏</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>–ö–µ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å–∞–º–∏</td></tr><tr><td><code>gpedit.msc</code></td><td>–ì—Ä—É–ø–æ–≤–∞ –ø–æ–ª—ñ—Ç–∏–∫–∞ (–ª–æ–∫–∞–ª—å–Ω–æ)</td></tr><tr><td><code>MMC</code></td><td>–ö–æ–Ω—Å–æ–ª—å –∑—ñ —Å–Ω–∞–ø-—ñ–Ω–∞–º–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è</td></tr><tr><td><code>WMI</code></td><td>–î–æ—Å—Ç—É–ø –¥–æ —Å–∏—Å—Ç–µ–º–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó (—á–µ—Ä–µ–∑ <code>wmic</code>, VBScript, –∞–±–æ COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è WMI-–∑–∞–ø–∏—Ç—ñ–≤</td></tr><tr><td><code>eventvwr</code></td><td>–ü–µ—Ä–µ–≥–ª—è–¥ –∂—É—Ä–Ω–∞–ª—ñ–≤ –ø–æ–¥—ñ–π</td></tr><tr><td><code>perfmon</code></td><td>–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å—ñ–≤</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† –ü—Ä–∏–∫–ª–∞–¥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>VBScript-—Ñ–∞–π–ª–∏ (<code>*.vbs</code>) –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –º–µ—Ä–µ–∂, –ø—Ä–∏–Ω—Ç–µ—Ä—ñ–≤ —Ç–∞ —Å–ª—É–∂–±.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî –∫–æ–º–∞–Ω–¥–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ WMI (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>.cmd</code> —Å–∫—Ä–∏–ø—Ç–∏ –∑ –≤–∏–∫–ª–∏–∫–∞–º–∏ <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, —Ç–æ—â–æ.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>–í–ø–µ—Ä—à–µ –∑'—è–≤–∏–≤—Å—è —É <strong>Windows 98</strong>, –∞–∫—Ç–∏–≤–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è —É <strong>Windows 2000 —Ç–∞ XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>–î–æ–∑–≤–æ–ª—è–≤ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ VBScript —Ç–∞ JScript-—Ñ–∞–π–ª–∏ –∑ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">–ß–∞—Å—Ç–∏–Ω–∞ 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–õ–∏—à–µ —É 2002 —Ä–æ—Ü—ñ –≤ –∫–æ–º–ø–∞–Ω—ñ—ó —Å—Ñ–æ—Ä–º—É–≤–∞–≤—Å—è –ø—Ä–æ—î–∫—Ç <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">Monad</a>, —è–∫–∏–π –ø—ñ–∑–Ω—ñ—à–µ –≤–∏–ª–∏–≤—Å—è —É PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ü–æ—á–∞—Ç–æ–∫ —Ä–æ–∑—Ä–æ–±–∫–∏: –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω–æ —É 2002 —Ä–æ—Ü—ñ</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ü—É–±–ª—ñ—á–Ω–µ –∞–Ω–æ–Ω—Å—É–≤–∞–Ω–Ω—è: 2003 —Ä—ñ–∫, —è–∫ \"Monad Shell\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ü–µ—Ä—à—ñ –±–µ—Ç–∞-–≤–µ—Ä—Å—ñ—ó: –∑'—è–≤–∏–ª–∏—Å—è –¥–æ 2005 —Ä–æ–∫—É</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–§—ñ–Ω–∞–ª—å–Ω–∏–π —Ä–µ–ª—ñ–∑ (PowerShell 1.0): –ª–∏—Å—Ç–æ–ø–∞–¥ 2006 —Ä–æ–∫—É</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ê–≤—Ç–æ—Ä–æ–º —Ç–∞ –≥–æ–ª–æ–≤–Ω–∏–º –∞—Ä—Ö—ñ—Ç–µ–∫—Ç–æ—Ä–æ–º –ø—Ä–æ—î–∫—Ç—É Monad / PowerShell —î <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">–î–∂–µ—Ñ—Ä—ñ –°–Ω–æ–≤–µ—Ä</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–°—å–æ–≥–æ–¥–Ω—ñ PowerShell Core –ø—Ä–∞—Ü—é—î –Ω–∞</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>–ü–∞—Ä–∞–ª–µ–ª—å–Ω–æ –π—à–ª–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É .NET, —ñ PowerShell –±—É–≤ —É –Ω–µ—ó –≥–ª–∏–±–æ–∫–æ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–π, —É –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–∑–¥—ñ–ª–∞—Ö —è –ø–æ–∫–∞–∂—É –ø—Ä–∏–∫–ª–∞–¥–∏.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ê —Ç–µ–ø–µ—Ä ‚Äî –Ω–∞–π–≥–æ–ª–æ–≤–Ω—ñ—à–µ!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–ì–æ–ª–æ–≤–Ω–∞ –ø–µ—Ä–µ–≤–∞–≥–∞ PowerShell –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑ –∫–ª–∞—Å–∏—á–Ω–∏–º–∏ –∫–æ–º–∞–Ω–¥–Ω–∏–º–∏ –æ–±–æ–ª–æ–Ω–∫–∞–º–∏ ‚Äî —Ü–µ —Ç–µ, —â–æ –≤—ñ–Ω –ø—Ä–∞—Ü—é—î –∑ <em>–æ–±'—î–∫—Ç–∞–º–∏</em>, –∞ –Ω–µ –∑ —Ç–µ–∫—Å—Ç–æ–º. –ö–æ–ª–∏ –≤–∏ –≤–∏–∫–æ–Ω—É—î—Ç–µ –∫–æ–º–∞–Ω–¥—É, –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –≤–∞–º –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π –æ–±'—î–∫—Ç (–∞–±–æ –∫–æ–ª–µ–∫—Ü—ñ—é –æ–±'—î–∫—Ç—ñ–≤), —É —è–∫–æ–≥–æ —î —á—ñ—Ç–∫–æ –≤–∏–∑–Ω–∞—á–µ–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ (Properties) —Ç–∞ –º–µ—Ç–æ–¥–∏ (Methods).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>–î–∏–≤—ñ—Ç—å—Å—è, —è–∫ PowerShell –ø–µ—Ä–µ–≤–µ—Ä—à—É—î –∫–ª–∞—Å–∏—á–Ω—ñ –æ–±–æ–ª–æ–Ω–∫–∏ –∑–∞–≤–¥—è–∫–∏ **—Ä–æ–±–æ—Ç—ñ –∑ –æ–±'—î–∫—Ç–∞–º–∏**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ –Ø–∫ –±—É–ª–æ: <code>dir</code> —Ç–∞ —Ä—É—á–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>–£ <strong>CMD</strong> (—ñ –≤ —Å—Ç–∞—Ä–æ–º—É <code>COMMAND.COM</code>, —ñ –≤ <code>cmd.exe</code>) –∫–æ–º–∞–Ω–¥–∞ <code>dir</code> –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç —è–∫ –∑–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–∫—Å—Ç. –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–≤–æ–¥—É:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>–î–æ–ø—É—Å—Ç–∏–º–æ, –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏—Ç—è–≥—Ç–∏ **—ñ–º'—è —Ñ–∞–π–ª—É** —Ç–∞ **—Ä–æ–∑–º—ñ—Ä** –∫–æ–∂–Ω–æ–≥–æ —Ñ–∞–π–ª—É. –í–∞–º –¥–æ–≤–µ–¥–µ—Ç—å—Å—è –ø–∞—Ä—Å–∏—Ç–∏ —Ä—è–¥–∫–∏ –≤—Ä—É—á–Ω—É:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>–¶–µ –∂–∞—Ö–ª–∏–≤–æ —Å–∫–ª–∞–¥–Ω–æ —á–∏—Ç–∞—î—Ç—å—Å—è, –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –ª–æ–∫–∞–ª—ñ, —Ñ–æ—Ä–º–∞—Ç—É –¥–∞—Ç–∏, —à—Ä–∏—Ñ—Ç—É. –Ü –ª–∞–º–∞—î—Ç—å—Å—è –ø—Ä–∏ –ø—Ä–æ–±—ñ–ª–∞—Ö —É –Ω–∞–∑–≤–∞—Ö.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: –û–±'—î–∫—Ç–∏ –∑–∞–º—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî –ü—Ä–æ—Å—Ç–∏–π —Ç–∞ —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> –ø–æ–≤–µ—Ä—Ç–∞—î **–º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —Ñ–∞–π–ª—ñ–≤/–ø–∞–ø–æ–∫**.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> –¥–æ–∑–≤–æ–ª—è—î –ª–µ–≥–∫–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ **–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç –©–æ –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ –ø–æ–≤–µ—Ä—Ç–∞—î <code>Get-ChildItem</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>PowerShell –ø–æ–≤–µ—Ä—Ç–∞—î **–æ–±'—î–∫—Ç–∏ —Ç–∏–ø—É <code>System.IO.FileInfo</code>**, —è–∫—ñ –º–∞—é—Ç—å:</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üß± –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† –ú–µ—Ç–æ–¥–∏ (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code> —Ç–æ—â–æ)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>–í–∏ –ø—Ä–∞—Ü—é—î—Ç–µ **–∑ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–º–∏ –æ–±'—î–∫—Ç–∞–º–∏**, –∞ –Ω–µ –∑ —Ä—è–¥–∫–∞–º–∏.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">–°–∏–Ω—Ç–∞–∫—Å–∏—Å \"–î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫\":</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î **—Å—Ç—Ä–æ–≥–∏–π —Ç–∞ –ª–æ–≥—ñ—á–Ω–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>–î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫</code> (Verb-Noun)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–î—ñ—î—Å–ª–æ–≤–æ</th><th>–©–æ —Ä–æ–±–∏—Ç—å</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>–û—Ç—Ä–∏–º–∞—Ç–∏</td></tr><tr><td><code>Set-</code></td><td>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏</td></tr><tr><td><code>New-</code></td><td>–°—Ç–≤–æ—Ä–∏—Ç–∏</td></tr><tr><td><code>Remove-</code></td><td>–í–∏–¥–∞–ª–∏—Ç–∏</td></tr><tr><td><code>Start-</code></td><td>–ó–∞–ø—É—Å—Ç–∏—Ç–∏</td></tr><tr><td><code>Stop-</code></td><td>–ó—É–ø–∏–Ω–∏—Ç–∏</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–Ü–º–µ–Ω–Ω–∏–∫</th><th>–ù–∞–¥ —á–∏–º –ø—Ä–∞—Ü—é—î</th></tr></thead><tbody><tr><td><code>Process</code></td><td>–ü—Ä–æ—Ü–µ—Å</td></tr><tr><td><code>Service</code></td><td>–°–ª—É–∂–±–∞</td></tr><tr><td><code>Item</code></td><td>–§–∞–π–ª/–ø–∞–ø–∫–∞</td></tr><tr><td><code>EventLog</code></td><td>–ñ—É—Ä–Ω–∞–ª–∏ –ø–æ–¥—ñ–π</td></tr><tr><td><code>Computer</code></td><td>–ö–æ–º–ø'—é—Ç–µ—Ä</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ –ü—Ä–∏–∫–ª–∞–¥–∏:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>–©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏</th><th>–ö–æ–º–∞–Ω–¥–∞</th></tr></thead><tbody><tr><td>–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ü–µ—Å–∏</td><td><code>Get-Process</code></td></tr><tr><td>–ó—É–ø–∏–Ω–∏—Ç–∏ —Å–ª—É–∂–±—É</td><td><code>Stop-Service</code></td></tr><tr><td>–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —Ñ–∞–π–ª</td><td><code>New-Item</code></td></tr><tr><td>–û—Ç—Ä–∏–º–∞—Ç–∏ –≤–º—ñ—Å—Ç –ø–∞–ø–∫–∏</td><td><code>Get-ChildItem</code></td></tr><tr><td>–í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–∞–π–ª</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° –ù–∞–≤—ñ—Ç—å —è–∫—â–æ –≤–∏ **–Ω–µ –∑–Ω–∞—î—Ç–µ —Ç–æ—á–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏**, –≤–∏ –º–æ–∂–µ—Ç–µ **–ø—Ä–∏–ø—É—Å—Ç–∏—Ç–∏** —ó—ó –∑–∞ –∑–º—ñ—Å—Ç–æ–º ‚Äî —ñ –º–∞–π–∂–µ –∑–∞–≤–∂–¥–∏ –≤–≥–∞–¥–∞—î—Ç–µ.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>–ö–æ–º–∞–Ω–¥–ª–µ—Ç <code>Get-Help</code> ‚Äî –≤–∞—à –≥–æ–ª–æ–≤–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>–û—Ç—Ä–∏–º–∞—î–º–æ –¥–æ–≤—ñ–¥–∫—É –ø—Ä–æ —Å–∞–º—É –¥–æ–≤—ñ–¥–∫—É:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>–û—Ç—Ä–∏–º–∞—î–º–æ –±–∞–∑–æ–≤—É –¥–æ–≤—ñ–¥–∫—É –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø—Ä–æ—Ü–µ—Å–∞–º–∏:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>–ü–æ–¥–∏–≤–∏–º–æ—Å—è –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre></code><br>–¶–µ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ –∫–æ—Ä–∏—Å–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä, —è–∫–∏–π —á–∞—Å—Ç–æ –¥–∞—î –≥–æ—Ç–æ–≤—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–≤–¥–∞–Ω—å.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>–û—Ç—Ä–∏–º–∞—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–∫–ª–∞–¥–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre></code></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>–£ –Ω–∞—Å—Ç—É–ø–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ: –∫–æ–Ω–≤–µ—î—Ä –∞–±–æ –ª–∞–Ω—Ü—é–∂–æ–∫ –∫–æ–º–∞–Ω–¥ (PipeLines)</p>\n<!-- /wp:paragraph -->[:pl]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">Filozofia PowerShell.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Czƒô≈õƒá 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Co by≈Ço przed PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>W 1981 roku ukaza≈Ç siƒô MS-DOS 1.0 z interpreterem polece≈Ñ <code>COMMAND.COM</code>. Do automatyzacji zada≈Ñ wykorzystywano **pliki wsadowe (<code>.bat</code>)** ‚Äî proste pliki tekstowe z sekwencjƒÖ polece≈Ñ konsoli. Niezwyk≈Ça asceza wiersza polece≈Ñ na tle system√≥w zgodnych z POSIX, gdzie ju≈º od 1979 roku istnia≈Ça **pow≈Çoka Bourne'a (<code>sh</code>)**.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Stan rynku pow≈Çok w momencie wydania **MS-DOS 1.0** (sierpie≈Ñ 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Oto zbiorcza tabela popularnych system√≥w operacyjnych tamtego czasu i ich wsparcia dla pow≈Çok (<code>sh</code>, <code>csh</code> i inne):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>System Operacyjny</th><th>Wsparcie dla pow≈Çok (<code>sh</code>, <code>csh</code>, inne)</th><th>Komentarz</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>Ostatni klasyczny UNIX Bell Labs, szeroko rozpowszechniony</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>Wersja UNIX dla architektury VAX</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>Uniwersytecka ga≈ÇƒÖ≈∫ UNIX z Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>Pierwsza komercyjna wersja od AT&amp;T, poprzednik System V</td></tr><tr><td><strong>Xenix (od Microsoft)</strong></td><td><code>sh</code></td><td>Licencjonowana wersja UNIX, sprzedawana przez Microsoft od 1980 r.</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>OS typu UNIX dla PDP-11 i Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (podobna)</td><td>Niedroga alternatywa dla UNIX dla PC</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (Brak <code>sh</code>, tylko najprostszy CLI)</td><td>Nie UNIX, najpopularniejszy OS dla 8-bitowych PC</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (tylko <code>COMMAND.COM</code>)</td><td>Minimalna pow≈Çoka polece≈Ñ, brak skrypt√≥w czy pipe</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° Co to jest <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, g≈Ç√≥wny interpreter skrypt√≥w UNIX od 1977 roku.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, ulepszona pow≈Çoka z sk≈ÇadniƒÖ przypominajƒÖcƒÖ C i wygodami dla pracy interaktywnej.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Te pow≈Çoki **obs≈Çugiwa≈Çy przekierowania, potoki, zmienne, funkcje i warunki** ‚Äî wszystko, co uczyni≈Ço UNIX potƒô≈ºnym narzƒôdziem automatyzacji.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft skupia≈Ç siƒô na **tanich 16-bitowych komputerach IBM PC**, kt√≥re mia≈Çy **ma≈Ço pamiƒôci** (zazwyczaj 64‚Äì256 KB), nie posiada≈Çy wielozadaniowo≈õci i by≈Çy przeznaczone do **u≈ºytku domowego i biurowego**, a nie serwer√≥w. UNIX by≈Ç p≈Çatny, wymaga≈Ç skomplikowanej architektury i do≈õwiadczenia, a ksiƒôgowi i in≈ºynierowie, nie administratorzy system√≥w, potrzebowali szybkiego i prostego systemu operacyjnego.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Interfejs DOS, zamiast z≈Ço≈ºonego <code>sh</code>, przedstawia≈Ç jeden plik <code>command.com</code> z skƒÖpym zestawem wewnƒôtrznych polece≈Ñ (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del itp.</a>) bez funkcji, pƒôtli i modu≈Ç√≥w.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Istnia≈Çy te≈º polecenia zewnƒôtrzne ‚Äî oddzielne pliki wykonywalne (.exe lub .com). Przyk≈Çady: FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Skrypty wykonywane by≈Çy zapisywane w pliku tekstowym z rozszerzeniem <code>.bat</code> (plik wsadowy).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Przyk≈Çady plik√≥w konfiguracyjnych:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Automatyczna konfiguracja i uruchamianie Windows 3.11\n:: Autor: hypo69\n:: Rok: oko≈Ço 1993\n:: Przeznaczenie: Inicjuje ≈õrodowisko DOS, ≈Çaduje sterowniki sieciowe i uruchamia Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Ustawienie wiersza polece≈Ñ\nPROMPT $p$g\n\n:: Ustawienie zmiennych ≈õrodowiskowych\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: ≈Åadowanie sterownik√≥w i narzƒôdzi do pamiƒôci g√≥rnej\nLH C:\\DOS\\SMARTDRV.EXE       :: Bufor dysku\nLH C:\\DOS\\MOUSE.COM          :: Sterownik myszy\n\n:: ≈Åadowanie us≈Çug sieciowych (istotne dla Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Automatyczne uruchamianie Windows\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî Konfiguracja pamiƒôci i sterownik√≥w DOS dla Windows 3.11\n:: Autor: hypo69\n:: Rok: oko≈Ço 1993\n:: Przeznaczenie: Inicjuje sterowniki pamiƒôci, konfiguruje parametry systemowe\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>W Microsoft r√≥wnolegle z DOS-em niemal od razu rozpoczƒôto prace nad zasadniczo nowym jƒÖdrem.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>JƒÖdro <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) po raz pierwszy pojawi≈Ço siƒô wraz z wydaniem systemu operacyjnego:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Windows NT 3.1 ‚Äî 27 lipca 1993 roku</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Rozw√≥j rozpoczƒÖ≈Ç siƒô</strong>: w **1988 roku** pod kierownictwem **Dave'a Cutlera** (by≈Çego in≈ºyniera DEC, tw√≥rcy VMS) w celu stworzenia ca≈Çkowicie nowego, bezpiecznego, przeno≈õnego i wielozadaniowego systemu operacyjnego, niekompatybilnego z MS-DOS na poziomie jƒÖdra.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî nazwana tak, aby podkre≈õliƒá kompatybilno≈õƒá z **Windows 3.1** na poziomie interfejsu, ale by≈Ça to **zupe≈Çnie nowa architektura**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Co przynios≈Ço jƒÖdro NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Cecha</th><th>Opis</th></tr></thead><tbody><tr><td><strong>Architektura 32-bitowa</strong></td><td>W przeciwie≈Ñstwie do MS-DOS i Windows 3.x, kt√≥re by≈Çy 16-bitowe.</td></tr><tr><td><strong>Wielozadaniowo≈õƒá</strong></td><td>Prawdziwy wielozadaniowo≈õƒá wyw≈ÇaszczajƒÖca.</td></tr><tr><td><strong>Pamiƒôƒá chroniona</strong></td><td>Programy nie mog≈Çy uszkodziƒá pamiƒôci innych.</td></tr><tr><td><strong>Modularno≈õƒá</strong></td><td>Wielowarstwowa architektura jƒÖdra: HAL, Executive, Kernel, sterowniki.</td></tr><tr><td><strong>Wsparcie dla wielu platform</strong></td><td>NT 3.1 dzia≈Ça≈Ç na x86, MIPS i Alpha.</td></tr><tr><td><strong>Kompatybilno≈õƒá z POSIX</strong></td><td>NT by≈Ç dostarczany z **podsystemem POSIX**, certyfikowanym zgodnie z POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú Linia NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Wersja NT</th><th>Rok</th><th>Komentarz</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>Pierwsze wydanie NT</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Ulepszenia, optymalizacja</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Interfejs Windows 95, ale jƒÖdro NT</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>R√≥wnie≈º NT 10.0 (marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>R√≥≈ºnice w mo≈ºliwo≈õciach system√≥w operacyjnych:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Charakterystyka</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>Typ systemu</strong></td><td>Monolityczny, jednotaskowy</td><td>MikrojƒÖdrowy/hybrydowy, wielozadaniowy</td></tr><tr><td><strong>Bitowo≈õƒá</strong></td><td>16-bit</td><td>32-bit (ze wsparciem dla 64-bit od NT 5.2 / XP x64)</td></tr><tr><td><strong>Wielozadaniowo≈õƒá</strong></td><td>‚ùå Brak (jeden proces naraz)</td><td>‚úÖ Wielozadaniowo≈õƒá wyw≈ÇaszczajƒÖca</td></tr><tr><td><strong>Pamiƒôƒá chroniona</strong></td><td>‚ùå Nie</td><td>‚úÖ Tak (ka≈ºdy proces w swojej przestrzeni adresowej)</td></tr><tr><td><strong>Tryb wielou≈ºytkownikowy</strong></td><td>‚ùå Nie</td><td>‚úÖ Czƒô≈õciowo (w NT Workstation/Server)</td></tr><tr><td><strong>Kompatybilno≈õƒá z POSIX</strong></td><td>‚ùå Nie</td><td>‚úÖ Wbudowany podsystem POSIX w NT 3.1‚Äì5.2</td></tr><tr><td><strong>Przeno≈õno≈õƒá jƒÖdra</strong></td><td>‚ùå Tylko x86</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Sterowniki</strong></td><td>Bezpo≈õredni dostƒôp do sprzƒôtu</td><td>Poprzez HAL i sterowniki trybu jƒÖdra</td></tr><tr><td><strong>Poziom dostƒôpu aplikacji</strong></td><td>Aplikacje = poziom systemowy</td><td>Poziom u≈ºytkownika / jƒÖdra oddzielone</td></tr><tr><td><strong>Bezpiecze≈Ñstwo</strong></td><td>‚ùå Brak</td><td>‚úÖ Model bezpiecze≈Ñstwa: SID, ACL, tokeny dostƒôpu</td></tr><tr><td><strong>Stabilno≈õƒá</strong></td><td>‚ùå Zale≈ºno≈õƒá jednego programu = awaria systemu operacyjnego</td><td>‚úÖ Izolacja proces√≥w, ochrona jƒÖdra</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Ale by≈Ço jedno du≈ºe ALE! ≈örodkom automatyzacji i administracji nie po≈õwiƒôcano nale≈ºytej uwagi a≈º do 2002 roku.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft stosowa≈Ç zupe≈Çnie inne podej≈õcia, strategie i narzƒôdzia do administracji. Wszystko to by≈Ço **niejednolite**, czƒôsto zorientowane na GUI i nie zawsze automatyzowalne.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Lista niekt√≥rych narzƒôdzi:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Narzƒôdzie</th><th>Przeznaczenie</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Ulepszony interpreter polece≈Ñ (zamiennik <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Skrypty wiersza polece≈Ñ</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Obs≈Çuga VBScript i JScript do automatyzacji</td></tr><tr><td><code>reg.exe</code></td><td>ZarzƒÖdzanie rejestrem z wiersza polece≈Ñ</td></tr><tr><td><code>net.exe</code></td><td>Praca z u≈ºytkownikami, sieciƒÖ, drukarkami</td></tr><tr><td><code>sc.exe</code></td><td>ZarzƒÖdzanie us≈Çugami</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>ZarzƒÖdzanie procesami</td></tr><tr><td><code>gpedit.msc</code></td><td>Zasady grupy (lokalnie)</td></tr><tr><td><code>MMC</code></td><td>Konsola z przystawkami do zarzƒÖdzania</td></tr><tr><td><code>WMI</code></td><td>Dostƒôp do informacji systemowych (przez <code>wmic</code>, VBScript lub COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI do testowania zapyta≈Ñ WMI</td></tr><tr><td><code>eventvwr</code></td><td>PrzeglƒÖdarka dziennik√≥w zdarze≈Ñ</td></tr><tr><td><code>perfmon</code></td><td>Monitorowanie zasob√≥w</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Przyk≈Çady automatyzacji:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Pliki VBScript (<code>*.vbs</code>) do zarzƒÖdzania u≈ºytkownikami, sieciami, drukarkami i us≈Çugami.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî interfejs wiersza polece≈Ñ do WMI (np.: <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Skrypty <code>.cmd</code> z wywo≈Çaniami <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code> itd.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Po raz pierwszy pojawi≈Ç siƒô w <strong>Windows 98</strong>, aktywnie wykorzystywany w <strong>Windows 2000 i XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Umo≈ºliwia≈Ç wykonywanie plik√≥w VBScript i JScript z wiersza polece≈Ñ:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Czƒô≈õƒá 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Dopiero w 2002 roku w firmie sformu≈Çowano projekt <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">Monad</a>, kt√≥ry p√≥≈∫niej przekszta≈Çci≈Ç siƒô w PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>PoczƒÖtek rozwoju: oko≈Ço 2002 roku</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Publiczne og≈Çoszenie: 2003 rok, jako \"Monad Shell\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Pierwsze wersje beta: pojawi≈Çy siƒô do 2005 roku</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ostateczne wydanie (PowerShell 1.0): listopad 2006 roku</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Autorem i g≈Ç√≥wnym architektem projektu Monad / PowerShell jest <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">Jeffrey Snover</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Dzi≈õ PowerShell Core dzia≈Ça na</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>R√≥wnolegle rozwija≈Ç siƒô framework .NET, a PowerShell by≈Ç w niego g≈Çƒôboko zintegrowany; w kolejnych rozdzia≈Çach poka≈ºƒô przyk≈Çady.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A teraz ‚Äî najwa≈ºniejsze!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>G≈Ç√≥wnƒÖ zaletƒÖ PowerShell w por√≥wnaniu z klasycznymi pow≈Çokami polece≈Ñ jest to, ≈ºe pracuje on z <em>obiektami</em>, a nie z tekstem. Kiedy wykonujesz polecenie, zwraca ono nie tylko tekst, ale ustrukturyzowany obiekt (lub kolekcjƒô obiekt√≥w), kt√≥ry ma jasno zdefiniowane w≈Ça≈õciwo≈õci (Properties) i metody (Methods).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Zobacz, jak PowerShell przewy≈ºsza klasyczne pow≈Çoki dziƒôki **pracy z obiektami**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ Jak to by≈Ço: <code>dir</code> i rƒôczne parsowanie</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>W **CMD** (zar√≥wno w starym <code>COMMAND.COM</code>, jak i w <code>cmd.exe</code>) polecenie <code>dir</code> zwraca wynik jako zwyk≈Çy tekst. Przyk≈Çad wyj≈õcia:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Za≈Ç√≥≈ºmy, ≈ºe chcesz wyodrƒôbniƒá **nazwƒô pliku** i **rozmiar** ka≈ºdego pliku. Musia≈Çby≈õ rƒôcznie parsowaƒá ciƒÖgi znak√≥w:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>To jest strasznie trudne do odczytania, zale≈ºy od ustawie≈Ñ regionalnych, formatu daty, czcionki. I psuje siƒô przy spacjach w nazwach.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: Obiekty zamiast tekstu</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Prosty i czytelny przyk≈Çad:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Wynik:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> zwraca **tablicƒô obiekt√≥w plik√≥w/folder√≥w**.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> pozwala ≈Çatwo uzyskaƒá niezbƒôdne **w≈Ça≈õciwo≈õci**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç Co tak naprawdƒô zwraca <code>Get-ChildItem</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Wynik:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>PowerShell zwraca **obiekty typu <code>System.IO.FileInfo</code>**, kt√≥re posiadajƒÖ:</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üß± W≈Ça≈õciwo≈õci (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† Metody (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code> itp.)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Pracujesz **z pe≈Çnoprawnymi obiektami**, a nie z ciƒÖgami znak√≥w.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Sk≈Çadnia \"Czasownik-Rzeczownik\":</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell u≈ºywa **≈õcis≈Çej i logicznej sk≈Çadni polece≈Ñ**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>Czasownik-Rzeczownik</code> (Verb-Noun)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Czasownik</th><th>Co robi</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Pobierz</td></tr><tr><td><code>Set-</code></td><td>Ustaw</td></tr><tr><td><code>New-</code></td><td>Utw√≥rz</td></tr><tr><td><code>Remove-</code></td><td>Usu≈Ñ</td></tr><tr><td><code>Start-</code></td><td>Uruchom</td></tr><tr><td><code>Stop-</code></td><td>Zatrzymaj</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Rzeczownik</th><th>Nad czym pracuje</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Proces</td></tr><tr><td><code>Service</code></td><td>Us≈Çuga</td></tr><tr><td><code>Item</code></td><td>Plik/folder</td></tr><tr><td><code>EventLog</code></td><td>Dzienniki zdarze≈Ñ</td></tr><tr><td><code>Computer</code></td><td>Komputer</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Przyk≈Çady:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Co trzeba zrobiƒá</th><th>Polecenie</th></tr></thead><tbody><tr><td>Pobierz procesy</td><td><code>Get-Process</code></td></tr><tr><td>Zatrzymaj us≈Çugƒô</td><td><code>Stop-Service</code></td></tr><tr><td>Utw√≥rz nowy plik</td><td><code>New-Item</code></td></tr><tr><td>Pobierz zawarto≈õƒá folderu</td><td><code>Get-ChildItem</code></td></tr><tr><td>Usu≈Ñ plik</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Nawet je≈õli **nie znasz dok≈Çadnego polecenia**, mo≈ºesz **zasugerowaƒá** je na podstawie znaczenia ‚Äî i prawie zawsze trafisz.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Cmdlet <code>Get-Help</code> to Tw√≥j g≈Ç√≥wny pomocnik.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>Uzyskaj pomoc na temat samej pomocy:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Uzyskaj podstawowƒÖ pomoc na temat polecenia do pracy z procesami:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Zobacz przyk≈Çady u≈ºycia tego polecenia:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre></code><br>To niezwykle przydatny parametr, kt√≥ry czƒôsto dostarcza gotowe rozwiƒÖzania dla Twoich zada≈Ñ.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Uzyskaj najbardziej szczeg√≥≈Çowe informacje na temat polecenia:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre></code></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>W nastƒôpnej czƒô≈õci: potok lub ≈Ça≈Ñcuch polece≈Ñ (PipeLines)</p>\n<!-- /wp:paragraph -->[:it]<!-- wp:heading {\"level\":1} -->\n<h1 class=\"wp-block-heading\">Filosofia di PowerShell.</h1>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Parte 0.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Cosa c'era prima di PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Nel 1981, fu rilasciato MS-DOS 1.0 con l'interprete di comandi <code>COMMAND.COM</code>. Per l'automazione delle attivit√† venivano utilizzati i **file batch (<code>.bat</code>)** ‚Äî semplici file di testo con una sequenza di comandi console. Un'ascesi sorprendente della riga di comando rispetto ai sistemi compatibili POSIX, dove la **shell di Bourne (<code>sh</code>)** esisteva gi√† dal 1979.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÖ Stato del mercato delle shell al momento del rilascio di **MS-DOS 1.0** (agosto 1981)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ecco una tabella riassuntiva dei sistemi operativi popolari dell'epoca e del loro supporto per le shell (<code>sh</code>, <code>csh</code>, ecc.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Sistema Operativo</th><th>Supporto shell (<code>sh</code>, <code>csh</code>, ecc.)</th><th>Commento</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>Ultimo UNIX classico di Bell Labs, ampiamente distribuito</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>Versione UNIX per architettura VAX</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>Ramo UNIX universitario di Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>Prima versione commerciale di AT&amp;T, predecessore di System V</td></tr><tr><td><strong>Xenix (di Microsoft)</strong></td><td><code>sh</code></td><td>Versione UNIX licenziata, venduta da Microsoft dal 1980</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>Sistema operativo simile a UNIX per PDP-11 e Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (simile)</td><td>Alternativa UNIX economica per PC</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (Nessun <code>sh</code>, solo CLI semplicissima)</td><td>Non UNIX, sistema operativo pi√π popolare per PC a 8 bit</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (solo <code>COMMAND.COM</code>)</td><td>Shell di comando minimale, nessun script o pipe</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üí° Cosa sono <code>sh</code>, <code>csh</code></h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, l'interprete di scripting UNIX principale dal 1977.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, una shell migliorata con sintassi simile a C e comodit√† per il lavoro interattivo.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Queste shell **supportavano reindirizzamenti, pipe, variabili, funzioni e condizioni** ‚Äî tutto ci√≤ che ha reso UNIX uno strumento di automazione potente.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft si concentr√≤ sui **PC IBM a 16 bit economici**, che avevano **poca memoria** (solitamente 64‚Äì256 KB), non disponevano di multitasking ed erano destinati all'**uso domestico e d'ufficio**, non a server. UNIX era a pagamento, richiedeva architettura ed esperienza complesse, e contabili e ingegneri, non amministratori di sistema, avevano bisogno di un sistema operativo veloce e semplice.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>L'interfaccia DOS, invece del complesso <code>sh</code>, presentava un singolo file <code>command.com</code> con un misero set di comandi interni (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del, ecc.</a>) senza funzioni, cicli o moduli.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>C'erano anche comandi esterni ‚Äî file eseguibili separati (.exe o .com). Esempi: FORMAT.COM, XCOPY.EXE, CHKDSK.EXE, EDIT.COM.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Gli script di esecuzione venivano salvati in un file di testo con estensione <code>.bat</code> (file batch).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Esempi di file di configurazione:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Configurazione e avvio automatico di Windows 3.11\n:: Autore: hypo69\n:: Anno: circa 1993\n:: Scopo: Inizializza l'ambiente DOS, carica i driver di rete e avvia Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Impostazione del prompt dei comandi\nPROMPT $p$g\n\n:: Impostazione delle variabili d'ambiente\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Caricamento di driver e utility nella memoria superiore\nLH C:\\DOS\\SMARTDRV.EXE       :: Cache del disco\nLH C:\\DOS\\MOUSE.COM          :: Driver del mouse\n\n:: Caricamento dei servizi di rete (rilevante per Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Avvio automatico di Windows\nWIN\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-bash\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî Configurazione della memoria e dei driver DOS per Windows 3.11\n:: Autore: hypo69\n:: Anno: circa 1993\n:: Scopo: Inizializzazione dei driver di memoria, configurazione dei parametri di sistema\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Parallelamente a DOS, Microsoft inizi√≤ quasi subito a sviluppare un kernel fondamentalmente nuovo.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Il kernel <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) apparve per la prima volta con il rilascio del sistema operativo:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Windows NT 3.1 ‚Äî 27 luglio 1993</strong></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Lo sviluppo inizi√≤</strong>: nel **1988** sotto la guida di **Dave Cutler** (ex ingegnere DEC, creatore di VMS) con l'obiettivo di creare un sistema operativo completamente nuovo, sicuro, portatile e multitasking, incompatibile con MS-DOS a livello di kernel.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî fu chiamato cos√¨ per sottolineare la compatibilit√† con **Windows 3.1** a livello di interfaccia, ma era una **architettura completamente nuova**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üß† Cosa ha portato il kernel NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Caratteristica</th><th>Descrizione</th></tr></thead><tbody><tr><td><strong>Architettura a 32 bit</strong></td><td>A differenza di MS-DOS e Windows 3.x, che erano a 16 bit.</td></tr><tr><td><strong>Multitasking</strong></td><td>Vero multitasking preemptive.</td></tr><tr><td><strong>Memoria protetta</strong></td><td>I programmi non potevano corrompere la memoria l'uno dell'altro.</td></tr><tr><td><strong>Modularit√†</strong></td><td>Architettura del kernel a pi√π livelli: HAL, Executive, Kernel, driver.</td></tr><tr><td><strong>Supporto multipiattaforma</strong></td><td>NT 3.1 funzionava su x86, MIPS e Alpha.</td></tr><tr><td><strong>Compatibilit√† POSIX</strong></td><td>NT era fornito con un **sottosistema POSIX**, certificato POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üìú Linea NT:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Versione NT</th><th>Anno</th><th>Commento</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>Primo rilascio NT</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Miglioramenti, ottimizzazione</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Interfaccia Windows 95, ma kernel NT</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>Anche NT 10.0 (marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Differenze nelle capacit√† dei sistemi operativi:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Caratteristica</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>Tipo di sistema</strong></td><td>Monolitico, monotasking</td><td>Microkernel/ibrido, multitasking</td></tr><tr><td><strong>Architettura</strong></td><td>16-bit</td><td>32-bit (con supporto 64-bit da NT 5.2 / XP x64)</td></tr><tr><td><strong>Multitasking</strong></td><td>‚ùå Assente (un processo alla volta)</td><td>‚úÖ Multitasking preemptive</td></tr><tr><td><strong>Memoria protetta</strong></td><td>‚ùå No</td><td>‚úÖ S√¨ (ogni processo nel proprio spazio di indirizzamento)</td></tr><tr><td><strong>Modalit√† multiutente</strong></td><td>‚ùå No</td><td>‚úÖ Parzialmente (in NT Workstation/Server)</td></tr><tr><td><strong>Compatibilit√† POSIX</strong></td><td>‚ùå No</td><td>‚úÖ Sottosistema POSIX integrato in NT 3.1‚Äì5.2</td></tr><tr><td><strong>Portabilit√† del kernel</strong></td><td>‚ùå Solo x86</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Driver</strong></td><td>Accesso diretto all'hardware</td><td>Tramite HAL e driver in modalit√† kernel</td></tr><tr><td><strong>Livello di accesso applicazioni</strong></td><td>Applicazioni = livello di sistema</td><td>Livello utente / kernel separati</td></tr><tr><td><strong>Sicurezza</strong></td><td>‚ùå Assente</td><td>‚úÖ Modello di sicurezza: SID, ACL, token di accesso</td></tr><tr><td><strong>Stabilit√†</strong></td><td>‚ùå Dipendenza di un programma = crash del sistema operativo</td><td>‚úÖ Isolamento dei processi, protezione del kernel</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Ma c'era un grande MA! Agli strumenti di automazione e amministrazione non √® stata data la dovuta attenzione fino al 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft ha utilizzato approcci, strategie e strumenti di amministrazione completamente diversi. Tutto ci√≤ era **disorganizzato**, spesso orientato alla GUI e non sempre automatizzabile.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå Elenco di alcuni strumenti:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Strumento</th><th>Scopo</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Interprete di comandi migliorato (sostituzione di <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Script della riga di comando</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Supporto per VBScript e JScript per l'automazione</td></tr><tr><td><code>reg.exe</code></td><td>Gestione del registro dalla riga di comando</td></tr><tr><td><code>net.exe</code></td><td>Lavoro con utenti, rete, stampanti</td></tr><tr><td><code>sc.exe</code></td><td>Gestione dei servizi</td></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>Gestione dei processi</td></tr><tr><td><code>gpedit.msc</code></td><td>Criteri di gruppo (localmente)</td></tr><tr><td><code>MMC</code></td><td>Console con snap-in per la gestione</td></tr><tr><td><code>WMI</code></td><td>Accesso alle informazioni di sistema (tramite <code>wmic</code>, VBScript o COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI per testare le query WMI</td></tr><tr><td><code>eventvwr</code></td><td>Visualizzatore registri eventi</td></tr><tr><td><code>perfmon</code></td><td>Monitoraggio delle risorse</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Esempi di automazione:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>File VBScript (<code>*.vbs</code>) per l'amministrazione di utenti, reti, stampanti e servizi.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî interfaccia della riga di comando per WMI (ad esempio: <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Script <code>.cmd</code> con chiamate a <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, ecc.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Apparso per la prima volta in <strong>Windows 98</strong>, attivamente utilizzato in <strong>Windows 2000 e XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Consentiva l'esecuzione di file VBScript e JScript dalla riga di comando:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h2 class=\"wp-block-heading\">Parte 1.</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Solo nel 2002, l'azienda ha formulato il <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">progetto Monad</a>, che in seguito √® diventato PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Inizio dello sviluppo: circa nel 2002</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Annuncio pubblico: 2003, come \"Monad Shell\"</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Prime versioni beta: apparse entro il 2005</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Rilascio finale (PowerShell 1.0): novembre 2006</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>L'autore e architetto principale del progetto Monad / PowerShell √® <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">Jeffrey Snover</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Oggi, PowerShell Core funziona su</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Parallelamente, √® stato sviluppato il framework .NET e PowerShell vi √® stato profondamente integrato; nei capitoli successivi mostrer√≤ degli esempi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>E ora ‚Äî la parte pi√π importante!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Il vantaggio principale di PowerShell rispetto alle shell di comando classiche √® che lavora con <em>oggetti</em>, non con testo. Quando si esegue un comando, esso restituisce non solo testo, ma un oggetto strutturato (o una collezione di oggetti) che ha propriet√† (Properties) e metodi (Methods) chiaramente definiti.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Guarda come PowerShell supera le shell classiche grazie al **lavoro con gli oggetti**</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üìÅ Com'era: <code>dir</code> e parsing manuale</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In <strong>CMD</strong> (sia nel vecchio <code>COMMAND.COM</code> che in <code>cmd.exe</code>), il comando <code>dir</code> restituisce il risultato come testo semplice. Esempio di output:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Supponiamo di voler estrarre il **nome del file** e la **dimensione** di ogni file. Dovremmo analizzare le stringhe manualmente:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Questo √® terribilmente difficile da leggere, dipende dalla locale, dal formato della data, dal font. E si rompe con gli spazi nei nomi.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">‚úÖ PowerShell: Oggetti anzich√© testo</h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">‚úî Esempio semplice e leggibile:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Risultato:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">Name          Length\n----          ------\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> restituisce un **array di oggetti file/cartella**.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> consente un facile recupero delle **propriet√†** necessarie.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">üîç Cosa restituisce effettivamente <code>Get-ChildItem</code>?</h3>\n<!-- /wp:heading -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><strong>Risultato:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"line-numbers\"><code class=\"language-text\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----         ---------      ----------\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>PowerShell restituisce **oggetti di tipo <code>System.IO.FileInfo</code>**, che hanno:</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üß± Propriet√† (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† Metodi (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, ecc.)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Si lavora **con oggetti a tutti gli effetti**, non con stringhe.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Sintassi \"Verbo-Nome\":</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell utilizza una **sintassi di comando rigorosa e logica**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>Verbo-Nome</code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Verbo</th><th>Cosa fa</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Ottieni</td></tr><tr><td><code>Set-</code></td><td>Imposta</td></tr><tr><td><code>New-</code></td><td>Crea</td></tr><tr><td><code>Remove-</code></td><td>Rimuovi</td></tr><tr><td><code>Start-</code></td><td>Avvia</td></tr><tr><td><code>Stop-</code></td><td>Ferma</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Nome</th><th>Su cosa opera</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Processo</td></tr><tr><td><code>Service</code></td><td>Servizio</td></tr><tr><td><code>Item</code></td><td>File/cartella</td></tr><tr><td><code>EventLog</code></td><td>Registri eventi</td></tr><tr><td><code>Computer</code></td><td>Computer</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4 class=\"wp-block-heading\">üîÑ Esempi:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Cosa bisogna fare</th><th>Comando</th></tr></thead><tbody><tr><td>Ottieni processi</td><td><code>Get-Process</code></td></tr><tr><td>Ferma servizio</td><td><code>Stop-Service</code></td></tr><tr><td>Crea nuovo file</td><td><code>New-Item</code></td></tr><tr><td>Ottieni contenuto cartella</td><td><code>Get-ChildItem</code></td></tr><tr><td>Rimuovi file</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Anche se **non conosci il comando esatto**, puoi **supporlo** in base al suo significato ‚Äî e quasi sempre indovinerai.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Il cmdlet <code>Get-Help</code> √® il tuo principale assistente.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>Ottieni aiuto sull'aiuto stesso:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Ottieni aiuto di base su un comando per lavorare con i processi:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre></code></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Vedi esempi di utilizzo di questo comando:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre></code><br>Questo √® un parametro incredibilmente utile che spesso fornisce soluzioni pronte per i tuoi compiti.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Ottieni le informazioni pi√π dettagliate sul comando:</strong>\n<code><pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre></code></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Nella prossima parte: pipeline o catena di comandi (PipeLines)</p>\n<!-- /wp:paragraph -->[:]",
  "post_status": "publish",
  "post_author": 1,
  "_seo_description": "[:en]Explore the history of command-line interfaces from MS-DOS to PowerShell. Understand the evolution from batch files to object-oriented shells, the impact of Windows NT, and core PowerShell concepts like Verb-Noun syntax and object pipelines.[:de]Entdecken Sie die Geschichte der Kommandozeilen-Schnittstellen von MS-DOS bis PowerShell. Verstehen Sie die Entwicklung von Batch-Dateien zu objektorientierten Shells, den Einfluss von Windows NT und grundlegende PowerShell-Konzepte wie die Verb-Nomen-Syntax und Objekt-Pipelines.[:fr]Explorez l'histoire des interfaces de ligne de commande, de MS-DOS √† PowerShell. Comprenez l'√©volution des fichiers batch vers les shells orient√©s objet, l'impact de Windows NT et les concepts fondamentaux de PowerShell comme la syntaxe Verbe-Nom et les pipelines d'objets.[:es]Explora la historia de las interfaces de l√≠nea de comandos desde MS-DOS hasta PowerShell. Comprende la evoluci√≥n de los archivos por lotes a los shells orientados a objetos, el impacto de Windows NT y los conceptos clave de PowerShell como la sintaxis Verbo-Sustantivo y las canalizaciones de objetos.[:uk]–î–æ—Å–ª—ñ–¥—ñ—Ç—å —ñ—Å—Ç–æ—Ä—ñ—é –∫–æ–º–∞–Ω–¥–Ω–∏—Ö —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ –≤—ñ–¥ MS-DOS –¥–æ PowerShell. –ó—Ä–æ–∑—É–º—ñ–π—Ç–µ –µ–≤–æ–ª—é—Ü—ñ—é –≤—ñ–¥ –ø–∞–∫–µ—Ç–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –¥–æ –æ–±'—î–∫—Ç–Ω–æ-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–∏—Ö –æ–±–æ–ª–æ–Ω–æ–∫, –≤–ø–ª–∏–≤ Windows NT —Ç–∞ –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó PowerShell, —Ç–∞–∫—ñ —è–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫ —Ç–∞ –æ–±'—î–∫—Ç–Ω—ñ –∫–æ–Ω–≤–µ—î—Ä–∏.[:pl]Poznaj historiƒô interfejs√≥w wiersza polece≈Ñ od MS-DOS do PowerShell. Zrozum ewolucjƒô od plik√≥w wsadowych do pow≈Çok zorientowanych obiektowo, wp≈Çyw systemu Windows NT oraz podstawowe koncepcje PowerShell, takie jak sk≈Çadnia Czasownik-Rzeczownik i potoki obiekt√≥w.[:it]Esplora la storia delle interfacce a riga di comando da MS-DOS a PowerShell. Comprendi l'evoluzione dai file batch alle shell orientate agli oggetti, l'impatto di Windows NT e i concetti chiave di PowerShell come la sintassi Verbo-Nome e le pipeline di oggetti.[:]",
  "_seo_keywords": "[:en]PowerShell, MS-DOS, COMMAND.COM, batch files, sh, csh, UNIX, Windows NT, automation, scripting, objects, Verb-Noun, Get-Help, pipeline[:de]PowerShell, MS-DOS, COMMAND.COM, Batch-Dateien, sh, csh, UNIX, Windows NT, Automatisierung, Skripting, Objekte, Verb-Nomen, Get-Help, Pipeline[:fr]PowerShell, MS-DOS, COMMAND.COM, fichiers batch, sh, csh, UNIX, Windows NT, automatisation, scripting, objets, Verbe-Nom, Get-Help, pipeline[:es]PowerShell, MS-DOS, COMMAND.COM, archivos por lotes, sh, csh, UNIX, Windows NT, automatizaci√≥n, scripting, objetos, Verbo-Sustantivo, Get-Help, canalizaci√≥n[:uk]PowerShell, MS-DOS, COMMAND.COM, –ø–∞–∫–µ—Ç–Ω—ñ —Ñ–∞–π–ª–∏, sh, csh, UNIX, Windows NT, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è, —Å—Ü–µ–Ω–∞—Ä—ñ—ó, –æ–±'—î–∫—Ç–∏, –î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫, Get-Help, –∫–æ–Ω–≤–µ—î—Ä[:pl]PowerShell, MS-DOS, COMMAND.COM, pliki wsadowe, sh, csh, UNIX, Windows NT, automatyzacja, skrypty, obiekty, Czasownik-Rzeczownik, Get-Help, potok[:it]PowerShell, MS-DOS, COMMAND.COM, file batch, sh, csh, UNIX, Windows NT, automazione, scripting, oggetti, Verbo-Nome, Get-Help, pipeline[:]"
}
{
  "post_title": "[:en]PowerShell Philosophy[:he]◊§◊ô◊ú◊ï◊°◊ï◊§◊ô◊ô◊™ PowerShell[:fr]Philosophie PowerShell[:es]Filosof√≠a de PowerShell[:uk]–§—ñ–ª–æ—Å–æ—Ñ—ñ—è PowerShell[:pl]Filozofia PowerShell[:de]PowerShell-Philosophie[:it]Filosofia di PowerShell[:]",
  "post_content": "[:en]<!-- wp:heading {\"level\":1} -->\n<h3 class=\"wp-block-heading\">Part 0.</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>What existed before PowerShell?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In 1981, MS-DOS 1.0 was released with the command interpreter <code>COMMAND.COM</code>. For task automation, **batch files (<code>.bat</code>)** were used ‚Äî simple text files containing a sequence of console commands. This presented an astonishing command-line asceticism compared to POSIX-compatible systems, where the **Bourne shell (<code>sh</code>)** had existed since 1979.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">üìÖ State of the Shell Market at the Time of **MS-DOS 1.0** Release (August 1981)</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Here is a summary table of popular OS at that time and their shell support (<code>sh</code>, <code>csh</code>, etc.):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Operating System</th><th>Shell Support (<code>sh</code>, <code>csh</code>, others)</th><th>Comment</th></tr></thead><tbody><tr><td><strong>UNIX Version 7 (V7)</strong></td><td><code>sh</code></td><td>Last classic Bell Labs UNIX, widely distributed</td></tr><tr><td><strong>UNIX/32V</strong></td><td><code>sh</code>, <code>csh</code></td><td>UNIX version for VAX architecture</td></tr><tr><td><strong>4BSD / 3BSD</strong></td><td><code>sh</code>, <code>csh</code></td><td>University branch of UNIX from Berkeley</td></tr><tr><td><strong>UNIX System III</strong></td><td><code>sh</code></td><td>First commercial version from AT&amp;T, predecessor to System V</td></tr><tr><td><strong>Xenix (by Microsoft)</strong></td><td><code>sh</code></td><td>Licensed UNIX version, sold by Microsoft since 1980</td></tr><tr><td><strong>IDRIS</strong></td><td><code>sh</code></td><td>UNIX-like OS for PDP-11 and Intel</td></tr><tr><td><strong>Coherent (Mark Williams)</strong></td><td><code>sh</code> (similar)</td><td>Inexpensive UNIX alternative for PCs</td></tr><tr><td><strong>CP/M (Digital Research)</strong></td><td>‚ùå (No <code>sh</code>, only simplest CLI)</td><td>Not UNIX, most popular OS for 8-bit PCs</td></tr><tr><td><strong>MS-DOS 1.0</strong></td><td>‚ùå (only <code>COMMAND.COM</code>)</td><td>Minimal command shell, no scripts or pipes</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">üí° What are <code>sh</code>, <code>csh</code></h4>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>sh</code> ‚Äî <strong>Bourne Shell</strong>, the primary UNIX scripting interpreter since 1977.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>csh</code> ‚Äî <strong>C Shell</strong>, an improved shell with C-like syntax and conveniences for interactive work.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>These shells **supported redirects, pipes, variables, functions, and conditions** ‚Äî everything that made UNIX a powerful automation tool.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft focused on **cheap 16-bit IBM PCs**, which had **little memory** (typically 64‚Äì256 KB), lacked multitasking, and were intended for **home and office use**, not servers. UNIX was paid, required complex architecture and experience, and accountants and engineers, not system administrators, needed a fast and simple OS.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead of the complex <code>sh</code>, the DOS interface presented a single <code>command.com</code> file with a meager set of internal commands (<a href=\"https://www.techgeekbuzz.com/blog/dos-commands/\" target=\"_blank\" rel=\"noreferrer noopener\">dir, copy, del, etc.</a>) without functions, loops, or modules.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There were also external commands ‚Äî separate executable files (<code>.exe</code> or <code>.com</code>). Examples: <code>FORMAT.COM</code>, <code>XCOPY.EXE</code>, <code>CHKDSK.EXE</code>, <code>EDIT.COM</code>.\nExecution scripts were written in a text file with the <code>.bat</code> extension (batch file).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3 class=\"wp-block-heading\">Examples of configuration files:</h3>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>AUTOEXEC.BAT</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>CONFIG.SYS</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: AUTOEXEC.BAT ‚Äî Automatic configuration and launch of Windows 3.11\n:: Author: hypo69\n:: Year: approximately 1993\n:: Purpose: Initializes the DOS environment, loads network drivers, and starts Windows 3.11\n:: ------------------------------------------------------------------------------\n@ECHO OFF\n\n:: Configure the command prompt\nPROMPT $p$g\n\n:: Set environment variables\nSET TEMP=C:\\TEMP\nPATH=C:\\DOS;C:\\WINDOWS\n\n:: Load drivers and utilities into upper memory\nLH C:\\DOS\\SMARTDRV.EXE       :: Disk cache\nLH C:\\DOS\\MOUSE.COM          :: Mouse driver\n\n:: Load network services (relevant for Windows for Workgroups 3.11)\nIF EXIST C:\\NET\\NET.EXE LH C:\\NET\\NET START\n\n:: Automatic launch of Windows\nWIN\n\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-batch\">:: ------------------------------------------------------------------------------\n:: CONFIG.SYS ‚Äî DOS memory and driver configuration for Windows 3.11\n:: Author: hypo69\n:: Year: approximately 1993\n:: Purpose: Initializes memory drivers, configures system parameters\n:: ------------------------------------------------------------------------------\nDEVICE=C:\\DOS\\HIMEM.SYS\nDEVICE=C:\\DOS\\EMM386.EXE NOEMS\nDOS=HIGH,UMB\nFILES=40\nBUFFERS=30\nDEVICEHIGH=C:\\DOS\\SETVER.EXE\n\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>In Microsoft, parallel to DOS, a fundamentally new kernel began to be developed almost immediately.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The <a href=\"https://www.wikiwand.com/ru/articles/Windows_NT\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>Windows NT</strong></a> (New Technology) kernel first appeared with the release of the operating system:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><strong>Windows NT 3.1 ‚Äî July 27, 1993</strong></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><strong>Development began</strong>: in <strong>1988</strong> under the leadership of <strong>Dave Cutler</strong> (former DEC engineer, creator of VMS) with the goal of creating a completely new, secure, portable, and multitasking OS, not compatible with MS-DOS at the kernel level.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>NT 3.1</strong> ‚Äî was named to emphasize compatibility with <strong>Windows 3.1</strong> at the interface level, but was a <strong>completely new architecture</strong>.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">üß† What the NT kernel brought:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Feature</th><th>Description</th></tr></thead><tbody><tr><td><strong>32-bit architecture</strong></td><td>Unlike MS-DOS and Windows 3.x, which were 16-bit.</td></tr><tr><td><strong>Multitasking</strong></td><td>True preemptive multitasking.</td></tr><tr><td><strong>Protected memory</strong></td><td>Programs could not corrupt each other's memory.</td></tr><tr><td><strong>Modularity</strong></td><td>Multi-layered kernel architecture: HAL, Executive, Kernel, drivers.</td></tr><tr><td><strong>Cross-platform support</strong></td><td>NT 3.1 ran on x86, MIPS, and Alpha.</td></tr><tr><td><strong>POSIX compatibility</strong></td><td>NT shipped with a <strong>POSIX subsystem</strong>, certified to POSIX.1.</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">üìú NT Lineup:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>NT Version</th><th>Year</th><th>Comment</th></tr></thead><tbody><tr><td>NT 3.1</td><td>1993</td><td>First NT release</td></tr><tr><td>NT 3.5 / 3.51</td><td>1994‚Äì1995</td><td>Improvements, optimization</td></tr><tr><td>NT 4.0</td><td>1996</td><td>Windows 95 interface, but NT kernel</td></tr><tr><td>Windows 2000</td><td>2000</td><td>NT 5.0</td></tr><tr><td>Windows XP</td><td>2001</td><td>NT 5.1</td></tr><tr><td>Windows Vista</td><td>2007</td><td>NT 6.0</td></tr><tr><td>Windows 10</td><td>2015</td><td>NT 10.0</td></tr><tr><td>Windows 11</td><td>2021</td><td>Also NT 10.0 (marketing üòä)</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Difference in operating system capabilities:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Characteristic</th><th><strong>MS-DOS</strong> (1981)</th><th><strong>Windows NT</strong> (1993)</th></tr></thead><tbody><tr><td><strong>System Type</strong></td><td>Monolithic, single-tasking</td><td>Microkernel/hybrid, multitasking</td></tr><tr><td><strong>Bitness</strong></td><td>16-bit</td><td>32-bit (with 64-bit support from NT 5.2 / XP x64)</td></tr><tr><td><strong>Multitasking</strong></td><td>‚ùå Absent (one process at a time)</td><td>‚úÖ Preemptive multitasking</td></tr><tr><td><strong>Protected Memory</strong></td><td>‚ùå No</td><td>‚úÖ Yes (each process in its own address space)</td></tr><tr><td><strong>Multi-user Mode</strong></td><td>‚ùå No</td><td>‚úÖ Partially (in NT Workstation/Server)</td></tr><tr><td><strong>POSIX Compatibility</strong></td><td>‚ùå No</td><td>‚úÖ Built-in POSIX subsystem in NT 3.1‚Äì5.2</td></tr><tr><td><strong>Kernel Portability</strong></td><td>‚ùå x86 only</td><td>‚úÖ x86, MIPS, Alpha, PowerPC</td></tr><tr><td><strong>Drivers</strong></td><td>Direct hardware access</td><td>Via HAL and Kernel-mode Drivers</td></tr><tr><td><strong>Application Access Level</strong></td><td>Applications = system level</td><td>User / Kernel level separated</td></tr><tr><td><strong>Security</strong></td><td>‚ùå Absent</td><td>‚úÖ Security model: SID, ACL, access tokens</td></tr><tr><td><strong>Stability</strong></td><td>‚ùå One program's failure = OS crash</td><td>‚úÖ Process isolation, kernel protection</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>But there was one big BUT! Proper attention to automation and administration tools was not given until 2002.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>Microsoft used completely different approaches, strategies, and tools for administration. All of this was **disparate**, often GUI-oriented, and not always automatable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üìå List of some tools:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Tool</th><th>Purpose</th></tr></thead><tbody><tr><td><code>cmd.exe</code></td><td>Improved command interpreter (replacement for <code>COMMAND.COM</code>)</td></tr><tr><td><code>.bat</code>, <code>.cmd</code></td><td>Command-line scripts</td></tr><tr><td><strong>Windows Script Host (WSH)</strong></td><td>Support for VBScript and JScript for automation</td></tr><tr><td><code>reg.exe</code></td><td>Registry management from the command line</td></tr><tr><td><code>net.exe</code></td><td>Working with users, network, printers</td></tr><tr><td><code>sc.exe</code></td><td>Service management</td></tr></tr><tr><td><code>tasklist</code>, <code>taskkill</code></td><td>Process management</td></tr><tr><td><code>gpedit.msc</code></td><td>Group Policy (local)</td></tr><tr><td><code>MMC</code></td><td>Console with snap-ins for management</td></tr><tr><td><code>WMI</code></td><td>Access to system information (via <code>wmic</code>, VBScript, or COM)</td></tr><tr><td><code>WbemTest.exe</code></td><td>GUI for testing WMI queries</td></tr><tr><td><code>eventvwr</code></td><td>Event log viewer</td></tr><tr><td><code>perfmon</code></td><td>Resource monitoring</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":5} -->\n<h5 class=\"wp-block-heading\">üõ† Automation Examples:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>VBScript files (<code>*.vbs</code>) for administering users, networks, printers, and services.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>WMIC</code> ‚Äî command-line interface to WMI (e.g., <code>wmic process list brief</code>).</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>.cmd</code> scripts with calls to <code>net</code>, <code>sc</code>, <code>reg</code>, <code>wmic</code>, etc.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">‚öôÔ∏è Windows Scripting Host (WSH)</h4>\n<!-- /wp:heading -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>First appeared in <strong>Windows 98</strong>, actively used in <strong>Windows 2000 and XP</strong>.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Allowed running VBScript and JScript files from the command line:</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-vbscript\">Set objShell = WScript.CreateObject(\"WScript.Shell\")\nobjShell.Run \"notepad.exe\"\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":1} -->\n<h3 class=\"wp-block-heading\">Part 1.</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>It wasn't until 2002 that the company formulated the <a href=\"https://learn.microsoft.com/en-us/powershell/scripting/developer/monad-manifesto?view=powershell-7.5\" target=\"_blank\" rel=\"noreferrer noopener\">Monad</a> project, which later evolved into PowerShell:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>Development began: approximately in 2002</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Public announcement: 2003, as \"Monad Shell\"</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>First beta versions: appeared by 2005</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>Final release (PowerShell 1.0): November 2006</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>The author and chief architect of the Monad / PowerShell project is Jeffrey Snover <a href=\"https://www.wikiwand.com/en/articles/Jeffrey_Snover\" target=\"_blank\" rel=\"noreferrer noopener\">(Jeffrey Snover)</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Today PowerShell Core runs on</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-core.md\" target=\"_blank\" rel=\"noreferrer noopener\">Windows</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/macos.md\" target=\"_blank\" rel=\"noreferrer noopener\">macOS</a></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><a href=\"https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\" target=\"_blank\" rel=\"noreferrer noopener\">Linux</a></li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>In parallel, the .NET framework was being developed, and PowerShell was deeply integrated into it; I will show examples in the following chapters.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And now ‚Äî the most important thing!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The main advantage of PowerShell compared to classic command shells is that it works with <em>objects</em>, not text. When you execute a command, it returns not just text, but a structured object (or a collection of objects) that has clearly defined properties and methods.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>See how PowerShell surpasses classic shells thanks to **working with objects**</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">üìÅ How it used to be: <code>dir</code> and manual parsing</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In <strong>CMD</strong> (both in the old <code>COMMAND.COM</code> and in <code>cmd.exe</code>), the <code>dir</code> command returns the result as plain text. Output example:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">24.07.2025  21:15         1 428  my_script.js\n25.07.2025  08:01         3 980  report.html\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Suppose you want to extract the **file name** and **size** of each file. You would have to parse the lines manually:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-cmd\">for /f \"tokens=5,6\" %a in ('dir ^| findstr /R \"[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9][0-9]\"') do @echo %a %b\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>This is incredibly difficult to read, depends on locale, date format, font. And breaks with spaces in names.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">‚úÖ PowerShell: Objects Instead of Text</h4>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">‚úî Simple and readable example:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-ChildItem | Select-Object Name, Length\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p><strong>Result:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">Name          Length\n----\nmy_script.js   1428\nreport.html    3980\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li><code>Get-ChildItem</code> returns an **array of file/folder objects**.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><code>Select-Object</code> allows easy retrieval of desired **properties**.</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">üîç What does <code>Get-ChildItem</code> actually return?</h4>\n<!-- /wp:heading -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">$item = Get-ChildItem -Path .\\my_script.js\n$item | Get-Member\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p><strong>Result:</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-plaintext\">TypeName: System.IO.FileInfo\n\nName         MemberType     Definition\n----\nLength       Property       long Length {get;}\nName         Property       string Name {get;}\nCreationTime Property       datetime CreationTime {get;set;}\nDelete       Method         void Delete()\n...\n</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>PowerShell returns **objects of type <code>System.IO.FileInfo</code>**, which have:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><!-- wp:list-item -->\n<li>üß± Properties (<code>Name</code>, <code>Length</code>, <code>CreationTime</code>, <code>Extension</code>, ‚Ä¶)</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li>üõ† Methods (<code>Delete()</code>, <code>CopyTo()</code>, <code>MoveTo()</code>, etc.)</li>\n<!-- /wp:list-item --></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>You work **with full-fledged objects**, not with strings.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:heading {\"level\":2} -->\n<h4 class=\"wp-block-heading\">Verb-Noun Syntax:</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>PowerShell uses a **strict and logical command syntax**:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><code>Verb-Noun</code></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Verb</th><th>What it does</th></tr></thead><tbody><tr><td><code>Get-</code></td><td>Get</td></tr><tr><td><code>Set-</code></td><td>Set</td></tr><tr><td><code>New-</code></td><td>Create</td></tr><tr><td><code>Remove-</code></td><td>Remove</td></tr><tr><td><code>Start-</code></td><td>Start</td></tr><tr><td><code>Stop-</code></td><td>Stop</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>Noun</th><th>What it works on</th></tr></thead><tbody><tr><td><code>Process</code></td><td>Process</td></tr><tr><td><code>Service</code></td><td>Service</td></tr><tr><td><code>Item</code></td><td>File/folder</td></tr><tr><td><code>EventLog</code></td><td>Event logs</td></tr><tr><td><code>Computer</code></td><td>Computer</td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:heading {\"level\":3} -->\n<h5 class=\"wp-block-heading\">üîÑ Examples:</h5>\n<!-- /wp:heading -->\n\n<!-- wp:table -->\n<figure class=\"wp-block-table\"><table><thead><tr><th>What needs to be done</th><th>Command</th></tr></thead><tbody><tr><td>Get processes</td><td><code>Get-Process</code></td></tr><tr><td>Stop service</td><td><code>Stop-Service</code></td></tr><tr><td>Create new file</td><td><code>New-Item</code></td></tr><tr><td>Get folder contents</td><td><code>Get-ChildItem</code></td></tr><tr><td>Remove file</td><td><code>Remove-Item</code></td></tr></tbody></table></figure>\n<!-- /wp:table -->\n\n<!-- wp:paragraph -->\n<p>‚û° Even if you **don't know the exact command**, you can **guess** it by its meaning ‚Äî and you'll almost always be right.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:separator -->\n<hr class=\"wp-block-separator has-alpha-channel-opacity\"/>\n<!-- /wp:separator -->\n\n<!-- wp:paragraph -->\n<p>The <code>Get-Help</code> cmdlet is your main assistant.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {"ordered":true} -->\n<ol><!-- wp:list-item -->\n<li><strong>Get help about help itself:</strong>\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Help\n</code></pre>\n<!-- /wp:html --></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Get basic help about the command for working with processes:</strong>\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process\n</code></pre>\n<!-- /wp:html --></li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>See examples of using this command:</strong>\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Examples\n</code></pre>\n<!-- /wp:html -->\nThis is an incredibly useful parameter that often provides ready-made solutions for your tasks.</li>\n<!-- /wp:list-item -->\n<!-- wp:list-item -->\n<li><strong>Get maximum detailed information about the command:</strong>\n<!-- wp:html -->\n<pre class=\"line-numbers\"><code class=\"language-powershell\">Get-Help Get-Process -Full\n</code></pre>\n<!-- /wp:html --></li>\n<!-- /wp:list-item --></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>In the next part: pipeline or command chain (PipeLines)</p>\n<!-- /wp:paragraph -->[:] ÿ®ŸÑÿß ÿ®ŸÑÿß",
  "post_status": "publish",
  "post_author": 1,
  "_seo_description": "[:en]Explore the evolution of command-line interfaces from MS-DOS to Windows NT, culminating in the object-oriented design of PowerShell, and its core concepts like Verb-Noun syntax and object pipelines.[:he]◊ó◊ß◊®◊ï ◊ê◊™ ◊î◊™◊§◊™◊ó◊ï◊™ ◊û◊û◊©◊ß◊ô ◊©◊ï◊®◊™ ◊î◊§◊ß◊ï◊ì◊î ◊û-MS-DOS ◊ï◊¢◊ì ◊ú-Windows NT, ◊©◊ô◊ê◊ï ◊ë◊¢◊ô◊¶◊ï◊ë ◊î◊û◊ï◊†◊ó◊î-◊¢◊¶◊û◊ô◊ù ◊©◊ú PowerShell, ◊ï◊û◊ï◊©◊í◊ô ◊î◊ú◊ô◊ë◊î ◊©◊ú◊ï ◊õ◊û◊ï ◊™◊ó◊ë◊ô◊® ◊§◊ï◊¢◊ú-◊©◊ù ◊¢◊¶◊ù ◊ï◊¶◊ô◊†◊ï◊®◊ï◊™ ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù.[:fr]Explorez l'√©volution des interfaces en ligne de commande de MS-DOS √† Windows NT, culminant dans la conception orient√©e objet de PowerShell, et ses concepts cl√©s tels que la syntaxe Verbe-Nom et les pipelines d'objets.[:es]Descubra la evoluci√≥n de las interfaces de l√≠nea de comandos desde MS-DOS hasta Windows NT, culminando en el dise√±o orientado a objetos de PowerShell, y sus conceptos clave como la sintaxis Verbo-Sustantivo y los pipelines de objetos.[:uk]–î–æ—Å–ª—ñ–¥—ñ—Ç—å –µ–≤–æ–ª—é—Ü—ñ—é —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –≤—ñ–¥ MS-DOS –¥–æ Windows NT, —â–æ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—è –æ–±'—î–∫—Ç–Ω–æ-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º PowerShell, —Ç–∞ –π–æ–≥–æ –∫–ª—é—á–æ–≤—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó, —Ç–∞–∫—ñ —è–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å \"–î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫\" —Ç–∞ –æ–±'—î–∫—Ç–Ω—ñ –∫–æ–Ω–≤–µ—î—Ä–∏.[:pl]Poznaj ewolucjƒô interfejs√≥w wiersza polece≈Ñ od MS-DOS do Windows NT, kt√≥rej zwie≈Ñczeniem jest obiektowe podej≈õcie PowerShell oraz jego kluczowe koncepcje, takie jak sk≈Çadnia Czasownik-Rzeczownik i potoki obiekt√≥w.[:de]Entdecken Sie die Entwicklung von Befehlszeilen-Schnittstellen von MS-DOS zu Windows NT, gipfelnd im objektorientierten Design von PowerShell, und dessen Kernkonzepte wie die Verb-Nomen-Syntax und Objekt-Pipelines.[:it]Esplora l'evoluzione delle interfacce a riga di comando da MS-DOS a Windows NT, culminando nel design orientato agli oggetti di PowerShell, e i suoi concetti chiave come la sintassi Verbo-Nome e le pipeline di oggetti.[:]",
  "_seo_keywords": "[:en]PowerShell, MS-DOS, Windows NT, command line, scripting, Monad, Jeffrey Snover, objects, automation, Verb-Noun, Get-Help[:he]PowerShell, MS-DOS, Windows NT, ◊©◊ï◊®◊™ ◊§◊ß◊ï◊ì◊î, ◊°◊ß◊®◊ô◊§◊ò◊ô◊ù, Monad, ◊í'◊§◊®◊ô ◊°◊†◊ï◊ë◊®, ◊ê◊ï◊ë◊ô◊ô◊ß◊ò◊ô◊ù, ◊ê◊ï◊ò◊ï◊û◊¶◊ô◊î, ◊§◊ï◊¢◊ú-◊©◊ù ◊¢◊¶◊ù, Get-Help[:fr]PowerShell, MS-DOS, Windows NT, ligne de commande, scripting, Monad, Jeffrey Snover, objets, automatisation, Verbe-Nom, Get-Help[:es]PowerShell, MS-DOS, Windows NT, l√≠nea de comandos, scripting, Monad, Jeffrey Snover, objetos, automatizaci√≥n, Verbo-Sustantivo, Get-Help[:uk]PowerShell, MS-DOS, Windows NT, –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä—è–¥–æ–∫, —Å—Ü–µ–Ω–∞—Ä—ñ—ó, Monad, –î–∂–µ—Ñ—Ñ—Ä—ñ –°–Ω–æ–≤–µ—Ä, –æ–±'—î–∫—Ç–∏, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è, –î—ñ—î—Å–ª–æ–≤–æ-–Ü–º–µ–Ω–Ω–∏–∫, Get-Help[:pl]PowerShell, MS-DOS, Windows NT, wiersz polece≈Ñ, skrypty, Monad, Jeffrey Snover, obiekty, automatyzacja, Czasownik-Rzeczownik, Get-Help[:de]PowerShell, MS-DOS, Windows NT, Befehlszeile, Skripting, Monad, Jeffrey Snover, Objekte, Automatisierung, Verb-Nomen, Get-Help[:it]PowerShell, MS-DOS, Windows NT, riga di comando, scripting, Monad, Jeffrey Snover, oggetti, automazione, Verbo-Nome, Get-Help[:]"
}
